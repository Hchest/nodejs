/* eslint-disable */
;(function(root, factory) {
  if (typeof define === 'function' && define.amd) { // AMD
    define(['../core'], factory);
  } else if (typeof exports === 'object') { // Node.js
    module.exports = factory(require('../core'));
  } else { // Browser
    root.Blockly.Msg = factory(root.Blockly);
  }
}(this, function(Blockly) {

      var Blockly = {};Blockly.Msg={};// This file was automatically generated.  Do not modify.

'use strict';

Blockly.Msg["ADD_COMMENT"] = "添加注释";
Blockly.Msg["CANNOT_DELETE_VARIABLE_PROCEDURE"] = "不能删除变量“%1”，因为它是函数“%2”定义的一部分";
Blockly.Msg["CHANGE_VALUE_TITLE"] = "更改值：";
Blockly.Msg["CLEAN_UP"] = "整理块";
Blockly.Msg["COLLAPSED_WARNINGS_WARNING"] = "已收起的信息块内包含警告。";
Blockly.Msg["COLLAPSE_ALL"] = "折叠块";
Blockly.Msg["COLLAPSE_BLOCK"] = "折叠块";
Blockly.Msg["COLOUR_BLEND_COLOUR1"] = "颜色1";
Blockly.Msg["COLOUR_BLEND_COLOUR2"] = "颜色2";
Blockly.Msg["COLOUR_BLEND_HELPURL"] = "https://meyerweb.com/eric/tools/color-blend/#:::rgbp";  // untranslated
Blockly.Msg["COLOUR_BLEND_RATIO"] = "比例";
Blockly.Msg["COLOUR_BLEND_TITLE"] = "混合";
Blockly.Msg["COLOUR_BLEND_TOOLTIP"] = "把两种颜色以一个给定的比例(0.0-1.0)进行混合。";
Blockly.Msg["COLOUR_PICKER_HELPURL"] = "https://zh.wikipedia.org/wiki/颜色";
Blockly.Msg["COLOUR_PICKER_TOOLTIP"] = "从调色板中选择一种颜色。";
Blockly.Msg["COLOUR_RANDOM_HELPURL"] = "http://randomcolour.com";  // untranslated
Blockly.Msg["COLOUR_RANDOM_TITLE"] = "随机颜色";
Blockly.Msg["COLOUR_RANDOM_TOOLTIP"] = "随机选择一种颜色。";
Blockly.Msg["COLOUR_RGB_BLUE"] = "蓝色";
Blockly.Msg["COLOUR_RGB_GREEN"] = "绿色";
Blockly.Msg["COLOUR_RGB_HELPURL"] = "https://www.december.com/html/spec/colorpercompact.html";  // untranslated
Blockly.Msg["COLOUR_RGB_RED"] = "红色";
Blockly.Msg["COLOUR_RGB_TITLE"] = "颜色";
Blockly.Msg["COLOUR_RGB_TOOLTIP"] = "通过指定红色、绿色和蓝色的量创建一种颜色。所有的值必须在0和100之间。";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK"] = "跳出循环";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE"] = "继续下一轮循环";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK"] = "跳出包含它的循环。";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE"] = "跳过本轮循环的剩余部分，并继进行续下一轮迭代。";
Blockly.Msg["CONTROLS_FLOW_STATEMENTS_WARNING"] = "警告：这个块只能在循环内使用。";
Blockly.Msg["CONTROLS_FOREACH_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg["CONTROLS_FOREACH_TITLE"] = "为列表 %2 里的每一项 %1";
Blockly.Msg["CONTROLS_FOREACH_TOOLTIP"] = "遍历列表中的每一项，将变量“%1”设为所选项，并执行一些语句。";
Blockly.Msg["CONTROLS_FOR_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg["CONTROLS_FOR_TITLE"] = "变量 %1 从 %2 数到 %3 每次增加 %4";
Blockly.Msg["CONTROLS_FOR_TOOLTIP"] = "用变量%1记录从开始数值到终止数值之间的数值，数值按指定间隔增加，并执行指定的块。";
Blockly.Msg["CONTROLS_IF_ELSEIF_TOOLTIP"] = "在这个if语句块中增加一个条件。";
Blockly.Msg["CONTROLS_IF_ELSE_TOOLTIP"] = "在这个if语句块中添加一个最终的，包括所有其余情况的条件。";
Blockly.Msg["CONTROLS_IF_HELPURL"] = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg["CONTROLS_IF_IF_TOOLTIP"] = "增加、删除或重新排列各节来重新配置这个if语句块。";
Blockly.Msg["CONTROLS_IF_MSG_ELSE"] = "否则";
Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"] = "否则如果";
Blockly.Msg["CONTROLS_IF_MSG_IF"] = "如果";
Blockly.Msg["CONTROLS_IF_TOOLTIP_1"] = "如果值为真，执行一些语句。";
Blockly.Msg["CONTROLS_IF_TOOLTIP_2"] = "如果值为真，则执行第一块语句。否则，则执行第二块语句。";
Blockly.Msg["CONTROLS_IF_TOOLTIP_3"] = "如果第一个值为真，则执行第一块的语句。否则，如果第二个值为真，则执行第二块的语句。";
Blockly.Msg["CONTROLS_IF_TOOLTIP_4"] = "如果第一个值为真，则执行第一块对语句。否则，如果第二个值为真，则执行语句的第二块。如果没有值为真，则执行最后一块的语句。";
Blockly.Msg["CONTROLS_REPEAT_HELPURL"] = "https://zh.wikipedia.org/wiki/For循环";
Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"] = "执行";
Blockly.Msg["CONTROLS_REPEAT_TITLE"] = "重复 %1 次";
Blockly.Msg["CONTROLS_REPEAT_TOOLTIP"] = "多次执行一些语句。";
Blockly.Msg["CONTROLS_WHILEUNTIL_HELPURL"] = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_UNTIL"] = "重复直到条件满足";
Blockly.Msg["CONTROLS_WHILEUNTIL_OPERATOR_WHILE"] = "当条件满足时重复";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL"] = "只要值为假，执行一些语句。";
Blockly.Msg["CONTROLS_WHILEUNTIL_TOOLTIP_WHILE"] = "只要值为真，执行一些语句。";
Blockly.Msg["DELETE_ALL_BLOCKS"] = "删除所有 %1 个块吗？";
Blockly.Msg["DELETE_BLOCK"] = "删除块";
Blockly.Msg["DELETE_VARIABLE"] = "删除变量“%1”";
Blockly.Msg["DELETE_VARIABLE_CONFIRMATION"] = "要删除对变量“%2”的%1个引用吗？";
Blockly.Msg["DELETE_X_BLOCKS"] = "删除 %1 个块";
Blockly.Msg["DISABLE_BLOCK"] = "禁用块";
Blockly.Msg["DUPLICATE_BLOCK"] = "复制";
Blockly.Msg["DUPLICATE_COMMENT"] = "复制注释";
Blockly.Msg["ENABLE_BLOCK"] = "启用块";
Blockly.Msg["EXPAND_ALL"] = "展开块";
Blockly.Msg["EXPAND_BLOCK"] = "展开块";
Blockly.Msg["EXTERNAL_INPUTS"] = "外部输入";
Blockly.Msg["HELP"] = "帮助";
Blockly.Msg["INLINE_INPUTS"] = "单行输入";
Blockly.Msg["IOS_CANCEL"] = "取消";
Blockly.Msg["IOS_ERROR"] = "错误";
Blockly.Msg["IOS_OK"] = "确定";
Blockly.Msg["IOS_PROCEDURES_ADD_INPUT"] = "+添加输入";
Blockly.Msg["IOS_PROCEDURES_ALLOW_STATEMENTS"] = "允许的语句";
Blockly.Msg["IOS_PROCEDURES_DUPLICATE_INPUTS_ERROR"] = "这个函数有多个输入。";
Blockly.Msg["IOS_PROCEDURES_INPUTS"] = "输入";
Blockly.Msg["IOS_VARIABLES_ADD_BUTTON"] = "添加";
Blockly.Msg["IOS_VARIABLES_ADD_VARIABLE"] = "+添加变量";
Blockly.Msg["IOS_VARIABLES_DELETE_BUTTON"] = "删除";
Blockly.Msg["IOS_VARIABLES_EMPTY_NAME_ERROR"] = "你不能使用空白的变量名。";
Blockly.Msg["IOS_VARIABLES_RENAME_BUTTON"] = "重命名";
Blockly.Msg["IOS_VARIABLES_VARIABLE_NAME"] = "变量名";
Blockly.Msg["LISTS_CREATE_EMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-empty-list";
Blockly.Msg["LISTS_CREATE_EMPTY_TITLE"] = "创建空列表";
Blockly.Msg["LISTS_CREATE_EMPTY_TOOLTIP"] = "返回一个列表，长度为 0，不包含任何数据记录";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TITLE_ADD"] = "列表";
Blockly.Msg["LISTS_CREATE_WITH_CONTAINER_TOOLTIP"] = "增加、删除或重新排列各部分以此重新配置这个列表块。";
Blockly.Msg["LISTS_CREATE_WITH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg["LISTS_CREATE_WITH_INPUT_WITH"] = "建立列表从";
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TOOLTIP"] = "将一个项添加到列表中。";
Blockly.Msg["LISTS_CREATE_WITH_TOOLTIP"] = "建立一个具有任意数量项目的列表。";
Blockly.Msg["LISTS_GET_INDEX_FIRST"] = "第一个";
Blockly.Msg["LISTS_GET_INDEX_FROM_END"] = "倒数第#";
Blockly.Msg["LISTS_GET_INDEX_FROM_START"] = "#";
Blockly.Msg["LISTS_GET_INDEX_GET"] = "取得";
Blockly.Msg["LISTS_GET_INDEX_GET_REMOVE"] = "取得并移除";
Blockly.Msg["LISTS_GET_INDEX_LAST"] = "最后一个";
Blockly.Msg["LISTS_GET_INDEX_RANDOM"] = "随机的";
Blockly.Msg["LISTS_GET_INDEX_REMOVE"] = "移除";
Blockly.Msg["LISTS_GET_INDEX_TAIL"] = "-";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FIRST"] = "返回列表中的第一项。";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_FROM"] = "返回在列表中的指定位置的项。";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_LAST"] = "返回列表中的最后一项。";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_RANDOM"] = "返回列表中的随机一项。";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST"] = "移除并返回列表中的第一项。";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM"] = "移除并返回列表中的指定位置的项。";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST"] = "移除并返回列表中的最后一项。";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM"] = "移除并返回列表中的随机一项。";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST"] = "移除列表中的第一项";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM"] = "移除在列表中的指定位置的项。";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST"] = "移除列表中的最后一项";
Blockly.Msg["LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM"] = "删除列表中的随机一项。";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_END"] = "到倒数第#";
Blockly.Msg["LISTS_GET_SUBLIST_END_FROM_START"] = "到#";
Blockly.Msg["LISTS_GET_SUBLIST_END_LAST"] = "到最后";
Blockly.Msg["LISTS_GET_SUBLIST_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg["LISTS_GET_SUBLIST_START_FIRST"] = "获取子列表从第一个";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_END"] = "获取子列表从最后一个#";
Blockly.Msg["LISTS_GET_SUBLIST_START_FROM_START"] = "获取子列表从#";
Blockly.Msg["LISTS_GET_SUBLIST_TAIL"] = "-";
Blockly.Msg["LISTS_GET_SUBLIST_TOOLTIP"] = "复制列表中指定的部分。";
Blockly.Msg["LISTS_INDEX_FROM_END_TOOLTIP"] = "%1是最后一项。";
Blockly.Msg["LISTS_INDEX_FROM_START_TOOLTIP"] = "%1是第一项。";
Blockly.Msg["LISTS_INDEX_OF_FIRST"] = "寻找第一次出现的项";
Blockly.Msg["LISTS_INDEX_OF_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg["LISTS_INDEX_OF_LAST"] = "寻找最后一次出现的项";
Blockly.Msg["LISTS_INDEX_OF_TOOLTIP"] = "返回在列表中的第一/最后一个匹配项的索引值。如果找不到项目则返回%1。";
Blockly.Msg["LISTS_INLIST"] = "在列表中";
Blockly.Msg["LISTS_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg["LISTS_ISEMPTY_TITLE"] = "%1是空的";
Blockly.Msg["LISTS_ISEMPTY_TOOLTIP"] = "如果改列表为空，则返回真。";
Blockly.Msg["LISTS_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg["LISTS_LENGTH_TITLE"] = "%1的长度";
Blockly.Msg["LISTS_LENGTH_TOOLTIP"] = "返回列表的长度。";
Blockly.Msg["LISTS_REPEAT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg["LISTS_REPEAT_TITLE"] = "建立列表使用项 %1 重复 %2 次";
Blockly.Msg["LISTS_REPEAT_TOOLTIP"] = "建立包含指定重复次数的值的列表。";
Blockly.Msg["LISTS_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#reversing-a-list";
Blockly.Msg["LISTS_REVERSE_MESSAGE0"] = "倒转%1";
Blockly.Msg["LISTS_REVERSE_TOOLTIP"] = "倒转一个列表的拷贝。";
Blockly.Msg["LISTS_SET_INDEX_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg["LISTS_SET_INDEX_INPUT_TO"] = "值为";
Blockly.Msg["LISTS_SET_INDEX_INSERT"] = "插入在";
Blockly.Msg["LISTS_SET_INDEX_SET"] = "设置";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST"] = "在列表的起始处添加该项。";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_FROM"] = "插入在列表中指定位置的项。";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_LAST"] = "在列表的末尾处添加该项。";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM"] = "在列表的随机位置插入该项。";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FIRST"] = "设置列表中的第一项。";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_FROM"] = "设置在列表中指定位置的项。";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_LAST"] = "设置列表中的最后一项。";
Blockly.Msg["LISTS_SET_INDEX_TOOLTIP_SET_RANDOM"] = "设置列表中的随机一项。";
Blockly.Msg["LISTS_SORT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg["LISTS_SORT_ORDER_ASCENDING"] = "升序";
Blockly.Msg["LISTS_SORT_ORDER_DESCENDING"] = "降序";
Blockly.Msg["LISTS_SORT_TITLE"] = "排序%1 %2 %3";
Blockly.Msg["LISTS_SORT_TOOLTIP"] = "排序一个列表的拷贝。";
Blockly.Msg["LISTS_SORT_TYPE_IGNORECASE"] = "按字母排序，忽略大小写";
Blockly.Msg["LISTS_SORT_TYPE_NUMERIC"] = "按数字排序";
Blockly.Msg["LISTS_SORT_TYPE_TEXT"] = "按字母排序";
Blockly.Msg["LISTS_SPLIT_HELPURL"] = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg["LISTS_SPLIT_LIST_FROM_TEXT"] = "从文本制作列表";
Blockly.Msg["LISTS_SPLIT_TEXT_FROM_LIST"] = "从列表拆出文本";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_JOIN"] = "加入文本列表至一个文本，由分隔符分隔。";
Blockly.Msg["LISTS_SPLIT_TOOLTIP_SPLIT"] = "拆分文本到文本列表，按每个分隔符拆分。";
Blockly.Msg["LISTS_SPLIT_WITH_DELIMITER"] = "用分隔符";
Blockly.Msg["LOGIC_BOOLEAN_FALSE"] = "假";
Blockly.Msg["LOGIC_BOOLEAN_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg["LOGIC_BOOLEAN_TOOLTIP"] = "返回真或假。";
Blockly.Msg["LOGIC_BOOLEAN_TRUE"] = "真";
Blockly.Msg["LOGIC_COMPARE_HELPURL"] = "https://zh.wikipedia.org/wiki/不等";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_EQ"] = "如果两个输入结果相等，则返回真。";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GT"] = "如果第一个输入结果比第二个大，则返回真。";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_GTE"] = "如果第一个输入结果大于或等于第二个输入结果，则返回真。";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LT"] = "如果第一个输入结果比第二个小，则返回真。";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_LTE"] = "如果第一个输入结果小于或等于第二个输入结果，则返回真。";
Blockly.Msg["LOGIC_COMPARE_TOOLTIP_NEQ"] = "如果两个输入结果不相等，则返回真。";
Blockly.Msg["LOGIC_NEGATE_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#not";
Blockly.Msg["LOGIC_NEGATE_TITLE"] = "非%1";
Blockly.Msg["LOGIC_NEGATE_TOOLTIP"] = "如果输入结果为假，则返回真；如果输入结果为真，则返回假。";
Blockly.Msg["LOGIC_NULL"] = "空";
Blockly.Msg["LOGIC_NULL_HELPURL"] = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg["LOGIC_NULL_TOOLTIP"] = "返回空值。";
Blockly.Msg["LOGIC_OPERATION_AND"] = "并且";
Blockly.Msg["LOGIC_OPERATION_HELPURL"] = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg["LOGIC_OPERATION_OR"] = "或";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_AND"] = "如果两个输入结果都为真，则返回真。";
Blockly.Msg["LOGIC_OPERATION_TOOLTIP_OR"] = "如果至少有一个输入结果为真，则返回真。";
Blockly.Msg["LOGIC_TERNARY_CONDITION"] = "断言";
Blockly.Msg["LOGIC_TERNARY_HELPURL"] = "https://zh.wikipedia.org/wiki/条件运算符";
Blockly.Msg["LOGIC_TERNARY_IF_FALSE"] = "如果为假";
Blockly.Msg["LOGIC_TERNARY_IF_TRUE"] = "如果为真";
Blockly.Msg["LOGIC_TERNARY_TOOLTIP"] = "检查“断言”里的条件语句。如果条件为真，则返回“如果为真”的值，否则，则返回“如果为假”的值。";
Blockly.Msg["MATH_ADDITION_SYMBOL"] = "+";  // untranslated
Blockly.Msg["MATH_ARITHMETIC_HELPURL"] = "https://zh.wikipedia.org/wiki/算术";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_ADD"] = "返回两个数值的和。";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_DIVIDE"] = "返回两个数值的商。";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MINUS"] = "返回两个数值的差值。";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_MULTIPLY"] = "返回两个数值的乘积。";
Blockly.Msg["MATH_ARITHMETIC_TOOLTIP_POWER"] = "返回以第一个数值为底数，以第二个数值为幂的结果。";
Blockly.Msg["MATH_ATAN2_HELPURL"] = "https://zh.wikipedia.org/wiki/反正切2";
Blockly.Msg["MATH_ATAN2_TITLE"] = "点(x:%1,y:%2)的方位角";
Blockly.Msg["MATH_ATAN2_TOOLTIP"] = "返回点（X，Y）的反正切值，范围为-180到180度。";
Blockly.Msg["MATH_CHANGE_HELPURL"] = "https://zh.wikipedia.org/wiki/加法";
Blockly.Msg["MATH_CHANGE_TITLE"] = "将 %1 增加 %2";
Blockly.Msg["MATH_CHANGE_TOOLTIP"] = "为变量“%1”增加一个数值。";
Blockly.Msg["MATH_CONSTANT_HELPURL"] = "https://zh.wikipedia.org/wiki/数学常数";
Blockly.Msg["MATH_CONSTANT_TOOLTIP"] = "返回一个常见常量：π (3.141…)、e (2.718…)、φ (1.618…)、平方根 (1.414…)、开平方根 (0.707…)或∞ (无限大)。";
Blockly.Msg["MATH_CONSTRAIN_HELPURL"] = "https://en.wikipedia.org/wiki/Clamping_(graphics)";  // untranslated
Blockly.Msg["MATH_CONSTRAIN_TITLE"] = "将 %1 限制在 最低 %2 到最高 %3 之间";
Blockly.Msg["MATH_CONSTRAIN_TOOLTIP"] = "将一个数值限制在两个指定的数值范围（含边界）之间。";
Blockly.Msg["MATH_DIVISION_SYMBOL"] = "÷";  // untranslated
Blockly.Msg["MATH_IS_DIVISIBLE_BY"] = "可被整除";
Blockly.Msg["MATH_IS_EVEN"] = "是偶数";
Blockly.Msg["MATH_IS_NEGATIVE"] = "是负数";
Blockly.Msg["MATH_IS_ODD"] = "是奇数";
Blockly.Msg["MATH_IS_POSITIVE"] = "是正数";
Blockly.Msg["MATH_IS_PRIME"] = "是质数";
Blockly.Msg["MATH_IS_TOOLTIP"] = "检查一个数值是否是偶数、奇数、质数、自然数、正数、负数或者是否能被某数整除。返回真或假。";
Blockly.Msg["MATH_IS_WHOLE"] = "是整数";
Blockly.Msg["MATH_MODULO_HELPURL"] = "https://zh.wikipedia.org/wiki/模除";
Blockly.Msg["MATH_MODULO_TITLE"] = "取 %1 ÷ %2 的余数";
Blockly.Msg["MATH_MODULO_TOOLTIP"] = "返回这两个数字相除后的余数。";
Blockly.Msg["MATH_MULTIPLICATION_SYMBOL"] = "×";  // untranslated
Blockly.Msg["MATH_NUMBER_HELPURL"] = "https://zh.wikipedia.org/wiki/数";
Blockly.Msg["MATH_NUMBER_TOOLTIP"] = "一个数值。";
Blockly.Msg["MATH_ONLIST_HELPURL"] = "";  // untranslated
Blockly.Msg["MATH_ONLIST_OPERATOR_AVERAGE"] = "列表平均值";
Blockly.Msg["MATH_ONLIST_OPERATOR_MAX"] = "列表最大值";
Blockly.Msg["MATH_ONLIST_OPERATOR_MEDIAN"] = "列表中位数";
Blockly.Msg["MATH_ONLIST_OPERATOR_MIN"] = "列表最小值";
Blockly.Msg["MATH_ONLIST_OPERATOR_MODE"] = "列表中的众数";
Blockly.Msg["MATH_ONLIST_OPERATOR_RANDOM"] = "列表随机项";
Blockly.Msg["MATH_ONLIST_OPERATOR_STD_DEV"] = "列表的标准差";
Blockly.Msg["MATH_ONLIST_OPERATOR_SUM"] = "列表中数值的和";
Blockly.Msg["MATH_ONLIST_TOOLTIP_AVERAGE"] = "返回列表中的数值的平均值。";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MAX"] = "返回列表中最大值。";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MEDIAN"] = "返回列表中数值的中位数。";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MIN"] = "返回列表中最小值。";
Blockly.Msg["MATH_ONLIST_TOOLTIP_MODE"] = "返回列表中的出现次数最多的项的列表。";
Blockly.Msg["MATH_ONLIST_TOOLTIP_RANDOM"] = "从列表中返回一个随机的元素。";
Blockly.Msg["MATH_ONLIST_TOOLTIP_STD_DEV"] = "返回列表的标准差。";
Blockly.Msg["MATH_ONLIST_TOOLTIP_SUM"] = "返回列表中的所有数值的和。";
Blockly.Msg["MATH_POWER_SYMBOL"] = "^";  // untranslated
Blockly.Msg["MATH_RANDOM_FLOAT_HELPURL"] = "https://zh.wikipedia.org/wiki/随机数生成器";
Blockly.Msg["MATH_RANDOM_FLOAT_TITLE_RANDOM"] = "随机小数";
Blockly.Msg["MATH_RANDOM_FLOAT_TOOLTIP"] = "返回一个介于0.0到1.0之间（含边界）的随机数。";
Blockly.Msg["MATH_RANDOM_INT_HELPURL"] = "https://zh.wikipedia.org/wiki/随机数生成器";
Blockly.Msg["MATH_RANDOM_INT_TITLE"] = "从 %1 到 %2 范围内的随机整数";
Blockly.Msg["MATH_RANDOM_INT_TOOLTIP"] = "返回一个限制在两个指定数值的范围（含边界）之间的随机整数。";
Blockly.Msg["MATH_ROUND_HELPURL"] = "https://zh.wikipedia.org/wiki/数值修约";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUND"] = "四舍五入";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDDOWN"] = "向下舍入";
Blockly.Msg["MATH_ROUND_OPERATOR_ROUNDUP"] = "向上舍入";
Blockly.Msg["MATH_ROUND_TOOLTIP"] = "数字向上或向下舍入。";
Blockly.Msg["MATH_SINGLE_HELPURL"] = "https://zh.wikipedia.org/wiki/平方根";
Blockly.Msg["MATH_SINGLE_OP_ABSOLUTE"] = "绝对值";
Blockly.Msg["MATH_SINGLE_OP_ROOT"] = "平方根";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ABS"] = "返回一个数值的绝对值。";
Blockly.Msg["MATH_SINGLE_TOOLTIP_EXP"] = "返回一个数值的e次幂。";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LN"] = "返回一个数值的自然对数。";
Blockly.Msg["MATH_SINGLE_TOOLTIP_LOG10"] = "返回一个数值的以10为底的对数。";
Blockly.Msg["MATH_SINGLE_TOOLTIP_NEG"] = "返回一个数值的相反数。";
Blockly.Msg["MATH_SINGLE_TOOLTIP_POW10"] = "返回一个数值的10次幂。";
Blockly.Msg["MATH_SINGLE_TOOLTIP_ROOT"] = "返回一个数的平方根。";
Blockly.Msg["MATH_SUBTRACTION_SYMBOL"] = "-";  // untranslated
Blockly.Msg["MATH_TRIG_ACOS"] = "acos";  // untranslated
Blockly.Msg["MATH_TRIG_ASIN"] = "asin";  // untranslated
Blockly.Msg["MATH_TRIG_ATAN"] = "atan";  // untranslated
Blockly.Msg["MATH_TRIG_COS"] = "cos";  // untranslated
Blockly.Msg["MATH_TRIG_HELPURL"] = "https://zh.wikipedia.org/wiki/三角函数";
Blockly.Msg["MATH_TRIG_SIN"] = "sin";  // untranslated
Blockly.Msg["MATH_TRIG_TAN"] = "tan";  // untranslated
Blockly.Msg["MATH_TRIG_TOOLTIP_ACOS"] = "返回一个数值的反余弦值。";
Blockly.Msg["MATH_TRIG_TOOLTIP_ASIN"] = "返回一个数值的反正弦值。";
Blockly.Msg["MATH_TRIG_TOOLTIP_ATAN"] = "返回一个数值的反正切值。";
Blockly.Msg["MATH_TRIG_TOOLTIP_COS"] = "返回指定角度的余弦值(非弧度）。";
Blockly.Msg["MATH_TRIG_TOOLTIP_SIN"] = "返回指定角度的正弦值(非弧度）。";
Blockly.Msg["MATH_TRIG_TOOLTIP_TAN"] = "返回指定角度的正切值(非弧度）。";
Blockly.Msg["NEW_COLOUR_VARIABLE"] = "创建颜色变量...";
Blockly.Msg["NEW_NUMBER_VARIABLE"] = "创建数字变量...";
Blockly.Msg["NEW_STRING_VARIABLE"] = "创建字符串变量...";
Blockly.Msg["NEW_VARIABLE"] = "创建变量...";
Blockly.Msg["NEW_VARIABLE_TITLE"] = "新变量的名称：";
Blockly.Msg["NEW_VARIABLE_TYPE_TITLE"] = "新变量的类型：";
Blockly.Msg["ORDINAL_NUMBER_SUFFIX"] = "-";
Blockly.Msg["PROCEDURES_ALLOW_STATEMENTS"] = "允许声明";
Blockly.Msg["PROCEDURES_BEFORE_PARAMS"] = "与：";
Blockly.Msg["PROCEDURES_CALLNORETURN_HELPURL"] = "https://zh.wikipedia.org/wiki/子程序";
Blockly.Msg["PROCEDURES_CALLNORETURN_TOOLTIP"] = "运行用户定义的函数“%1”。";
Blockly.Msg["PROCEDURES_CALLRETURN_HELPURL"] = "https://zh.wikipedia.org/wiki/子程序";
Blockly.Msg["PROCEDURES_CALLRETURN_TOOLTIP"] = "运行用户定义的函数“%1”，并使用它的输出值。";
Blockly.Msg["PROCEDURES_CALL_BEFORE_PARAMS"] = "与：";
Blockly.Msg["PROCEDURES_CREATE_DO"] = "创建“%1”";
Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"] = "描述该功能...";
Blockly.Msg["PROCEDURES_DEFNORETURN_DO"] = "-";
Blockly.Msg["PROCEDURES_DEFNORETURN_HELPURL"] = "https://zh.wikipedia.org/wiki/子程序";
Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"] = "做点什么";
Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"] = "至";
Blockly.Msg["PROCEDURES_DEFNORETURN_TOOLTIP"] = "创建一个不带输出值的函数。";
Blockly.Msg["PROCEDURES_DEFRETURN_HELPURL"] = "https://zh.wikipedia.org/wiki/子程序";
Blockly.Msg["PROCEDURES_DEFRETURN_RETURN"] = "返回";
Blockly.Msg["PROCEDURES_DEFRETURN_TOOLTIP"] = "创建一个有输出值的函数。";
Blockly.Msg["PROCEDURES_DEF_DUPLICATE_WARNING"] = "警告：此函数具有重复参数。";
Blockly.Msg["PROCEDURES_HIGHLIGHT_DEF"] = "突出显示函数定义";
Blockly.Msg["PROCEDURES_IFRETURN_HELPURL"] = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg["PROCEDURES_IFRETURN_TOOLTIP"] = "如果值为真，则返回第二个值。";
Blockly.Msg["PROCEDURES_IFRETURN_WARNING"] = "警告：这个块只能在函数内部使用。";
Blockly.Msg["PROCEDURES_MUTATORARG_TITLE"] = "输入名称：";
Blockly.Msg["PROCEDURES_MUTATORARG_TOOLTIP"] = "添加函数输入。";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TITLE"] = "输入";
Blockly.Msg["PROCEDURES_MUTATORCONTAINER_TOOLTIP"] = "添加、移除或重新排此函数的输入。";
Blockly.Msg["REDO"] = "重做";
Blockly.Msg["REMOVE_COMMENT"] = "删除注释";
Blockly.Msg["RENAME_VARIABLE"] = "重命名变量...";
Blockly.Msg["RENAME_VARIABLE_TITLE"] = "将所有“%1”变量重命名为:";
Blockly.Msg["TEXT_APPEND_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_APPEND_TITLE"] = "向%1附加文本%2";
Blockly.Msg["TEXT_APPEND_TOOLTIP"] = "将一些文本追加到变量“%1”里。";
Blockly.Msg["TEXT_CHANGECASE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_LOWERCASE"] = "转为小写";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_TITLECASE"] = "转为首字母大写";
Blockly.Msg["TEXT_CHANGECASE_OPERATOR_UPPERCASE"] = "转为大写";
Blockly.Msg["TEXT_CHANGECASE_TOOLTIP"] = "用不同的大小写模式复制并返回这段文字。";
Blockly.Msg["TEXT_CHARAT_FIRST"] = "寻找第一个字母";
Blockly.Msg["TEXT_CHARAT_FROM_END"] = "获取字符从倒数#";
Blockly.Msg["TEXT_CHARAT_FROM_START"] = "获取字符从#";
Blockly.Msg["TEXT_CHARAT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg["TEXT_CHARAT_LAST"] = "寻找最后一个字母";
Blockly.Msg["TEXT_CHARAT_RANDOM"] = "寻找随机的字母";
Blockly.Msg["TEXT_CHARAT_TAIL"] = "-";
Blockly.Msg["TEXT_CHARAT_TITLE"] = "在文本%1 里 %2";
Blockly.Msg["TEXT_CHARAT_TOOLTIP"] = "返回位于指定位置的字母。";
Blockly.Msg["TEXT_COUNT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#counting-substrings";
Blockly.Msg["TEXT_COUNT_MESSAGE0"] = "计算%1在%2里出现的次数";
Blockly.Msg["TEXT_COUNT_TOOLTIP"] = "计算在一段文本中，某个部分文本重复出现了多少次。";
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TOOLTIP"] = "将一个项添加到文本中。";
Blockly.Msg["TEXT_CREATE_JOIN_TITLE_JOIN"] = "加入";
Blockly.Msg["TEXT_CREATE_JOIN_TOOLTIP"] = "添加、移除或重新排列各节来重新配置这个文本块。";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_END"] = "到最后一个字符#";
Blockly.Msg["TEXT_GET_SUBSTRING_END_FROM_START"] = "至字符#";
Blockly.Msg["TEXT_GET_SUBSTRING_END_LAST"] = "到最后一个字符";
Blockly.Msg["TEXT_GET_SUBSTRING_HELPURL"] = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg["TEXT_GET_SUBSTRING_INPUT_IN_TEXT"] = "从文本";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FIRST"] = "取得子串自第一个字符";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_END"] = "取得子串自倒数#";
Blockly.Msg["TEXT_GET_SUBSTRING_START_FROM_START"] = "取得子串自#";
Blockly.Msg["TEXT_GET_SUBSTRING_TAIL"] = "-";
Blockly.Msg["TEXT_GET_SUBSTRING_TOOLTIP"] = "返回文本中指定的一部分。";
Blockly.Msg["TEXT_INDEXOF_HELPURL"] = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg["TEXT_INDEXOF_OPERATOR_FIRST"] = "寻找第一次出现的文本";
Blockly.Msg["TEXT_INDEXOF_OPERATOR_LAST"] = "寻找最后一次出现的文本";
Blockly.Msg["TEXT_INDEXOF_TITLE"] = "在文本 %1 里 %2  %3";
Blockly.Msg["TEXT_INDEXOF_TOOLTIP"] = "返回第一个文本段在第二个文本段中的第一/最后一个匹配项的起始位置。如果未找到，则返回%1。";
Blockly.Msg["TEXT_ISEMPTY_HELPURL"] = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg["TEXT_ISEMPTY_TITLE"] = "%1是空的";
Blockly.Msg["TEXT_ISEMPTY_TOOLTIP"] = "如果给定的文本为空，则返回真。";
Blockly.Msg["TEXT_JOIN_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg["TEXT_JOIN_TITLE_CREATEWITH"] = "建立文本从";
Blockly.Msg["TEXT_JOIN_TOOLTIP"] = "通过串起任意数量的项以建立一段文本。";
Blockly.Msg["TEXT_LENGTH_HELPURL"] = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg["TEXT_LENGTH_TITLE"] = "%1的长度";
Blockly.Msg["TEXT_LENGTH_TOOLTIP"] = "返回给定文本的字母数（包括空格）。";
Blockly.Msg["TEXT_PRINT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg["TEXT_PRINT_TITLE"] = "输出%1";
Blockly.Msg["TEXT_PRINT_TOOLTIP"] = "输出指定的文字、数字或其他值。";
Blockly.Msg["TEXT_PROMPT_HELPURL"] = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg["TEXT_PROMPT_TOOLTIP_NUMBER"] = "要求用户输入数字。";
Blockly.Msg["TEXT_PROMPT_TOOLTIP_TEXT"] = "要求用户输入一些文本。";
Blockly.Msg["TEXT_PROMPT_TYPE_NUMBER"] = "要求输入数字，并显示提示消息";
Blockly.Msg["TEXT_PROMPT_TYPE_TEXT"] = "要求输入文本，并显示提示消息";
Blockly.Msg["TEXT_REPLACE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#replacing-substrings";
Blockly.Msg["TEXT_REPLACE_MESSAGE0"] = "在%3中，将%1替换为%2";
Blockly.Msg["TEXT_REPLACE_TOOLTIP"] = "在一段文本中，将出现过的某部分文本都替换掉。";
Blockly.Msg["TEXT_REVERSE_HELPURL"] = "https://github.com/google/blockly/wiki/Text#reversing-text";
Blockly.Msg["TEXT_REVERSE_MESSAGE0"] = "翻转文本%1";
Blockly.Msg["TEXT_REVERSE_TOOLTIP"] = "将文本中各个字符的顺序倒转。";
Blockly.Msg["TEXT_TEXT_HELPURL"] = "https://zh.wikipedia.org/wiki/字符串";
Blockly.Msg["TEXT_TEXT_TOOLTIP"] = "一个字、词语或一行文本。";
Blockly.Msg["TEXT_TRIM_HELPURL"] = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg["TEXT_TRIM_OPERATOR_BOTH"] = "消除其两侧的空白";
Blockly.Msg["TEXT_TRIM_OPERATOR_LEFT"] = "消除其左侧的空白";
Blockly.Msg["TEXT_TRIM_OPERATOR_RIGHT"] = "消除其右侧的空白";
Blockly.Msg["TEXT_TRIM_TOOLTIP"] = "从某一端或同时从两端删除多余的空白，并返回这段文字的一个副本。";
Blockly.Msg["TODAY"] = "今天";
Blockly.Msg["UNDO"] = "撤销";
Blockly.Msg["UNNAMED_KEY"] = "匿名";
Blockly.Msg["VARIABLES_DEFAULT_NAME"] = "项目";
Blockly.Msg["VARIABLES_GET_CREATE_SET"] = "创建“设定%1”";
Blockly.Msg["VARIABLES_GET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg["VARIABLES_GET_TOOLTIP"] = "返回此变量的值。";
Blockly.Msg["VARIABLES_SET"] = "赋值 %1 为 %2";
Blockly.Msg["VARIABLES_SET_CREATE_GET"] = "创建“获得%1”";
Blockly.Msg["VARIABLES_SET_HELPURL"] = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg["VARIABLES_SET_TOOLTIP"] = "设置此变量，以使它和输入值相等。";
Blockly.Msg["VARIABLE_ALREADY_EXISTS"] = "名字叫“%1”的变量已经存在了。";
Blockly.Msg["VARIABLE_ALREADY_EXISTS_FOR_ANOTHER_TYPE"] = "名字叫“%1”的变量已经有了另一个类型：“%2”。";
Blockly.Msg["WORKSPACE_COMMENT_DEFAULT_TEXT"] = "说点什么...";
Blockly.Msg["CONTROLS_FOREACH_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_FOR_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_IF_ELSEIF_TITLE_ELSEIF"] = Blockly.Msg["CONTROLS_IF_MSG_ELSEIF"];
Blockly.Msg["CONTROLS_IF_ELSE_TITLE_ELSE"] = Blockly.Msg["CONTROLS_IF_MSG_ELSE"];
Blockly.Msg["CONTROLS_IF_IF_TITLE_IF"] = Blockly.Msg["CONTROLS_IF_MSG_IF"];
Blockly.Msg["CONTROLS_IF_MSG_THEN"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["CONTROLS_WHILEUNTIL_INPUT_DO"] = Blockly.Msg["CONTROLS_REPEAT_INPUT_DO"];
Blockly.Msg["LISTS_CREATE_WITH_ITEM_TITLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["LISTS_GET_INDEX_HELPURL"] = Blockly.Msg["LISTS_INDEX_OF_HELPURL"];
Blockly.Msg["LISTS_GET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_GET_SUBLIST_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_INDEX_OF_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["LISTS_SET_INDEX_INPUT_IN_LIST"] = Blockly.Msg["LISTS_INLIST"];
Blockly.Msg["MATH_CHANGE_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["PROCEDURES_DEFRETURN_COMMENT"] = Blockly.Msg["PROCEDURES_DEFNORETURN_COMMENT"];
Blockly.Msg["PROCEDURES_DEFRETURN_DO"] = Blockly.Msg["PROCEDURES_DEFNORETURN_DO"];
Blockly.Msg["PROCEDURES_DEFRETURN_PROCEDURE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_PROCEDURE"];
Blockly.Msg["PROCEDURES_DEFRETURN_TITLE"] = Blockly.Msg["PROCEDURES_DEFNORETURN_TITLE"];
Blockly.Msg["TEXT_APPEND_VARIABLE"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];
Blockly.Msg["TEXT_CREATE_JOIN_ITEM_TITLE_ITEM"] = Blockly.Msg["VARIABLES_DEFAULT_NAME"];

Blockly.Msg["LOGIC_HUE"] = "210";
Blockly.Msg["LOOPS_HUE"] = "120";
Blockly.Msg["MATH_HUE"] = "230";
Blockly.Msg["TEXTS_HUE"] = "160";
Blockly.Msg["LISTS_HUE"] = "260";
Blockly.Msg["COLOUR_HUE"] = "20";
Blockly.Msg["VARIABLES_HUE"] = "330";
Blockly.Msg["VARIABLES_DYNAMIC_HUE"] = "310";
Blockly.Msg["PROCEDURES_HUE"] = "290";




// This file was automatically generated.  Do not modify.


//luokailiang
Blockly.DLMLY_PINMODE = '管脚模式';
Blockly.DLMLY_PINMODEIN = '输入';
Blockly.DLMLY_PINMODEOUT = '输出';
Blockly.DLMLY_PINMODEPULLUP = '上拉输入';
Blockly.DLMLY_DECLARE='声明';
Blockly.DLMLY_AS='为';
Blockly.DLMLY_VALUE='并赋值';
Blockly.DLMLY_VALUE2='赋值为';
Blockly.DLMLY_MAP='映射';
Blockly.DLMLY_MAP_FROM="从 [";
Blockly.DLMLY_MAP_TO="] 到 [";
Blockly.DLMLY_MILLIS='毫秒';
Blockly.DLMLY_DELAY='延时';
Blockly.DLMLY_ATTACHINTERRUPT_PIN='中断 管脚 #';
Blockly.DLMLY_DETACHINTERRUPT_PIN = '取消中断 管脚 #';
Blockly.DLMLY_ATTACHPININTERRUPT_PIN = '管脚中断 管脚 #';
Blockly.DLMLY_DETACHPININTERRUPT_PIN = '取消管脚中断 管脚 #';
Blockly.DLMLY_TX_PIN='Tx 管脚';
Blockly.DLMLY_RX_PIN='Rx 管脚';
Blockly.DLMLY_MODE='模式';
Blockly.DLMLY_DO='执行';
Blockly.DLMLY_BUILDIN_LED='内嵌LED灯';
Blockly.DLMLY_STAT='设为';
Blockly.DLMLY_DIGITALWRITE_PIN='数字输出 管脚 #';
Blockly.DLMLY_DIGITALREAD_PIN='数字输入 管脚 #';
Blockly.DLMLY_ANALOGWRITE_PIN='模拟输出 管脚 #';
Blockly.DLMLY_ANALOGREAD_PIN='模拟输入 管脚 #';
Blockly.DLMLY_SERIAL_WRITE = '原始输出';
Blockly.DLMLY_SERIAL_PRINT = '打印';
Blockly.DLMLY_SERIAL_PRINTLN='打印（自动换行）';
Blockly.DLMLY_SERIAL_PRINT_HEX='打印（16进制/自动换行）';
Blockly.DLMLY_SERIAL_FLUSH='清空缓存区数据';
Blockly.DLMLY_STEP='步长为';
Blockly.DLMLY_TONE_PIN='播放声音 管脚 #';
Blockly.DLMLY_TONE_NOTIMER_PIN='播放声音(无定时器) 管脚 #';
Blockly.DLMLY_FREQUENCY='频率';
Blockly.DLMLY_CHANNEL='通道';
Blockly.DLMLY_DURATION='持续时间';
Blockly.DLMLY_NOTONE_PIN='结束声音 管脚 #';
Blockly.DLMLY_NOTONE_NOTIMER_PIN='结束声音(无定时器) 管脚 #';
Blockly.DLMLY_BLOCKGROUP_CATEGORY='模块组';
Blockly.DLMLY_IR_RECEIVE='红外接收 管脚 #';
Blockly.DLMLY_IR_RECEIVE_ENABLE='红外接收使能 管脚 #';
Blockly.DLMLY_IR_SEND_NEC1='红外发射（';
Blockly.DLMLY_IR_SEND_NEC2='） 管脚 #';
Blockly.DLMLY_IR_RECEIVE_RAW='红外接收并打印数据（RAW） 管脚 #';
Blockly.DLMLY_IR_SEND_RAW='红外发射（RAW） 管脚 #';
Blockly.LANG_MATH_TO_INT = '取整';
Blockly.LANG_MATH_TO_ROUND = '取整(四舍五入)';
Blockly.LANG_MATH_TO_CEIL = '取整(取上限)';
Blockly.LANG_MATH_TO_FLOOR = '取整(取下限)';
Blockly.DLMLY_SERVO='舵机';
Blockly.DLMLY_PIN='管脚 #';
Blockly.DLMLY_DEGREE_0_180='角度 (0~180)';
Blockly.DLMLY_READ_DEGREES='读取度数';
Blockly.DLMLY_HIGH='高';
Blockly.DLMLY_LOW='低';
Blockly.DLMLY_ON='开';
Blockly.DLMLY_OFF='关';
Blockly.DLMLY_RISING='上升';
Blockly.DLMLY_FALLING='下降';
Blockly.DLMLY_CHANGE='改变';
Blockly.DLMLY_I2C_MASTER_WRITE="I2C写入 设备地址";
Blockly.DLMLY_I2C_MASTER_READ="I2C读取 设备地址";
Blockly.DLMLY_I2C_MASTER_READ2="I2C读取";
Blockly.DLMLY_I2C_VALUE="值";
Blockly.DLMLY_I2C_BYTES="字节数";
Blockly.DLMLY_I2C_AVAILABLE='读取I2C成功吗？';
Blockly.DLMLY_I2C_SLAVE_ONRECEIVE='I2C从机接收 管脚 #';
Blockly.LANG_CONTROLS_FOR_INPUT_WITH = '使用';
Blockly.LANG_CONTROLS_FOR_INPUT_VAR = 'x';
Blockly.LANG_CONTROLS_FOR_INPUT_FROM = '从';
Blockly.LANG_CONTROLS_FOR_INPUT_TO = '到';
Blockly.LANG_CONTROLS_FOR_INPUT_DO = '执行';
Blockly.LANG_CONTROLS_WHILEUNTIL_TITLE_REPEAT = '重复';
Blockly.LANG_CONTROLS_WHILEUNTIL_INPUT_DO = '执行';
Blockly.LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE = '满足条件';
Blockly.LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = '不满足条件';
Blockly.LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP = '循环';
Blockly.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = '跳出';
Blockly.LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = '跳到下一个';
Blockly.LANG_CONTROLS_FLOW_STATEMENTS_WARNING = '警告：\n' +
'这个模块只能\n' +
'用在循环中。';
Blockly.LANG_MATH_INT = '整数';
Blockly.LANG_MATH_LONG = '长整数';
Blockly.LANG_MATH_FLOAT = '小数';
Blockly.LANG_MATH_BOOLEAN = '布尔';
Blockly.LANG_MATH_BYTE = '字节';
Blockly.LANG_MATH_CHAR = '字符';
Blockly.LANG_MATH_STRING = '字符串';
/*
 *add all data types supported in Arduino except void(only use in function) and array(in special catelogy)
 @author zyc
 @date 2018-12-29
 */
 Blockly.LANG_MATH_UNSIGNED_INT = '无符号整数';
 Blockly.LANG_MATH_WORD = '字';
 Blockly.LANG_MATH_UNSIGNED_LONG = '无符号长整数';
 Blockly.LANG_MATH_UNSIGNED_CHAR = '无符号字符';
 Blockly.LANG_MATH_DOUBLE = '双精度浮点数';
//end

Blockly.LANG_LISTS_GET_INDEX1 = '的第';
Blockly.LANG_LISTS_GET_INDEX2 = '项';
Blockly.LANG_LISTS_GET_INDEX_TOOLTIP = '返回数组中指定位置的值。';
Blockly.LANG_LISTS_SET_INDEX1 = '的第';
Blockly.LANG_LISTS_SET_INDEX2 = '项赋值为';
Blockly.LANG_LISTS_SET_INDEX_TOOLTIP = '设置数组中指定位置的值。';
Blockly.LANG_MATH_CONSTRAIN_INPUT_CONSTRAIN = '约束';
Blockly.LANG_MATH_CONSTRAIN_INPUT_LOW = '介于 (最小值)';
Blockly.LANG_MATH_CONSTRAIN_INPUT_HIGH = '和 (最大值)';
Blockly.LANG_MATH_RANDOM_SEED = '初始化随机数';
Blockly.LANG_MATH_RANDOM_INT_INPUT_FROM = '随机整数 从';
Blockly.LANG_MATH_RANDOM_INT_INPUT_TO = '到';
Blockly.DLMLY_DF_LED='LED灯';
Blockly.DLMLY_DF_BUZZER='蜂鸣器';
Blockly.DLMLY_DF_BTN='按钮（数字）';
Blockly.DLMLY_DF_VIBRATION='震动（数字）';
Blockly.DLMLY_DF_TILT='倾斜（数字）';
Blockly.DLMLY_DF_TOUCH='触摸（数字）';
Blockly.DLMLY_DF_MAGNETIC='磁感应（数字）';
Blockly.DLMLY_DF_PYROELECTRIC_INFRARED='热释电红外（数字）';
Blockly.DLMLY_MB_PYROELECTRIC_INFRARED='人体红外';
Blockly.DLMLY_DF_JOYSTICK_D='摇杆-按钮（数字）';
Blockly.DLMLY_DF_JOYSTICK_A='摇杆（模拟）';
Blockly.DLMLY_JOYSTICK='摇杆';
Blockly.DLMLY_DF_POTENTIOMETER='电位器（模拟）';
Blockly.DLMLY_POTENTIOMETER='电位器';
Blockly.DLMLY_DF_ROTATION='角度（模拟）';
Blockly.DLMLY_DF_VOLTAGE='电压（模拟）';
Blockly.DLMLY_DF_PIEZO_DISK_VIRBRATION='压电陶瓷震动（模拟）';
Blockly.DLMLY_DF_SOUND='声音（模拟）';
Blockly.DLMLY_SOUND='声音';
Blockly.DLMLY_DF_RELAY='继电器';
Blockly.DLMLY_DF_LIGHT='光线（模拟）';
Blockly.DLMLY_DF_GRAYSCALE='灰度（模拟）';
Blockly.DLMLY_DF_FLAME='火焰（模拟）';
Blockly.DLMLY_DF_TEMPERATURE='温度（模拟）';
Blockly.DLMLY_TEMPERATURE='温度（℃）';
Blockly.DLMLY_DF_ACCELEROMETER='三轴加速度（模拟）';
Blockly.DLMLY_DF_MOISTURE='土壤湿度（模拟）';
Blockly.DLMLY_DF_WATER='水分（模拟）';
Blockly.DLMLY_DF_CO='一氧化碳（模拟）';
Blockly.DLMLY_DF_SHARP_GP2Y0A21='夏普GP2Y0A21红外测距（模拟）';
Blockly.DLMLY_MAKELISTFROM='从字符串';
Blockly.DLMLY_SPLITBYDOU='创建数组';
Blockly.DLMLY_SETUP='初始化';
Blockly.DLMLY_WARNING_INTERRUPT='该管脚号不能作为中断';
Blockly.DLMLY_CHAOSHENGBO='超声波测距(cm) ';
Blockly.DLMLY_MB_CHAOSHENGBO='超声波测距';
Blockly.DLMLY_WEIGHTSENSOR='称重模块';
Blockly.DLMLY_IR_RECEIVE_YES='有信号';
Blockly.DLMLY_IR_RECEIVE_NO='无信号';
Blockly.LANG_VARIABLES_SET_TITLE='赋值为';
Blockly.DLMLY_TEXT_JOIN='连接';
Blockly.DLMLY_SERIAL_AVAILABLE = '有数据可读吗？';
Blockly.DLMLY_SERIAL_EVENT = '串口中断';
Blockly.DLMLY_SERIAL_READSTR='读取字符串';
Blockly.DLMLY_SERIAL_READSTR_UNTIL='读取字符串直到';
Blockly.DLMLY_SERIAL_READ='读取';
Blockly.DLMLY_IR_RECIEVE_TOOLTIP='在接收到红外信号时进行用户自定义的处理。';
Blockly.DLMLY_IR_SEND_NEC_TOOLTIP='发射指定类型的红外数据';
Blockly.DLMLY_IR_RECIEVE_RAW_TOOLTIP='在接收到红外信号时以RAW格式打印出红外数据。';
Blockly.DLMLY_IR_SEND_RAW_TOOLTIP='发射RAW红外数据，4个参数分别是管脚号、数组、数组长度、红外信号频率';
Blockly.DLMLY_LIST_NAME='数组';
Blockly.DLMLY_LIST_LENGTH='数组长度';
Blockly.DLMLY_TO_INT='转整数';
Blockly.DLMLY_TO_FLOAT='转小数';
Blockly.DLMLY_DATA="数值";
Blockly.DLMLY_BITS="比特数";
Blockly.DLMLY_MB_LIGHT_GRAYSCALE='光线与灰度传感器';
Blockly.DLMLY_MB_LIGHT_GRAYSCALE_LED=' LED设为';
Blockly.DLMLY_MB_LIGHT_MOTOR='设置电机';
Blockly.DLMLY_MB_LIGHT_MOTOR_SPEED=' 转速为(-255~255)';
Blockly.DLMLY_DELAY_MS='毫秒';
Blockly.DLMLY_DELAY_US = '微秒';
Blockly.DLMLY_PIN = '管脚 #';
Blockly.DLMLY_GETTEMPERATUE = '获取温度';
Blockly.DLMLY_GETHUMIDITY = '获取湿度';
Blockly.DLMLY_DHT11='DHT11 管脚 #';
Blockly.DLMLY_DHT11_T='获取温度';
Blockly.DLMLY_DHT11_H='获取湿度';
Blockly.DLMLY_LCD_RGB_BACKLIGHT='液晶RGB背光屏';
Blockly.DLMLY_DF_LCD='液晶显示屏';
Blockly.DLMLY_LCD_PRINT1='打印第1行';
Blockly.DLMLY_LCD_PRINT2='打印第2行';
Blockly.DLMLY_LCD_PRINT3='打印第3行';
Blockly.DLMLY_LCD_PRINT4='打印第4行';
Blockly.DLMLY_LCD_ROW='在第';
Blockly.DLMLY_LCD_COLUMN='行第';
Blockly.DLMLY_LCD_PRINT='列打印';
Blockly.DLMLY_LCD_SETCOLOR='设置颜色';
Blockly.DLMLY_LCD_STAT_ON='开';
Blockly.DLMLY_LCD_STAT_OFF='关';
Blockly.DLMLY_LCD_STAT_CURSOR='有光标';
Blockly.DLMLY_LCD_STAT_NOCURSOR='无光标';
Blockly.DLMLY_LCD_STAT_BLINK='闪烁';
Blockly.DLMLY_LCD_STAT_NOBLINK='不闪烁';
Blockly.DLMLY_LCD_STAT_CLEAR='清屏';
Blockly.DLMLY_LCD_NOBACKLIGHT = '关闭背光';
Blockly.DLMLY_LCD_BACKLIGHT = '打开背光';
Blockly.DLMLY_7S_DISPLAY='7段数码管';
Blockly.DLMLY_NUMBER='数字';
Blockly.DLMLY_BLUETOOTH='蓝牙';
Blockly.DLMLY_BLUETOOTH_READ_STR='读取数据（返回字符串）';
Blockly.DLMLY_AVAILABLE='有数据可读？';
Blockly.DLMLY_DATAPIN='数据管脚 #';
Blockly.DLMLY_CLOCKPIN='时钟管脚 #';
Blockly.DLMLY_BITORDER='顺序';
Blockly.DLMLY_MSBFIRST='高位先入';
Blockly.DLMLY_LSBFIRST='低位先入';
Blockly.DLMLY_TOSTRING = '转字符串';
Blockly.DLMLY_TOCHAR = '转ASCII字符';
Blockly.DLMLY_TOASCII = '转ASCII数值';
Blockly.DLMLY_ROMEO_MOTOR='Romeo 电机';
Blockly.DLMLY_ROMEO_MOTOR_SPEED='转速';
Blockly.DLMLY_STOP='停止';
Blockly.DLMLY_PULSEIN='脉冲长度（微秒） 管脚 #';
Blockly.DLMLY_PULSEIN_STAT='状态';
Blockly.DLMLY_PULSEIN_TIMEOUT='超时（微秒）';
Blockly.DLMLY_SERIAL_READ_INT='整数';
Blockly.DLMLY_SERIAL_READ_FLOAT='小数';
Blockly.DLMLY_MAX='取最大值';
Blockly.DLMLY_MIN='取最小值';
Blockly.DLMLY_WRITE_SD_FILE='写入SD 文件';
Blockly.DLMLY_SD_DATA='数据';
Blockly.DLMLY_SD_NEWLINE='换行';
Blockly.DLMLY_EEPROM_WRITE_LONG='写入(长整数) EEPROM 地址';
Blockly.DLMLY_EEPROM_READ_LONG='读取(长整数) EEPROM 地址';
Blockly.DLMLY_EEPROM_WRITE_BYTE='写入(字节) EEPROM 地址';
Blockly.DLMLY_EEPROM_READ_BYTE='读取(字节) EEPROM 地址';
Blockly.DLMLY_SENSE_MOTOR='设置马达转速为(-255~255)';
Blockly.DLMLY_SENSE_MOTOR_STOP='停止马达';
Blockly.DLMLY_SENSE_SERVO='设置舵机角度';
Blockly.DLMLY_SENSE_RGBLED='设置RGB灯的颜色为';
Blockly.DLMLY_TRAFFIC_LED='设置交通灯';
Blockly.DLMLY_EAST='东';
Blockly.DLMLY_SOUTH='南';
Blockly.DLMLY_WEST='西';
Blockly.DLMLY_NORTH='北';
Blockly.DLMLY_SENSE_BUZZER='设置蜂鸣器为';
Blockly.DLMLY_SENSE_ULTRASONIC='超声波传感器的值';
Blockly.DLMLY_SENSE_PYROELECTRIC_INFRARED='人体红外传感器被触发？';
Blockly.DLMLY_BUTTON='按钮';
Blockly.DLMLY_UP='上';
Blockly.DLMLY_DOWN='下';
Blockly.DLMLY_LEFT='左';
Blockly.DLMLY_RIGHT='右';
Blockly.DLMLY_MID='中';
Blockly.DLMLY_IS_PRESSED='被按着？';
Blockly.DLMLY_SENSE_SLIDING='滑杆传感器的值';
Blockly.DLMLY_SENSE_TEMPERATURE='温度传感器的值';
Blockly.DLMLY_SENSE_HUMIDITY='湿度传感器的值';
Blockly.DLMLY_SENSE_SOUND='声音传感器的值';
Blockly.DLMLY_SENSE_LIGHT='光线传感器的值';
Blockly.DLMLY_SENSE_WEIGHT='称重传感器的值';
Blockly.DLMLY_SENSE_IR='接收到红外信号值：';
Blockly.DLMLY_SENSE_DIGITAL_DISPLAY='设置LED数码管的值(0~99)';
Blockly.DLMLY_SENSE_DIGITAL_DISPLAY_CLOSE='关闭LED数码管';
Blockly.DLMLY_SENSE_LED_MATRIX='设置LED点阵的值(0~9)';
Blockly.DLMLY_SENSE_LED_MATRIX_CLOSE='关闭LED点阵';
Blockly.LANG_INOUT_DIGITAL_WRITE_TOOLTIP='设置指定管脚电平值';
Blockly.DLMLY_FORWARD='前进';
Blockly.DLMLY_BACKWARD='后退';
Blockly.DLMLY_TURNLEFT='左转';
Blockly.DLMLY_TURNRIGHT='右转';
Blockly.DLMLY_MBOT_SPEED='速度为(-255~255)';
Blockly.DLMLY_RUNTIME='系统运行时间';
Blockly.DLMLY_LED_ON_BOARD='板载';
Blockly.DLMLY_ALL='全部';
Blockly.DLMLY_SET_LED='设置LED';
Blockly.DLMLY_MBOT_TONE='播放声音';
Blockly.DLMLY_MBOT_NOTONE='结束声音';
Blockly.DLMLY_SHOW_FACE='表情面板';
Blockly.DLMLY_SHOW_FACE_TEXT='显示文字:';
Blockly.DLMLY_SHOW_FACE_TIME='显示时间';
Blockly.DLMLY_MBOT_SET_DISPLAY='设置数码管';
Blockly.DLMLY_MBOT_SET_LIGHT='设置光线传感器';
Blockly.DLMLY_MBOT_SET_LIGHT_LED='LED状态为';
Blockly.DLMLY_MBOT_SET_CAMERA='设置相机快门';
Blockly.DLMLY_MBOT_SET_CAMERA_STAT='状态为';
Blockly.DLMLY_MBOT_SET_CAMERA_PRESS='按下快门';
Blockly.DLMLY_MBOT_SET_CAMERA_RELEASE='松开快门';
Blockly.DLMLY_MBOT_SET_CAMERA_FOCUS_ON='开始对焦';
Blockly.DLMLY_MBOT_SET_CAMERA_FOCUS_OFF='停止对焦';
Blockly.DLMLY_MBOT_LIGHT_SENSOR='光线传感器';
Blockly.DLMLY_LIGHT_SENSOR_ON_BOARD='板载';
Blockly.DLMLY_MBOT_BUTTON='按钮';
Blockly.DLMLY_MBOT_BUTTON_PRESSED='已按下';
Blockly.DLMLY_MBOT_BUTTON_RELEASED='已松开';
Blockly.DLMLY_MBOT_LINE_FOLLOWER='巡线传感器';
Blockly.DLMLY_MBOT_JOYSTICK='摇杆';
Blockly.DLMLY_MBOT_JOYSTICK_X='X轴';
Blockly.DLMLY_MBOT_JOYSTICK_Y='Y轴';
Blockly.DLMLY_MBOT_POTENTIOMETER='电位器';
Blockly.DLMLY_MBOT_SOUND_SENSOR='音量传感器';
Blockly.DLMLY_MBOT_LIMIT_SWITCH='限位开关';
Blockly.DLMLY_MBOT_TEMPERATURE='当前温度';
Blockly.DLMLY_MBOT_PIR_MOTION_SENSOR='人体红外传感器';
Blockly.DLMLY_MBOT_IR_REMOTE='红外遥控器按下';
Blockly.DLMLY_MBOT_IR_REMOTE_PRESSED='键';
Blockly.DLMLY_SETTING='设置';
Blockly.DLMLY_SEND_MBOT_MESSAGE='发送mBot消息';
Blockly.DLMLY_MBOT_MESSAGE_RECEIVED='接收到的mBot消息';
Blockly.DLMLY_LABPLUS_ROBOT_MOVEMENT='设置机器人移动模式为';
Blockly.DLMLY_LABPLUS_ROBOT_MOVEMENT_GO_FORWARD='前进';
Blockly.DLMLY_LABPLUS_ROBOT_MOVEMENT_STOP='停止';
Blockly.DLMLY_LABPLUS_ROBOT_MOVEMENT_GO_BACK='后退';
Blockly.DLMLY_LABPLUS_ROBOT='设置机器人';
Blockly.DLMLY_LABPLUS_ROBOT_TURN_LEFT='左转';
Blockly.DLMLY_LABPLUS_ROBOT_TURN_RIGHT='右转';
Blockly.DLMLY_LABPLUS_ROBOT_DISPLAY='设置屏幕显示为';
Blockly.DLMLY_LABPLUS_ROBOT_DISPLAY_SMILE='微笑';
Blockly.DLMLY_LABPLUS_ROBOT_DISPLAY_NOSMILE='悲伤';
Blockly.DLMLY_LABPLUS_ROBOT_DISPLAY_CLOSE_EYE='闭眼';
Blockly.DLMLY_LABPLUS_ROBOT_DISPLAY_LEFT='左箭头';
Blockly.DLMLY_LABPLUS_ROBOT_DISPLAY_RIGHT='右箭头';
Blockly.DLMLY_LABPLUS_ROBOT_DISPLAY_TIAOWEN='条纹';
Blockly.DLMLY_LABPLUS_ROBOT_DISPLAY_ZEBRA='斑马纹';
Blockly.DLMLY_LABPLUS_ROBOT_DISPLAY_NOTHING='黑屏';
Blockly.DLMLY_LABPLUS_ROBOT_LED_TOP='设置顶灯为';
Blockly.DLMLY_LABPLUS_ROBOT_LED_SIDE='设置侧灯颜色为';
Blockly.DLMLY_LCD_ADDRESS="设备地址";
var MSG = {
	catInOut: "输入/输出",
	catControl: "控制",
	catMath: "数学",
	catText: "文本",
	catLists: "数组",
	catMicropyLists: "列表",
	catDicts: "字典",
	catLogic: "逻辑",
	catSerialPort:"串口",
	catGroup: "通信",
	catStorage:"存储",
	catSensor: "传感器",
	catActuator: "执行器",
	catMonitor:"显示器",
	catLCD:"LCD显示屏",
	cat4Digitdisplay:"四位数码管",
	catOLED:"OLED显示屏",
	catHT16K33:"HT16K33点阵屏",
	catMax7219:"MAX7219点阵屏",
	catVar: "变量",
	catFun: "函数",
	catEthernet:"以太网",
	catNetwork:"网络",
	catEthernet_init:"初始化",
	catEthernet_clinet:"客户端",
  catDlm:"迪乐姆",
	tab_blocks: "模块",
	tab_arduino: "代码",
	copyright:"Copyright © 上海迪乐姆教育科技有限公司",
	viewNormal:"普通视图",
	viewAdvanced:"高级视图",
	catGame:"游戏",
	catSystem:"系统",
	catTurtle:"乌龟",
	catTuple:"元组",
	catIot:"物联网",
	catSet:"集合",
	catData:"数据",
	catHardwareS4A:"S4A硬件"
};
Blockly.DLMLY_TOOLTIP_INOUT_HIGHLOW='返回高电平或低电平';
Blockly.DLMLY_TOOLTIP_INOUT_DIGITAL_READ='返回指定管脚的电平值';
Blockly.DLMLY_TOOLTIP_INOUT_ANALOG_WRITE='设置指定管脚的值(0~255)';
Blockly.DLMLY_TOOLTIP_INOUT_ANALOG_READ='返回指定管脚的值(0~1023)';
Blockly.DLMLY_TOOLTIP_INOUT_ATTACHINTERRUPT='设置指定管脚的中断';
Blockly.DLMLY_TOOLTIP_INOUT_DETACHINTERRUPT='取消指定管脚的中断';
Blockly.DLMLY_TOOLTIP_CONTROL_SETUP='初始化操作(这里面的内容只执行一次)';
Blockly.DLMLY_TOOLTIP_CONTROL_DELAY='延迟指定时间';
Blockly.DLMLY_TOOLTIP_CONTROL_MILLIS='返回系统运行的时间';
Blockly.DLMLY_TOOLTIP_VARIABLES_DECLARE='声明并初始化一个变量';
Blockly.DLMLY_TOOLTIP_MATH_MAX='返回两个数中较大的那个';
Blockly.DLMLY_TOOLTIP_MATH_MIN='返回两个数中较小的那个';
Blockly.DLMLY_TOOLTIP_MATH_MAP='将一个数从第一个区间映射到第二个区间，并返回映射之后的值。';
Blockly.DLMLY_TOOLTIP_TEXT_JOIN='将两个字符串拼接成一个字符串。';
Blockly.DLMLY_TOOLTIP_TEXT_TOTEXT = '将一个数字转为一个字符串。';
Blockly.DLMLY_TOOLTIP_TEXT_TOCHAR = '返回一个ASCII编码对应的文本符号。';
Blockly.DLMLY_TOOLTIP_TEXT_TOASCII = '返回一个字符对应的ASCII编码。';
Blockly.DLMLY_TOOLTIP_TEXT_TOINT='将一个字符串转为一个整数。';
Blockly.DLMLY_TOOLTIP_TEXT_TOFLOAT='将一个字符串转为一个小数。';
Blockly.DLMLY_TOOLTIP_TEXT_TOBYTE='将一个字符串转为字节。';
Blockly.DLMLY_TOOLTIP_LISTS_CREATE_WITH_TEXT='通过一个字符串来创建一个数组。';
Blockly.DLMLY_TOOLTIP_LOGIT_TRUEORFALSE='如果第一个参数为真，则返回第二参数，否则返回第三个参数。';
Blockly.DLMLY_TOOLTIP_BLOCKGROUP_SERIAL_AVAILABLE='如果串口有数据可读，返回真，否则返回假。';
Blockly.DLMLY_TOOLTIP_BLOCKGROUP_SERIAL_READ_STR='返回串口中的字符串。';
Blockly.DLMLY_TOOLTIP_BLOCKGROUP_SERIAL_READ_INT='返回串口中的整数。';
Blockly.DLMLY_TOOLTIP_BLOCKGROUP_SERIAL_READ_FLOAT='返回串口中的小数。';
Blockly.DLMLY_TOOLTIP_BLOCKGROUP_CHAOSHENGBO='返回超声波传感器测得的距离。';
Blockly.DLMLY_TOOLTIP_BLOCKGROUP_GET_TEM='返回温湿度传感器测得的温度（0~50）';
Blockly.DLMLY_TOOLTIP_BLOCKGROUP_GET_HUM='返回温湿度传感器测得的湿度（20~90%）';
Blockly.DLMLY_TOOLTIP_BLOCKGROUP_SERVO_MOVE = '设置舵机的旋转角度（0~180°）和延时的时长';
Blockly.DLMLY_TOOLTIP_BLOCKGROUP_SERVO_READ = '返回舵机当前停留的角度。';
Blockly.DLMLY_TOOLTIP_BLOCKGROUP_TONE = '按指定的频率播放声音。';
Blockly.DLMLY_TOOLTIP_BLOCKGROUP_TONE2 = '按指定的频率和持续时间播放声音。';
Blockly.DLMLY_TOOLTIP_BLOCKGROUP_NOTONE = '停止播放声音。';
/*
 *add tooltips missed in Arduino before
 *@author:zyc
 *@date:2018-12-4
 */
 Blockly.DLMLY_TOOLTIP_INOUT_pinMode = '改变管脚模式';
 Blockly.DLMLY_TOOLTIP_INOUT_pulseIn = '获取某个管脚最近一次脉冲的周期（微秒）';
 Blockly.DLMLY_TOOLTIP_INOUT_pulseIn2 = '获取某个管脚最近一次脉冲的周期（微秒，可设置超时时间）';
 Blockly.DLMLY_TOOLTIP_INOUT_shiftout = '将数据通过串行的方式在引脚上输出，相当于一般意义上的同步串行通信';
 Blockly.DLMLY_TOOLTIP_CONTROL_MSTIMER2 = 'Arduino内部定时器中断';
 Blockly.DLMLY_TOOLTIP_CONTROL_MSTIMER2_START = 'MsTimer2开始计时';
 Blockly.DLMLY_TOOLTIP_CONTROL_MSTIMER2_STOP = 'MsTimer2停止计时';
 Blockly.DLMLY_TOOLTIP_CONTROL_END_PROGRAM = '停止程序';
 Blockly.DLMLY_TOOLTIP_CONTROL_ALLOW_INTERRUPT = '允许设置中断';
 Blockly.DLMLY_TOOLTIP_CONTROL_FORBID_INTERRUPT = '禁止中断';
 Blockly.DLMLY_TOOLTIP_SCOOP = 'Arduino多线程';
 Blockly.DLMLY_TOOLTIP_SCOOP_YIELD = '开始执行多线程任务';
 Blockly.DLMLY_TOOLTIP_SCOOP_SLEEP = '延迟指定时间(仅用于多线程)';
 Blockly.DLMLY_TOOLTIP_MATH_RANDOM_SEED = '设置随机数种子';
 Blockly.DLMLY_TOOLTIP_TEXT_LENGTH = '求字符串长度';
 Blockly.DLMLY_TOOLTIP_TEXT_FIND_CHAR_AT = '在字符串中求子串 %1 的位置';
 Blockly.DLMLY_TOOLTIP_TEXT_EQUALS_STARTS_ENDS = '返回字符串是否%1 %2';
 Blockly.DLMLY_TOOLTIP_SERIAL_BEGIN = '初始化串口并设置串口通信波特率';
 Blockly.DLMLY_TOOLTIP_SERIAL_READSTRUNITL = '从串口读取字符串直到遇到%1';
 Blockly.DLMLY_TOOLTIP_SERIAL_FLUSH = '清除串口缓存区的数据';
 Blockly.DLMLY_TOOLTIP_SOFTSERIAL = '将数字管脚%1和%2模拟成串口通信管脚';
 Blockly.DLMLY_TOOLTIP_SERIALEVENT = '在串口接收信息时通过中断方式执行某些命令';
 Blockly.DLMLY_TOOLTIP_IR_ENABLE = '';
 Blockly.DLMLY_TOOLTIP_I2C_MASTER_WRITE = 'I2C主设备发送数据，参数是主设备的地址和要发送的值';
 Blockly.DLMLY_TOOLTIP_I2C_MASTER_READ = 'I2C主设备读取数据，参数是主设备的地址和要读取内容的字节长度';
 Blockly.DLMLY_TOOLTIP_I2C_MASTER_READ2 = '返回从I2C主设备读取到的数据';
 Blockly.DLMLY_TOOLTIP_I2C_AVAILABLE = '返回是否成功读取I2C设备数据';
 Blockly.DLMLY_TOOLTIP_I2C_SLAVE_ONRECEIVE = 'I2C从机接收主机产生的时钟和数据信号，并执行相应操作';
 Blockly.DLMLY_TOOLTIP_SPI_TRANSFER = '作为主设备以SPI方式通过管脚%1向从机传输数据';
 Blockly.DLMLY_TOOLTIP_RFID_INIT = '初始化RFID读卡器，参数为数据线管脚号、时钟线管脚号、主输出从输出线管脚号和主输入从输出先管脚号';
 Blockly.DLMLY_TOOLTIP_RFID_ON = '当RFID读取到数据时执行一些指令';
 Blockly.DLMLY_TOOLTIP_RFID_READ = '返回RFID读取到的卡号';
 Blockly.DLMLY_TOOLTIP_RFID_IN = '当RFID读取到特定数据时执行一些指令';
 Blockly.DLMLY_TOOLTIP_RFID_WRITEBLOCK = '向电子标签中的数据块写数据';
 Blockly.DLMLY_TOOLTIP_RFID_READBLOCK = '从电子标签中的数据块读数据';
 Blockly.DLMLY_TOOLTIP_RFID_OFF = '使RFID设备不再继续读取数据';
 Blockly.DLMLY_TOOLTIP_STORE_SDWRITE = '向SD卡写入文件';
 Blockly.DLMLY_TOOLTIP_STORE_EEPROM_WRITELONG = '向EEPROM特定地址写入长整型数据';
 Blockly.DLMLY_TOOLTIP_STORE_EEPROM_READLONG = '从EEPROM的特定地址读取长整型数据';
 Blockly.DLMLY_TOOLTIP_STORE_EEPROM_WRITEBYTE = '向EEPROM特定地址写入字节型数据';
 Blockly.DLMLY_TOOLTIP_STORE_EEPROM_READBYTE = '从EEPROM的特定地址读取字节型数据';
 Blockly.DLMLY_TOOLTIP_GPS_INIT = '初始化GPS设备，参数为GPS通信管脚和波特率';
 Blockly.DLMLY_TOOLTIP_GPS_DATA_AVAILABLE = '返回GPS数据是否为有效值';
 Blockly.DLMLY_TOOLTIP_GPS_GETDATA = '获取GPS卫星传回的%1数据';
 Blockly.DLMLY_TOOLTIP_LM35 = '获取LM35传感器传回的温度值';
 Blockly.DLMLY_TOOLTIP_DS18 = '获取DS18B20传感器传回的温度值';
 Blockly.DLMLY_TOOLTIP_DS1302_INIT = '初始化DS1302 RTC时钟模块，参数为重置线管脚号，数据线管脚号和时钟线管脚号';
 Blockly.DLMLY_TOOLTIP_DS1307_INIT = '初始化DS1307 RTC时钟模块，参数为数据线管脚号和时钟线管脚号';
 Blockly.DLMLY_TOOLTIP_RTC_GETTIME = '从RTC时钟模块获取%1';
 Blockly.DLMLY_TOOLTIP_RTC_SETTIME = Blockly.DLMLY_RTCSETTIME;
 Blockly.DLMLY_TOOLTIP_RTC_SETDATE = Blockly.DLMLY_RTCSETDATE;
 Blockly.DLMLY_TOOLTIP_ADXL345 = '获取ADXL345重力感应模块传回的%1';
 Blockly.DLMLY_TOOLTIP_BLOCKGROUP_SERVO_WRITEMICROSECONDS = '设置舵机的旋转时间，参数取值为[1000,2000]';
 Blockly.DLMLY_TOOLTIP_TONE_NOTE = '返回音名对应的频率';
 Blockly.DLMLY_TOOLTIP_STEPPER_STEP = '用于初始化两管脚步进电机';
 Blockly.DLMLY_TOOLTIP_STEPPER_STEP2 = '用于初始化四管脚步进电机';
 Blockly.DLMLY_TOOLTIP_STEPPER_MOVE = '设置步进电机的移动步数';
 Blockly.DLMLY_TOOLTIP_LCD_INIT = '初始化LCD显示屏，设置地址';
 Blockly.DLMLY_TOOLTIP_LCD_INIT2 = '初始化LCD显示屏，指定时钟线和数据线连接管脚并设置地址';
 Blockly.DLMLY_TOOLTIP_LCD_INIT3 = '初始化LCD显示屏，指定所有连接管脚并设置地址';
 Blockly.DLMLY_TOOLTIP_LCD_PRINT = 'LCD显示屏分行打印';
 Blockly.DLMLY_TOOLTIP_LCD_PRINT2 = '从LCD显示屏第%1行第%2列开始显示指定内容';
 Blockly.DLMLY_TOOLTIP_LCD_POWER = '设定LCD显示屏的显示样式';
 Blockly.DLMLY_TOOLTIP_OLED_DRAW4STRING = 'OLED显示屏分行打印';
 Blockly.DLMLY_TOOLTIP_OLED_PRINT = '从OLED显示屏第%1行第%2列开始显示指定内容';
 Blockly.DLMLY_TOOLTIP_RGB_DISPLAY2 = '设置RGB彩灯模块指定灯的颜色';
 Blockly.DLMLY_TOOLTIP_4digitdisplay_power = '设置TM1650四位数码管显示模式';
 Blockly.DLMLY_TOOLTIP_4digitdisplay_displayString = 'TM1650四位数码管显示字符串（超过四位则滚动显示）';
 Blockly.DLMLY_TOOLTIP_4digitdisplay_showDot = '在TM1650四位数码管指定位置显示小数点';
 Blockly.DLMLY_TOOPTIP_4DIGITDISPLAY_TM1637_BRIGHTNESS = '设置TM1637的亮度';
 Blockly.DLMLY_DISPLAY_TM1637_Time_Point='时钟点 设为';
 Blockly.DLMLY_TOOPTIP_Matrix_HK16T33_INIT = '初始化HK16T33 8*8点阵屏';
 Blockly.DLMLY_TOOPTIP_Matrix_HK16T33_POS = '点阵屏单点操作，XY轴取值范围1-8';
 Blockly.DLMLY_TOOPTIP_Matrix_HK16T33_ROTATION = '点阵屏显示方向旋转';
 Blockly.DLMLY_TOOPTIP_Matrix_HK16T33_TEXT = '每次显示一个字符，依次显示';
 Blockly.DLMLY_TOOPTIP_Matrix_HK16T33_LEDARRAY = '点亮点阵屏上的对应位置';
 Blockly.DLMLY_TOOPTIP_Matrix_HK16T33_CLEAR = '清除点阵屏上内容';
 Blockly.DLMLY_TOOPTIP_Matrix_HK16T33_DISPLAYCHAR = '由数组生成点阵屏显示内容';
 Blockly.DLMLY_TOOLTIP_ETHERNET_INIT = '启动以太网服务，参数为以太网扩展卡的MAC地址，返回1表示成功启动，0表示失败';
 Blockly.DLMLY_TOOLTIP_ETHERNET_MACADDRESS = 'MAC地址，格式为XX-XX-XX-XX-XX-XX,X为任意十六进制数';
 Blockly.DLMLY_TOOLTIP_ETHERNET_LOCALIP = '返回本机IP地址';
 Blockly.DLMLY_TOOLTIP_ETHERNET_CONNECT = '连接远程服务器，返回1表示成功启动，其他表示失败';
 Blockly.DLMLY_TOOLTIP_ETHERNET_STOP = '与服务器断开连接';
 Blockly.DLMLY_TOOLTIP_ETHERNET_CONNECTED = '返回是否已连接某个服务器';
 Blockly.DLMLY_TOOLTIP_ETHERNET_CLIENT_AVAILABLE = '返回是否有服务端发送的数据可读';
 Blockly.DLMLY_TOOLTIP_ETHERNET_CLIENT_PRINT = '将数据打印到客户端连接到的服务器。发送内容会转为对应的ASCII码（例如，数字123作为三个字符“1”、“2”、“3”发送）。';
 Blockly.DLMLY_TOOLTIP_ETHERNET_CLIENT_PRINTLN = '将数据打印到客户端连接到的服务器。发送内容会转为对应的ASCII码并在最后添加换行符（例如，数字123作为三个字符“1”、“2”、“3”发送）。';
 Blockly.DLMLY_TOOLTIP_ETHERNET_CLIENT_READ = '读取服务端发送客户端缓冲区的下一个字节';
 Blockly.DLMLY_TOOLTIP_ETHERNET_GET_REQUEST = '向指定地址发送一个GET请求';
 Blockly.DLMLY_TOOLTIP_VARIABLES_CHANGE = '对常量或变量进行强制类型转换';

 Blockly.LUXE_LED='灯 #';
 Blockly.LUXE_MOTOR='电机 #';
 Blockly.LUXE_STAT='为';
 Blockly.LUXE_SPEED='速度为';
 Blockly.LUXE_DIR='方向为';
 Blockly.LUXE_LED_ON='亮';
 Blockly.LUXE_LED_OFF='灭';
 Blockly.LUXE_MOTOR_FORWARD='顺时针';
 Blockly.LUXE_MOTOR_REVERSE='逆时针';
 Blockly.LUXE_LED_CHANGE='转换状态';
 Blockly.LUXE_MOTOR_CHANGE='改变方向';
 Blockly.LUXE_MOTOR_STOP='停止';
 Blockly.LUXE_SPEAKER_PLAYSOUND='播放声音';
 Blockly.LUXE_SPEANER_NOSOUND='停止播放声音';
 Blockly.LUXE_SPEAKER_FREQUENCY='频率';
 Blockly.LUXE_SPEAKER_DURATION='持续时间';

//-----------------NOVA---------------------------------
Blockly.DLMLY_NOVA_PORT = '端口';
Blockly.DLMLY_NOVA_STAT = '设为';
Blockly.DLMLY_NOVA_GET_STAT = '获取';

// LED
Blockly.DLMLY_NOVA_LED = 'LED灯';
Blockly.DLMLY_NOVA_LED_ON = '开';
Blockly.DLMLY_NOVA_LED_OFF = '关';

// Button
Blockly.DLMLY_NOVA_BUTTON_PRESSED = '按下';
Blockly.DLMLY_NOVA_BUTTON_RELEASED = '松开';
Blockly.DLMLY_NOVA_BTN = '按钮';
Blockly.DLMLY_NOVA_ABCD = '#';

Blockly.DLMLY_NOVA_TILTSWITCH = '倾斜开关';
Blockly.DLMLY_NOVA_SOUND = '声音传感器';
Blockly.DLMLY_NOVA_LIMISWICTH = '限位开关';
Blockly.DLMLY_NOVA_LIGHT = '光敏';

Blockly.DLMLY_NOVA_BUZZER = '蜂鸣器';
Blockly.DLMLY_NOVA_FREQUENCY = '频率(Hz)';
Blockly.DLMLY_NOVA_DLMLY_DURATION = '持续时间(ms)';

Blockly.DLMLY_NOVA_MOTOR = '直流电机';
Blockly.DLMLY_NOVA_MOTOR_SPEED = '转速(-100~100)%';

Blockly.DLMLY_NOVA_ULTRASONIC = '超声波测距(cm)';

Blockly.DLMLY_NOVA_DHT11 = '温湿度';
Blockly.DLMLY_NOVA_TYPE = '类型';
Blockly.DLMLY_NOVA_DHT11_H = '获取湿度';
Blockly.DLMLY_NOVA_DHT11_T = '获取温度';

Blockly.DLMLY_NOVA_SERVO = '舵机';
Blockly.DLMLY_NOVA_DEGREE_0_180 = '角度（0~180）';
Blockly.DLMLY_NOVA_DELAY = '延时';
Blockly.DLMLY_NOVA_DELAY_MS = '毫秒';

Blockly.DLMLY_NOVA_LINEFINDER = '巡线';
Blockly.DLMLY_NOVA_L = '左边状态';
Blockly.DLMLY_NOVA_R = '右边状态';
Blockly.DLMLY_NOVA_READ = '获取黑白线状态';

Blockly.DLMLY_NOVA_4DIGITDISPLAY = '数码管';
Blockly.DLMLY_NOVA_DISPLAY_NUMBER = '显示数字';
Blockly.DLMLY_NOVA_DISPLAY_HOUR= '显示小时';
Blockly.DLMLY_NOVA_DISPLAY_MIN = '显示分钟';

Blockly.DLMLY_NOVA_RTC = '时钟';
Blockly.DLMLY_NOVA_RTC_SEC = '秒';
Blockly.DLMLY_NOVA_RTC_MIN = '分';
Blockly.DLMLY_NOVA_RTC_HOUR = '时';
Blockly.DLMLY_NOVA_RTC_WEEK = '星期';
Blockly.DLMLY_NOVA_RTC_DAY = '日';
Blockly.DLMLY_NOVA_RTC_MON = '月';
Blockly.DLMLY_NOVA_RTC_YEAR = '年';

Blockly.DLMLY_NOVA_IR_REC = '红外接收';

Blockly.DLMLY_NOVA_BLUETOOTH = '蓝牙';
Blockly.DLMLY_NOVA_BLUETOOTH_AVAILABLE = '有数据可读？';
Blockly.DLMLY_NOVA_BLUETOOTH_READ_STR = '读取数据（返回字符串）';
Blockly.DLMLY_NOVA_BLUETOOTH_READ_NUM = '读取数据（返回数字）';

//spi
Blockly.TO_SPI_SLAVE_PIN='向SPI从机#';
Blockly.SPI_TRANSFER='传输';

Blockly.DLMLY_SERIAL_BEGIN='波特率';
Blockly.DLMLY_SERIALBT_BEGIN='初始化';
Blockly.DLMLY_SERIALBT_INIT='初始化ESP32蓝牙 设备名称';
Blockly.DLMLY_SERIALBT_AVAILABLE='ESP32蓝牙有数据可读？';
Blockly.DLMLY_SERIALBT_READ='ESP32蓝牙数据';
Blockly.DLMLY_SERIALBT_WRITE='ESP32蓝牙发送数据';
Blockly.DLMLY_ESP32_RUNNING_CORE='ESP32双核';
Blockly.DLMLY_CONTROL_CORE_DELAY='ESP32双核延时';
Blockly.DLMLY_ESP32_RUNNING_CORE_PRIORITY='优先级';
//stepper
Blockly.DLMLY_STEPPER='步进电机';
Blockly.DLMLY_STEPPER_SETUP_STEPPER='初始化步进电机';
Blockly.DLMLY_STEPPER_PIN1='管脚1#';
Blockly.DLMLY_STEPPER_PIN2='管脚2#';
Blockly.DLMLY_STEPPER_PIN3='管脚3#';
Blockly.DLMLY_STEPPER_PIN4='管脚4#';
Blockly.DLMLY_STEPSPERREVOLUTION='每转步数';
Blockly.DLMLY_STEPPER_SET_SPEED='设置转速';
Blockly.DLMLY_STEPPER_STEP='移动步数';

//-----------------Ethernet------------------------------------
Blockly.DLMLY_ETHERNET_BEGIN='初始化 (DHCP)';
Blockly.DLMLY_ETHERNET='以太网';
Blockly.DLMLY_ETHERNET2='以太网2';
Blockly.DLMLY_ETHERNET_MAC_ADDRESS='Mac地址';
Blockly.DLMLY_ETHERNET_LOCALIP='本地IP';
Blockly.DLMLY_ETHERNET_CLINET_CONNECT_SERVER='客户端连接到服务器';
Blockly.DLMLY_ETHERNET_CLINET_PORT='端口';
Blockly.DLMLY_ETHERNET_CLINET_STOP='客户端-停止';
Blockly.DLMLY_ETHERNET_CLINET_CONNECTED='客户端-已连接';
Blockly.DLMLY_ETHERNET_CLINET_AVAILABLE='客户端-有数据可读';
Blockly.DLMLY_ETHERNET_CLINET_PRINT='客户端-打印';
Blockly.DLMLY_ETHERNET_CLINET_PRINTLN='客户端-打印（自动换行）';
Blockly.DLMLY_ETHERNET_CLINET_READ='客户端-读取';
Blockly.DLMLY_ETHERNET_CLINET_GET_REQUEST='GET请求';
Blockly.DLMLY_ETHERNET_CLINET_URL='URL';
Blockly.DLMLY_ETHERNET_CLINET_SERVER='服务器';

//lm35温度传感器
Blockly.DLMLY_LM35='LM35温度传感器';

//DS18B20温度传感器
Blockly.DLMLY_DS18B20='DS18B20 管脚 #';
Blockly.DLMLY_DS18B20_GET_TEMP='获取温度';
Blockly.DLMLY_DS18B20_C='°C';
Blockly.DLMLY_DS18B20_F='°F';

//GPS
Blockly.DLMLY_GPS_INIT='GPS初始化';
Blockly.DLMLY_GPS_DATA_AVAILABLE='GPS获取到数据';
Blockly.DLMLY_GPS_DATA_ENCODE='GPS解析数据成功';
Blockly.DLMLY_GPS_LOCATION='位置';
Blockly.DLMLY_GPS_DATE='日期';
Blockly.DLMLY_GPS_TIME='时间';
Blockly.DLMLY_GPS_ISVALID='有效';
Blockly.DLMLY_GPS_GET='GPS获取';
Blockly.DLMLY_GPS_LOCATION_LAT='位置-纬度';
Blockly.DLMLY_GPS_LOCATION_LNG='位置-经度';
Blockly.DLMLY_GPS_DATE_YEAR='日期-年';
Blockly.DLMLY_GPS_DATE_MONTH='日期-月';
Blockly.DLMLY_GPS_DATE_DAY='日期-日';
Blockly.DLMLY_GPS_TIME_HOUR='时间-时';
Blockly.DLMLY_GPS_TIME_MINUTE='时间-分';
Blockly.DLMLY_GPS_TIME_SECOND='时间-秒';
Blockly.DLMLY_GPS_TIME_CENTISECOND='时间-厘秒';

//factory
Blockly.DLMLY_PARAMS = '参数';

//MsTimer2
Blockly.DLMLY_MSTIMER2_EVERY='每隔';
Blockly.DLMLY_MSTIMER2_DO='执行';
Blockly.DLMLY_MSTIMER2_START='启动';
Blockly.DLMLY_MSTIMER2_STOP='停止';
//interrupts
Blockly.DLMLY_CONTROL_INTERRUPTS = '允许中断';
Blockly.DLMLY_CONTROL_NOINTERRUPTS = '禁止中断';
//SCoop
Blockly.DLMLY_CONTROL_SCoop_Init = '初始化';
Blockly.DLMLY_CONTROL_SCoop_loop = '循环';
Blockly.DLMLY_CONTROL_SCoop_yield = '执行SCoop任务';
Blockly.DLMLY_CONTROL_SCoop_sleep = 'SCoop 延时(仅用于SCoop)';
//others
Blockly.DLMLY_WARNING_NOT_DECLARE='该变量未声明';
Blockly.DLMLY_LENGTH = "获取长度";
Blockly.DLMLY_EQUALS="等于";
Blockly.DLMLY_STARTSWITH="开始于";
Blockly.DLMLY_ENDSWITH="结尾于";
Blockly.DLMLY_COMPARETO="比较";
Blockly.DLMLY_COMPARETO_HELP="按字典顺序比较，相等则返回0，大于则返回大于0的值，小于则返回小于0的值";
Blockly.Msg.UNDO = "撤销";
Blockly.Msg.REDO = "重做";
Blockly.DLMLY_CONTROL_END_PROGRAM = "停止程序";
Blockly.DLMLY_CONTROL_NOTES = '注释:';

//oled
Blockly.Msg.texttodisplay = "显示文本：";
Blockly.Msg.OLEDDISPLAY = "显示：";
Blockly.Msg.todisplay = "显示：";
Blockly.Msg.rawx = "行坐标x:(最大127)";
Blockly.Msg.liney = "列坐标y:(最大63)";
Blockly.Msg.line1 = "第一行";
Blockly.Msg.line2 = "第二行";
Blockly.Msg.line3 = "第三行";
Blockly.Msg.line4 = "第四行";
Blockly.Msg.num1 = "数字1";
Blockly.Msg.num2 = "数字2";
Blockly.Msg.num3 = "数字3";
Blockly.Msg.num4 = "数字4";
// RGB
Blockly.DLMLY_RGB_INIT = 'RGB灯初始化';
Blockly.DLMLY_RGB_SET_BRIGHTNESS = 'RGB灯设置亮度';
Blockly.DLMLY_RGB_SET_COLOR = 'RGB灯设置颜色';
Blockly.DLMLY_RGB_SHOW = 'RGB灯设置生效';
Blockly.DLMLY_RGB_BRIGHTNESS = '亮度';
Blockly.DLMLY_RGB = 'RGB灯';
Blockly.DLMLY_RGB_NUM = '灯号';
Blockly.DLMLY_RGB_COUNT = '灯数';
Blockly.DLMLY_RGB_R = 'R值';
Blockly.DLMLY_RGB_G = 'G值';
Blockly.DLMLY_RGB_B = 'B值';
Blockly.DLMLY_RGBdisplay_rgb_rainbow1='七彩变换切换时间';
Blockly.DLMLY_RGBdisplay_rgb_rainbow2='七彩循环切换时间';
Blockly.DLMLY_RGB_DISPLAY_RAINBOW_TYPE_1='普通';
Blockly.DLMLY_RGB_DISPLAY_RAINBOW_TYPE_2='渐变';
Blockly.DLMLY_RGB_display_rgb_rainbow3='彩虹值';
//四位数码管
Blockly.DLMLY_4DIGITDISPLAY = '四位数码管';
Blockly.DLMLY_4DIGITDISPLAY_DISPLAYSTRING = '显示字符串';
Blockly.DLMLY_4DIGITDISPLAY_NOMBER1 = '第';
Blockly.DLMLY_4DIGITDISPLAY_NOMBER2 = '个';
Blockly.DLMLY_4DIGITDISPLAY_DOT = '小数点';
Blockly.DLMLY_4DIGITDISPLAY_ON = '亮';
Blockly.DLMLY_4DIGITDISPLAY_OFF = '灭';
Blockly.DLMLY_0DEGREE='0度';
Blockly.DLMLY_90DEGREE='90度';
Blockly.DLMLY_180DEGREE='180度';
Blockly.DLMLY_270DEGREE='270度';

//MAX7219
Blockly.DLMLY_MAX7219_INIT_NUM='点阵模块数量';
Blockly.DLMLY_MAX7219_PUTSTR='MAX7219点阵屏幕滚动显示';
Blockly.DLMLY_SPEED='速度';
Blockly.DLMLY_BRIGHTNESS='亮度';
Blockly.DLMLY_MAX7219_BRIGHTNESS_TOOLTIP='亮度范围0~15'
Blockly.DLMLY_MAX7219_LEDARRAY='图案变量';
Blockly.DLMLY_MAX7219='MAX7219点阵屏幕';
Blockly.DLMLY_MAX7219_INIT='MAX7219点阵初始化';
Blockly.DLMLY_MAX7219_IMG='LED点阵(MAX7219)预设图案';
Blockly.DLMLY_MAX7219_HDISPALY='水平点阵屏数';
Blockly.DLMLY_MAX7219_VDISPALY='竖直点阵屏数';
Blockly.MAX7219_FILLSCREEN_ON='全亮';
Blockly.MAX7219_FILLSCREEN_OFF='全灭';
Blockly.MAX7219_SHUTDOWN_ON='关闭屏幕';
Blockly.MAX7219_SHUTDOWN_OFF='开启屏幕';
Blockly.DLMLY_MAX7219_NO='屏幕序号';
Blockly.DLMLY_TOOPTIP_Matrix_MAX7219_CLEAR = Blockly.DLMLY_TOOPTIP_Matrix_MAX7219_CLEAR;
Blockly.MAX7219_INIT_TOOLTIP = '初始化MAX7219 8*8点阵屏';
Blockly.DLMLY_TOOPTIP_Matrix_MAX7219_STRING = '按一定速度逐个显示字符串中的每个字符';
Blockly.DLMLY_TOOPTIP_Matrix_MAX7219_PREDEFARR = '返回预先定义的图案对应的数组';

//TM1637
Blockly.DLMLY_4DIGITDISPLAY_TM1637 = 'TM1637';
Blockly.DLMLY_4DIGITDISPLAY_TM1637_DISPLAYPRINT = 'TM1637 显示';
Blockly.DLMLY_4DIGITDISPLAY_TM1637_DISPLAYSTRING_TIP = '少于等于4字符为显示，超过4个字符为滚动。';
Blockly.DLMLY_4DIGITDISPLAY_TM1637_TIP = '使用前必须用两个管脚初始化,CLK是时钟管脚,DIO是数据管脚';
Blockly.DLMLY_4DIGITDISPLAY_TM1637_DISPLAYTIME = 'TM1637 显示时间';
Blockly.DLMLY_4DIGITDISPLAY_TM1637_DISPLAYTIME_TOOLTIP = '显示时间,时分';
Blockly.DLMLY_4DIGITDISPLAY_TM1637_INIT = 'TM1637 初始化';
Blockly.DLMLY_4DIGITDISPLAY_TM1637_BRIGHTNESS = 'TM1637 设置亮度';
Blockly.DLMLY_4DIGITDISPLAY_4DIGITDISPLAY_BRIGHTNESS_TOOLTIP = '设置亮度,范围是0-7';
Blockly.DLMLY_4DIGITDISPLAY_TM1637_CLEARDISPLAY = 'TM1637 清屏';

Blockly.DLMLY_YEAR = '年';
Blockly.DLMLY_MONTH = '月';
Blockly.DLMLY_DAY = '日';
Blockly.DLMLY_HOUR = '时';
Blockly.DLMLY_MINUTE = '分';
Blockly.DLMLY_SECOND = '秒';
Blockly.DLMLY_WEEK = '周';
Blockly.DLMLY_MILLISECOND = '微秒';
Blockly.DLMLY_DS1302_INITPIN = '初始化时钟模块DS1302 管脚';
Blockly.DLMLY_SETDATE = '设置日期:';
Blockly.DLMLY_DATEFORMATE = '日期格式(年-月-日)';
Blockly.DLMLY_TIMEFORMATE = '时间格式(时:分:秒)';
//8*8点阵显示屏
Blockly.DLMLY_DISPLAY_MATRIX_INIT = "HT16K33点阵屏幕初始化";
Blockly.DLMLY_DISPLAY_MATRIX_SHOW = "HT16K33点阵屏幕";
Blockly.DLMLY_DISPLAY_MATRIX_X = 'X轴';
Blockly.DLMLY_DISPLAY_MATRIX_Y = 'Y轴';
Blockly.DLMLY_DISPLAY_MATRIX_SHOWPOINT = ' 单点设为';
Blockly.DLMLY_DISPLAY_MATRIX_SHOWPOINT_TOOLTIP = '点阵屏单点操作，XY轴取值范围1-8';
Blockly.DLMLY_DISPLAY_MATRIX_CLEAR = " 显示清屏";
Blockly.DLMLY_DISPLAY_MATRIX_ARRAYVAR = "数组变量";
Blockly.DLMLY_DISPLAY_MATRIX_PICARRAY = " 图案数组";
Blockly.DLMLY_DISPLAY_MATRIX_ROTATE = "旋转";

Blockly.DLMLY_RTCINIT = '初始化时钟模块DS1307';
Blockly.DLMLY_RTCGETTIME = '获取RTC时钟时间';
Blockly.DLMLY_RTCSETTIME = '设置RTC时钟模块时间：';
Blockly.DLMLY_RTCSETDATE = '设置RTC时钟模块日期：';

Blockly.DLMLY_ADXL345 = '重力感应块_ADXL345';
Blockly.DLMLY_ADXL345_X ='X轴加速度';
Blockly.DLMLY_ADXL345_Y ='Y轴加速度';
Blockly.DLMLY_ADXL345_Z ='Z轴加速度';
Blockly.DLMLY_ADXL345_XA ='X轴角度';
Blockly.DLMLY_ADXL345_YA ='Y轴角度';
Blockly.DLMLY_ADXL345_ZA ='Z轴角度';
//microbit javascript
Blockly.DLMLY_MICROBIT_JS_IS_GESTURE='发生手势 ';
Blockly.DLMLY_MICROBIT_JS_SERIAL_WHEN_CONTAIN_DATA='当 Serial 收到的数据包含 ';
Blockly.DLMLY_MICROBIT_JS_SERIAL_READ_LINE='Serial 读取一行';
Blockly.DLMLY_MICROBIT_JS_RANDOM_BOOLEAN='随机产生真或假';
Blockly.DLMLY_MICROBIT_JS_PERIOD='周期(微秒)设为';
Blockly.DLMLY_MICROBIT_JS_LAST_PULSE_PERIOD='获取最近一次脉冲的周期(微秒)';
Blockly.DLMLY_MICROBIT_JS_PULSE_STATUS='脉冲状态';
Blockly.DLMLY_MICROBIT_JS_RADIO_SEND_NUMBER='无线 发送数字';
Blockly.DLMLY_MICROBIT_JS_RADIO_SEND_VALUE='无线 发送键值';
Blockly.DLMLY_MICROBIT_JS_RADIO_SEND_STRING='无线 发送字符串';
Blockly.DLMLY_MICROBIT_JS_RADIO_ON_RECEIVE='当无线收到';
Blockly.DLMLY_MICROBIT_JS_RADIO_SET_GROUP='无线 设置组';
Blockly.DLMLY_MICROBIT_JS_RADIO_SET_TRANSMIT_POWER='无线 设置输出信号强度';
Blockly.DLMLY_MICROBIT_JS_RADIO_SET_TRANSMIT_SERIAL_NUMBER='无线 设置传输中带串口号';
Blockly.DLMLY_MICROBIT_JS_RADIO_WRITE_RECEIVE_PACKET_TO_SERIAL='无线 将收到数据写入串口';
Blockly.DLMLY_MICROBIT_JS_CREATE_SPRITE='创建精灵 在x:';
Blockly.DLMLY_MICROBIT_JS_Y='y:';
Blockly.DLMLY_MICROBIT_JS_MOVE_BY='移动';
Blockly.DLMLY_MICROBIT_JS_DELETE_VAR='删除';
Blockly.DLMLY_MICROBIT_JS_TURN='朝';
Blockly.DLMLY_MICROBIT_JS_BY_ANGLE='角度';
Blockly.DLMLY_MICROBIT_JS_NUMBER='大小';
Blockly.DLMLY_MICROBIT_JS_CHANGE='改变';
Blockly.DLMLY_MICROBIT_JS_TOUCH='碰触';
Blockly.DLMLY_MICROBIT_JS_TOUCH_EDGE='碰触边缘?';
Blockly.DLMLY_MICROBIT_JS_CHANGE_SCORE='改变分数 大小';
Blockly.DLMLY_MICROBIT_JS_SET_SCORE='设置分数';
Blockly.DLMLY_MICROBIT_JS_ON_EDGE_BOUNCE='如果在边缘,则跳跃';
Blockly.DLMLY_MICROBIT_JS_START_COUNTDOWN='倒计时(毫秒)';
Blockly.DLMLY_MICROBIT_JS_SCORE='游戏得分';
Blockly.DLMLY_MICROBIT_JS_GAME_OVER='游戏结束';
Blockly.DLMLY_MICROBIT_JS_GAME_RESUME='游戏复位';
Blockly.DLMLY_MICROBIT_JS_GAME_PAUSE='游戏暂停';
Blockly.DLMLY_MICROBIT_JS_ACCELERATION="获取加速度 (g)"
Blockly.DLMLY_MICROBIT_JS_SET_ACCELERATION='设置加速度范围';
Blockly.DLMLY_MICROBIT_JS_LIGHT_LEVEL='获取光亮度';
Blockly.DLMLY_MICROBIT_JS_CALIBRATE_COMPASS='校准指南针';
Blockly.DLMLY_MICROBIT_JS_GET_COMPASS='获取指南针';
Blockly.DLMLY_MICROBIT_JS_COMPASS_HEADING='角度';
Blockly.DLMLY_MICROBIT_JS_ROTATION='获取旋转角度';
Blockly.DLMLY_MICROBIT_JS_MAGETIC_FORCE='获取磁通量(uT)';
Blockly.DLMLY_MICROBIT_JS_BEAT='节拍';
Blockly.DLMLY_MICROBIT_JS_RING_TONE='持续播放声音';
Blockly.DLMLY_MICROBIT_JS_REST_TONE='声音停止(ms)';
Blockly.DLMLY_MICROBIT_JS_START_MELODY='播放歌曲';
Blockly.DLMLY_MICROBIT_JS_MUSIC_EVENT='当播放';
Blockly.DLMLY_MICROBIT_JS_GET_TEMPO='获取节奏';
Blockly.DLMLY_MICROBIT_JS_CHANGE_TEMPO='增加节奏';
Blockly.DLMLY_MICROBIT_JS_SET_TEMPO='设置节奏为';
Blockly.DLMLY_MICROBIT_JS_I2C_READ_ADDRESS='i2c 读取数字 地址';
Blockly.DLMLY_MICROBIT_JS_I2C_FORMAT='格式';
Blockly.DLMLY_MICROBIT_JS_I2C_WRITE_ADDRESS='i2c 写入数字 地址';
Blockly.DLMLY_MICROBIT_JS_I2C_VALUE='值';
Blockly.DLMLY_MICROBIT_JS_I2C_BIT='字节';
Blockly.DLMLY_MICROBIT_JS_I2C_SETUP='i2c 初始化';
Blockly.DLMLY_MICROBIT_JS_SPI_WRITE="spi 写入";
Blockly.DLMLY_MICROBIT_JS_SPI_FREQUENCY="spi 频率";
Blockly.DLMLY_MICROBIT_JS_SPI_FORMAT="spi 格式";
Blockly.DLMLY_MICROBIT_JS_SPI_SET_PINS="spi 设置管脚";
Blockly.DLMLY_MICROBIT_JS_BLE_SERVICE='蓝牙 开启服务';
Blockly.DLMLY_MICROBIT_JS_BLE_ON_CONNECTED='蓝牙 连接时';
Blockly.DLMLY_MICROBIT_JS_BLE_ON_DISCONNECTED='蓝牙 断开连接时';
Blockly.DLMLY_MICROBIT_JS_BLE_ON_RECEIVE='蓝牙 收到数据';
Blockly.DLMLY_MICROBIT_JS_BLE_CONNECTED='可连接';
Blockly.DLMLY_MICROBIT_JS_BLE_NAMESPACE='命名空间(字节 6-9)';
Blockly.DLMLY_MICROBIT_JS_BLE_INSTANCE='实例(字节 2-6)';
Blockly.DLMLY_MICROBIT_JS_BLE_POWER='功率';
Blockly.DLMLY_MICROBIT_JS_BLE_URL='网址'
Blockly.DLMLY_MICROBIT_JS_BLE_WRITE_NUMBER='蓝牙 uart 写入数字';
Blockly.DLMLY_MICROBIT_JS_BLE_WRITE_STRING='蓝牙 uart 写入字符串';
Blockly.DLMLY_MICROBIT_JS_BLE_WRITE_VALUE='蓝牙 uart 写入值';
Blockly.DLMLY_MICROBIT_JS_BLE_UART_SERVICE='蓝牙 开启uart服务';
Blockly.DLMLY_MICROBIT_JS_BLE_STOP_ADVERTISING='停止蓝牙公布';
Blockly.DLMLY_MICROBIT_JS_BLE_SET_POWER='设置蓝牙传输功率';
Blockly.DLMLY_MICROBIT_JS_BLE_READ_UNTIL='蓝牙 读取uart 直到遇到';
Blockly.DLMLY_MICROBIT_JS_BLE_URL_CONNECTED='蓝牙 公布网址. 可连接';
Blockly.DLMLY_MICROBIT_JS_BLE_UID_CONNECTED='蓝牙 公布UID. 可连接';
Blockly.DLMLY_MICROBIT_JS_SYSTEM_RUN_BACKGROUND='在后台运行';
Blockly.DLMLY_MICROBIT_JS_SYSTEM_RESET='重置';
Blockly.DLMLY_MICROBIT_JS_SYSTEM_WAIT='等待 (us)';
Blockly.DLMLY_MICROBIT_JS_SYSTEM_RAISE_SOURCE='触发事件 源';
Blockly.DLMLY_MICROBIT_JS_SYSTEM_RAISE_VALUE='值';
Blockly.DLMLY_MICROBIT_JS_SYSTEM_ON_SOURCE='当事情发生时 源';
Blockly.DLMLY_MICROBIT_JS_SYSTEM_TIMESTAMP='事情时间戳';
Blockly.DLMLY_MICROBIT_JS_SYSTEM_VALUE='事件值';
Blockly.DLMLY_MICROBIT_JS_SYSTEM_DEVICE_NAME='设备名';
Blockly.DLMLY_MICROBIT_JS_SYSTEM_DEVICE_SERIAL_NUMBER='设备串口号';
Blockly.DLMLY_MICROBIT_JS_MONITOR_SHOW_NUMBER='显示数字';
Blockly.DLMLY_MICROBIT_JS_MONITOR_SHOW_STRING='显示字符串';
Blockly.DLMLY_MICROBIT_JS_MONITOR_SHOW_IMAGE_OR_STRING='显示图像/字符串';
Blockly.DLMLY_MICROBIT_JS_MONITOR_SHOW_STRING_ONE_BY_ONE='逐字';
Blockly.DLMLY_MICROBIT_JS_MONITOR_SHOW_LEDS='显示LED';
Blockly.DLMLY_MICROBIT_JS_MONITOR_SHOW_ARROW='显示箭头';
Blockly.DLMLY_MICROBIT_JS_MONITOR_CLEAR_SCREEN='清屏';
Blockly.DLMLY_MICROBIT_JS_MONITOR_PLOT_POINT_X='绘图 x';
Blockly.DLMLY_MICROBIT_JS_MONITOR_PLOT_POINT_Y='y';
Blockly.DLMLY_MICROBIT_JS_MONITOR_UNPLOT_POINT_X='取消绘图 x';
Blockly.DLMLY_MICROBIT_JS_MONITOR_TOGGLE_POINT_X='切换 x';
Blockly.DLMLY_MICROBIT_JS_MONITOR_GET_POINT_X='点 x';
Blockly.DLMLY_MICROBIT_JS_MONITOR_PLOT_BAR_START='绘制条形图 值为';
Blockly.DLMLY_MICROBIT_JS_MONITOR_PLOT_BAR_END='最高';
Blockly.DLMLY_MICROBIT_JS_MONITOR_BRIGHTNESS='亮度';
Blockly.DLMLY_MICROBIT_JS_MONITOR_SET_BRIGHTNESS='设置亮度';
Blockly.DLMLY_MICROBIT_JS_MONITOR_STOP_ANIMATION='停止动画';
Blockly.DLMLY_MICROBIT_JS_MONITOR_LED_ENABLE='LED 启动';
Blockly.DLMLY_MICROBIT_JS_MONITOR_SHOW_IMAGE='显示图片';
Blockly.DLMLY_MICROBIT_JS_MONITOR_AT_OFFSET='offset';
Blockly.DLMLY_MICROBIT_JS_MONITOR_CREATE_IMAGE='创建图像';
Blockly.DLMLY_MICROBIT_JS_MONITOR_SCROLL_IMAGE='滚动图像';
Blockly.DLMLY_MICROBIT_JS_MONITOR_WITH_OFFSET='offset';
Blockly.DLMLY_MICROBIT_JS_MONITOR_SCROLL_INTERVAL='间隔';
Blockly.DLMLY_MICROBIT_JS_MONITOR_CREATE_BIG_IMAGE='创建大图像';
Blockly.DLMLY_MICROBIT_JS_MONITOR_ARROW_IMAGE='获取箭头图像';
Blockly.DLMLY_MICROBIT_JS_TYPE_NUMBER='数字';
Blockly.DLMLY_MICROBIT_JS_TYPE_STRING='字符串';
Blockly.DLMLY_MICROBIT_JS_TYPE_BOOLEAN='布尔';
Blockly.DLMLY_MICROBIT_JS_TYPE_ARRAY_NUMBER='数组<数字>';
Blockly.DLMLY_MICROBIT_JS_TYPE_ARRAY_STRING='数组<字符串>';
Blockly.DLMLY_MICROBIT_JS_LIST_ADD_VALUE='增加 值';
Blockly.DLMLY_MICROBIT_JS_LIST_TO_END='到末尾';
Blockly.DLMLY_MICROBIT_JS_LIST_GET_AND_REMOVE_LAST='获取并删除最后一项';
Blockly.DLMLY_MICROBIT_JS_LIST_INSERT_AT='插入 第';
Blockly.DLMLY_MICROBIT_JS_LIST_VALUE='项  值';
Blockly.DLMLY_MICROBIT_JS_LIST_REVERSE='逆序';
Blockly.DLMLY_MICROBIT_JS_LIST_CLEAR='清除';
Blockly.DLMLY_MICROBIT_JS_LIST_GET_AND_REMOVE_FIRST='获取并删除第一项';
Blockly.DLMLY_MICROBIT_JS_LIST_INSERT='插入';
Blockly.DLMLY_MICROBIT_JS_LIST_AT_BEGINNING='在首端';
Blockly.DLMLY_MICROBIT_JS_LIST_FIND_INDEX_OF='获取下标 值';
Blockly.DLMLY_MICROBIT_JS_LIST_REMOVE_VALUE_AT='删除项 第';
Blockly.DLMLY_MICROBIT_JS_LIST_REMOVE_VALUE_XIANG='项';
Blockly.DLMLY_MICROBIT_JS_INTERRUPT_BTN='中断 按钮#';

Blockly.DLMLY_MICROBIT_JS_INOUT_ANALOG_PITCH = '模拟输出频率为';
Blockly.DLMLY_MICROBIT_JS_INOUT_FREQUENCY = '赫兹的音调持续时长（秒）';
Blockly.Msg.INOUT_ANALOGPITCH  = "输出一定频率的音调一段时间";
Blockly.DLMLY_MICROBIT_JS_INOUT_SETPIN  = "设置管脚 #";
Blockly.DLMLY_MICROBIT_JS_INOUT_EMITEVENTS  = "发出事件";
Blockly.DLMLY_MICROBIT_JS_INOUT_EVENT_EDGE = "接触边缘";
Blockly.DLMLY_MICROBIT_JS_INOUT_EVENT_PULSE = "脉冲";
Blockly.DLMLY_MICROBIT_JS_INOUT_EVENT_TOUCH = "触碰";
Blockly.DLMLY_MICROBIT_JS_INOUT_EVENT_NONE = "无";
Blockly.DLMLY_MICROBIT_JS_INOUT_SETPULL  = "电路状态";
Blockly.Msg.INOUT_SETEVENT  = "设置管脚发出的事件类型";
Blockly.DLMLY_MICROBIT_JS_INOUT_PULL_UP = "上拉";
Blockly.DLMLY_MICROBIT_JS_INOUT_PULL_DOWN = "下拉";
Blockly.DLMLY_MICROBIT_JS_INOUT_PULL_NONE = "无";
Blockly.Msg.INOUT_SETPULL  = "设置电路状态";
Blockly.DLMLY_MICROBIT_JS_INOUT_SET_PITCH_PIN  = "设置模拟输出声调的管脚为#";
Blockly.Msg.INOUT_SET_PITCH_PIN  = "设置用来进行模拟输出声调的管脚编号";
Blockly.DLMLY_MICROBIT_shake='摇晃';
Blockly.DLMLY_MICROBIT_up='上';
Blockly.DLMLY_MICROBIT_down='下';
Blockly.DLMLY_MICROBIT_left='左';
Blockly.DLMLY_MICROBIT_right='右';
Blockly.DLMLY_MICROBIT_face_up='朝上';
Blockly.DLMLY_MICROBIT_face_down='朝下';
Blockly.DLMLY_MICROBIT_freefall='自由落体';
//microbit
Blockly.DLMLY_MICROBIT_Accelerometer_X='加速度计X轴';
Blockly.DLMLY_MICROBIT_Accelerometer_Y='加速度计Y轴';
Blockly.DLMLY_MICROBIT_Accelerometer_Z='加速度计Z轴';
Blockly.DLMLY_MICROBIT_Was_gesture='发生过手势 %1';
Blockly.DLMLY_MICROBIT_Is_gesture='发生手势 %1';
Blockly.DLMLY_MICROBIT_shake='摇晃';
Blockly.DLMLY_MICROBIT_up='上';
Blockly.DLMLY_MICROBIT_down='下';
Blockly.DLMLY_MICROBIT_left='左';
Blockly.DLMLY_MICROBIT_right='右';
Blockly.DLMLY_MICROBIT_face_up='朝上';
Blockly.DLMLY_MICROBIT_face_down='朝下';
Blockly.DLMLY_MICROBIT_freefall='自由落体';
Blockly.DLMLY_MICROBIT_Get_gestures='获取所有识别的手势';
Blockly.DLMLY_MICROBIT_Current_gesture='当前手势';
Blockly.DLMLY_MICROBIT_Button_is_pressed='按键 %1 已经按下';
Blockly.DLMLY_MICROBIT_Button_was_pressed='按钮 %1 曾经按下';
Blockly.DLMLY_MICROBIT_Get_number_of_presses_for_button='按钮 %1 按下过的次数';
Blockly.DLMLY_MICROBIT_Calibrate_compass='校正指南针';
Blockly.DLMLY_MICROBIT_Compass_is_calibrated='指南针已经校正？';
Blockly.DLMLY_MICROBIT_Compass_heading='指南针方向';
Blockly.DLMLY_MICROBIT_Compass_field_strength='磁场强度';
Blockly.DLMLY_MICROBIT_Get_brightness_at='获取第X列 %1 Y行 %2 位置的亮度';
Blockly.DLMLY_MICROBIT_Set_brightness_at='设置第X列 %1 Y行 %2 LED的亮度到 %3';
Blockly.DLMLY_MICROBIT_Clear_display='清除显示内容';
Blockly.DLMLY_MICROBIT_Show_image='显示图像';
Blockly.DLMLY_MICROBIT_SHOW_IMAGE_OR_STRING='显示(图像/字符串)';
Blockly.DLMLY_MICROBIT_Animate_images_or_string='依次显示(图像/字符串) %1 延时 %2 毫秒 %3 等待 %4 %5 循环 %6 %7 清除 %8';
Blockly.DLMLY_MICROBIT_Scroll_message='滚动消息 %1';
Blockly.DLMLY_MICROBIT_Turn_on_display='打开';
Blockly.DLMLY_MICROBIT_Turn_off_display='关闭';
Blockly.DLMLY_MICROBIT_monitor = "屏幕";
Blockly.DLMLY_MICROBIT_Display_is_on='显示器已打开？';
Blockly.DLMLY_MICROBIT_Built_in_image='内置图像 %1';
Blockly.DLMLY_MICROBIT_Copy_image='复制图像 %1';
Blockly.DLMLY_MICROBIT_Invert_image='反显图像 %1';
Blockly.DLMLY_MICROBIT_Create_image='创建图像 %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %15 %16 %17 %18 %19 %20 %21 %22 %23 %24 %25 %26 %27 %28 %29 %30';
Blockly.DLMLY_MICROBIT_Panic_with_status_code='错误状态码';
Blockly.DLMLY_MICROBIT_Sleep='睡眠 %1 毫秒';
Blockly.DLMLY_MICROBIT_Running_time='运行时间';
Blockly.DLMLY_MICROBIT_Board_temperature='主板温度';
Blockly.DLMLY_MICROBIT_Reset_micro='复位 micro:bit';
Blockly.DLMLY_MICROBIT_Play_built_in_melody='播放内置音乐 %1 管脚 #%2 %3 等待 %4 %5 循环 %6';
Blockly.DLMLY_MICROBIT_Play_built_in_melody_easy='播放内置音乐 %1 管脚 #%2 %3 ';
Blockly.DLMLY_MICROBIT_Play_pitch='播放声音频率 %1 %2 持续 %3 毫秒';
Blockly.DLMLY_MICROBIT_Play_notes='播放音符列表 %1 管脚 # %2 等待 %3 %4 循环 %5';
Blockly.DLMLY_MICROBIT_Reset_music='恢复音乐初始设置';
Blockly.DLMLY_MICROBIT_Stop_music='停止播放音乐';
Blockly.DLMLY_MICROBIT_Set_tempo='设置节拍: 1 拍 %1 ticks at %2 bpm';
Blockly.DLMLY_MICROBIT_Get_current_tempo='获取当前节奏';
Blockly.DLMLY_MICROBIT_Initialise_pin='使用引脚 %1 控制，neopixel 彩灯数 %2 %3';
Blockly.DLMLY_MICROBIT_Clear_neopixels='清除neopixels彩灯 %1';
Blockly.DLMLY_MICROBIT_Show_neopixels='显示neopixels彩灯 %1';
Blockly.DLMLY_MICROBIT_Using_neopixels='neopixels彩灯控制 %1 设置位置 %2 红色 %3 绿色 %4 蓝色 %5';
Blockly.DLMLY_MICROBIT_Switch_on_radio='打开无线';
Blockly.DLMLY_MICROBIT_Switch_off_radio='关闭无线';
Blockly.DLMLY_MICROBIT_Configure_radio='配置无线 消息长度 %1 队列 %2 %3 信道 %4 %5 广播功率 %6 %7 地址 %8 %9 群组 %10 %11 数据速率 %12 %13';
Blockly.DLMLY_MICROBIT_SPI_INIT='spi初始化 波特率 %1 bits %2 %3 mode %4 %5 MOSI# %6 %7 MISO# %8 SCK# %9';
Blockly.DLMLY_MICROBIT_Reset_radio='复位无线';
Blockly.DLMLY_MICROBIT_Send_message='发送消息 %1';
Blockly.DLMLY_MICROBIT_Receive_message='无线接收';
Blockly.DLMLY_MICROBIT_Say='说 %1';
Blockly.DLMLY_MICROBIT_Pronounce='读 %1';
Blockly.DLMLY_MICROBIT_Sing='唱 %1';
Blockly.DLMLY_MICROBIT_Pin_touched='管脚 # %1 被触摸？';
Blockly.DLMLY_MICROBIT_Read_analog='模拟输入 管脚 # %1';
Blockly.DLMLY_MICROBIT_Write_analog='模拟输出 管脚 # %2 设为 %1';
Blockly.DLMLY_MICROBIT_Read_digital='数字输入 管脚 # %1';
Blockly.DLMLY_MICROBIT_Write_digital='数字输出 管脚 # %2 设为 %1';
Blockly.DLMLY_MICROBIT_JS_WAS_GESTURE='发生过手势 ';
Blockly.DLMLY_MICROBIT_JS_GET = '获取';
Blockly.DLMLY_MICROBIT_JS_GET_GESTURE='所有识别的';
Blockly.DLMLY_MICROBIT_JS_CURRENT_GESTURE='当前';
Blockly.DLMLY_MICROBIT_JS_GESTURE = '手势';
Blockly.DLMLY_MICROBIT_JS_FIELD_STRENGTH='磁场强度';
Blockly.DLMLY_MICROBIT_JS_IS_COMPASS_CALIBRATED='指南针已经校正？';
Blockly.DLMLY_IS_TOUCHED='被触摸';
Blockly.DLMLY_WAS_PRESSED='被按下？';
Blockly.DLMLY_GET_PRESSES='被按下的次数';

Blockly.DLMLY_MICROBIT_JS_MONITOR_SCROLL_STRING='滚动显示字符串';
Blockly.DLMLY_MICROBIT_PY_ACTUATOR_SPEECH_SAY='说'
Blockly.DLMLY_MICROBIT_PY_ACTUATOR_SPEECH_SING='唱'
Blockly.DLMLY_MICROBIT_PY_ACTUATOR_SPEECH_PRENOUNCE='读'
//lists
Blockly.Msg.LISTS_NAME_TOOLTIP='输入列表名称';
Blockly.blockpy_LIST_ADD_LIST='增加 列表';
Blockly.Msg.blockpy_LISTS_CREATE_WITH_INPUT_WITH ='初始化列表为';
Blockly.DLMLY_blockpy_TOOLTIP_LISTS_CREATE_WITH_TEXT='通过一个字符串来创建一个列表。';
Blockly.Msg.blockpy_LISTS_CREATE_WITH_TOOLTIP= "建立一个具有任意数量项目的列表。";
Blockly.blockpy_DLMLY_SPLITBYDOU='创建列表';
Blockly.Msg.blockpy_LISTS_LENGTH_TOOLTIP = "返回列表的长度。";
Blockly.blockpy_LANG_LISTS_GET_INDEX_TOOLTIP = '返回列表中指定位置的值。';
Blockly.blockpy_LANG_LISTS_SET_INDEX_TOOLTIP = '设置列表中指定位置的值。';
Blockly.Msg.LISTS_GET_INDEX_RANDOM2 = "随机取出列表";
Blockly.Msg.LISTS_GET_INDEX_RANDOM3 = "中的一项";

Blockly.Msg.MATH_ZHENGCHU_SYMBOL = "//";
Blockly.DLMLY_MICROBIT_JS_PERIOD_MIL='周期';
Blockly.DLMLY_TOOLTIP_INOUT_ANALOG_WRITE_PY = '设置指定管脚的值(0~1023)';

Blockly.Msg.LISTS_ISEMPTY_TITLE= '是空的吗?';
Blockly.Msg.LISTS_SORT_TITLE = '%1 排序 %2 %3';
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = '按数字';
Blockly.Msg.LISTS_SORT_TYPE_TEXT = '按字母';
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE ='按字母(忽略大小写)';
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING='升序';
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING='降序';
Blockly.Msg.DISPLAY_IMAGE_LET='将图像';
Blockly.Msg.DISPLAY_IMAGE_LET2='向';
Blockly.Msg.DISPLAY_IMAGE_SHIFT='平移';
Blockly.Msg.DISPLAY_IMAGE_UNIT='个单位';

Blockly.LANG_MATH_RANDOM_FLOAT_INPUT_FROM = '随机小数 从';
Blockly.LANG_MATH_RANDOM_FLOAT_INPUT_TO = '到';
Blockly.LANG_MATH_RANDOM_FLOAT_TOOLTIP2 = '返回两个数（含）之间的随机小数';

Blockly.MICROBIT_SPEECH_pitch = '音高';
Blockly.MICROBIT_SPEECH_speed = '速度';
Blockly.MICROBIT_SPEECH_mouth = '嘴唇';
Blockly.MICROBIT_SPEECH_throat = '喉咙';
Blockly.MICROBIT_SPEECH_translation = '翻译为语音';

Blockly.MICROBIT_ACTUATOR_bpm = '速度';
Blockly.MICROBIT_ACTUATOR_ticks = '分辨率';

Blockly.MICROBIT_PYTHON_TYPE = '获取数据类型';
Blockly.MICROBIT_LOGIC_IS_IN = '中';
Blockly.Msg.CONTROLS_FOREACH_INPUT = "对";

Blockly.MICROBIT_DISPLAY_UNION = '联合';
Blockly.MICROBIT_DISPLAY_INTERSECTION = '相交';
Blockly.MICROBIT_DISPLAY_MINUS = '减除';
Blockly.MICROBIT_DISPLAY_MERGE_SHAPE = '合并形状';
Blockly.Msg.DICTS_CREATE_EMPTY_TITLE = "初始化为空字典";
Blockly.Msg.DICTS_CREATE_EMPTY_TOOLTIP = "返回一个空字典，长度为 0，不包含任何数据记录";
Blockly.Msg.DICTS_CREATE_WITH_CONTAINER_TITLE_ADD = "字典";
Blockly.Msg.DICTS_CREATE_WITH_CONTAINER_TOOLTIP = "增加、删除或重新排列各部分以此重新配置这个字典块。";
Blockly.Msg.DICTS_CREATE_WITH_INPUT_WITH = "初始化字典为";
Blockly.Msg.DICTS_CREATE_WITH_ITEM_TITLE = "条目"
Blockly.Msg.DICTS_CREATE_WITH_ITEM_TOOLTIP = "将一个项添加到字典中。";
Blockly.Msg.DICTS_CREATE_WITH_TOOLTIP = "建立一个具有任意数量项目的字典。";
Blockly.Msg.DICTS_CREATE_WITH_ITEM_KEY= "key"
Blockly.Msg.DICT_KEYS = "获取所有键";
Blockly.Msg.DICTS_KEYS_TOOLTIP = "返回一个列表，包括一个字典所有的键";
Blockly.Msg.DICTS_GET_FROM_DICTS = "从字典";
Blockly.Msg.DICTS_GET_IN = "获取键";
Blockly.Msg.DICTS_GET_VALUE = "对应值";
Blockly.Msg.DICTS_GET_TOOLTIP = "访问字典中某个键的对应值";
Blockly.Msg.DICTS_ADD_in_DICT = "在字典";
Blockly.Msg.DICTS_ADD = "中添加或修改条目 键";
Blockly.Msg.DICTS_ADD_VALUE = "对应值";
Blockly.Msg.DICTS_ADD_OR_CHANGE_TOOLTIP = "在字典中添加或删除条目";
Blockly.Msg.DICTS_DELETE_IN = "中删除条目 键";
Blockly.Msg.DICTS_DELETE_VALUE = "及对应值";
Blockly.Msg.DICTS_DELETE_TOOLTIP = "删除字典中某个条目";
Blockly.Msg.DICT_CLEAR = "清空字典中所有条目";
Blockly.Msg.DICT_ITEMS = "字典转化为列表";
Blockly.Msg.DICTS_ITEMS_TOOLTIP = "返回一个列表，包括一个字典可遍历的所有键和对应值";
Blockly.Msg.DICT_VALUES = "获取所有键对应的值";
Blockly.Msg.DICTS_VALUES_TOOLTIP = "返回一个列表，包括一个字典所有键的对应值";
Blockly.Msg.DICTS_LENGTH_TOOLTIP = "返回字典的长度，即键的个数";
Blockly.Msg.DICT_DELDICT = "删除字典";
Blockly.Msg.OBJECT_DELETE= "删除列表/元组/字典/集合";
Blockly.Msg.MATH_BIN='二进制';
Blockly.Msg.MATH_DEC='十进制';
Blockly.Msg.MATH_OCT='八进制';
Blockly.Msg.MATH_HEX='十六进制';

Blockly.DLMLY_MICROBIT_TYPE_INT = '整数';
Blockly.DLMLY_MICROBIT_TYPE_FLOAT = '浮点数';
Blockly.DLMLY_MICROBIT_TYPE_STRING = "字符串";
Blockly.DLMLY_MICROBIT_TYPE_LIST = "列表";
Blockly.DLMLY_MICROBIT_TYPE_TUPLE = "元组";
Blockly.DLMLY_MICROBIT_TYPE_DICT = "字典";
Blockly.DLMLY_MICROBIT_TYPE_SETS = "集合";
Blockly.DLMLY_MICROBIT_TYPE_IMAGE = "图像";

Blockly.DLMLY_MICROBIT_PY_STORAGE_OPEN_FILE = "打开文件";
Blockly.DLMLY_MICROBIT_PY_STORAGE_MODE = "模式";
Blockly.DLMLY_MICROBIT_PY_STORAGE_READ = "读"
Blockly.DLMLY_MICROBIT_PY_STORAGE_WRITE = "写"
Blockly.DLMLY_MICROBIT_PY_STORAGE_BIT_READ = "二进制读";
Blockly.DLMLY_MICROBIT_PY_STORAGE_BIT_WRITE = "二进制写";
Blockly.DLMLY_MICROBIT_PY_STORAGE_AS = "为";
Blockly.DLMLY_MICROBIT_PY_STORAGE_MAKE = "将";
Blockly.DLMLY_MICROBIT_PY_STORAGE_FILE_WRITE = "写入文件";


Blockly.DLMLY_MICROBIT_PY_STORAGE_FROM_FILE = '从文件';
Blockly.DLMLY_MICROBIT_PY_STORAGE_NO_MORE_THAN_SIZE = "读取内容 不超过";
Blockly.DLMLY_MICROBIT_PY_STORAGE_ONE_LINE_NO_MORE_THAN_SIZE = "读取一行内容 不超过";
Blockly.DLMLY_MICROBIT_PY_STORAGE_ALL_LINES_NO_MORE_THAN_SIZE = "读取所有行内容 不超过";
Blockly.DLMLY_MICROBIT_PY_STORAGE_CHARACTER = "字符";
Blockly.DLMLY_MICROBIT_PY_STORAGE_FILE = "文件";
Blockly.DLMLY_MICROBIT_PY_STORAGE_CAN_WRITE_ORNOT = "是否可写";
Blockly.DLMLY_MICROBIT_PY_STORAGE_GET = "获取";
Blockly.DLMLY_MICROBIT_PY_STORAGE_FILENAME = "的文件名";
Blockly.DLMLY_MICROBIT_PY_STORAGE_CLOSE_FILE = "关闭文件";
Blockly.DLMLY_MICROBIT_PY_STORAGE_LIST_ALL_FILES = "列出所有文件";
Blockly.DLMLY_MICROBIT_PY_STORAGE_DELETE_FILE = "删除文件";
Blockly.DLMLY_MICROBIT_PY_STORAGE_GET_FILE_SIZE = "获得文件";
Blockly.DLMLY_MICROBIT_PY_STORAGE_SIZE = "大小";

Blockly.DLMLY_MICROBIT_PY_STORAGE_RETURN_FILE = "返回文件";
Blockly.DLMLY_MICROBIT_PY_STORAGE_PRESENT_LOCATION = "当前读取的位置";
Blockly.DLMLY_MICROBIT_PY_STORAGE_FILE_TELL = "返回文件当前读取的位置";
Blockly.DLMLY_MICROBIT_PY_STORAGE_SET_FILE_POSITION = "设置文件";
Blockly.DLMLY_MICROBIT_PY_STORAGE_CURRENT_POSITION = "当前读取位置为";
Blockly.DLMLY_MICROBIT_PY_STORAGE_FILE_SEEK_START = "从文件开头算起";
Blockly.DLMLY_MICROBIT_PY_STORAGE_FILE_SEEK_CURRENT = "从文件当前位置算起";
Blockly.DLMLY_MICROBIT_PY_STORAGE_FILE_SEEK_END = "从文件结尾算起";
Blockly.DLMLY_MICROBIT_PY_STORAGE_FILE_SEEK_OFFSET = "偏移";
Blockly.DLMLY_MICROBIT_PY_STORAGE_CHANGE_DIR = '改变当前工作目录为';
Blockly.DLMLY_MICROBIT_PY_STORAGE_GET_CURRENT_DIR = "获取当前工作目录";
Blockly.DLMLY_MICROBIT_PY_STORAGE_CREATE = "创建";
Blockly.DLMLY_MICROBIT_PY_STORAGE_MKDIR = "文件夹";
Blockly.DLMLY_MICROBIT_PY_STORAGE_MAKEDIRS = "嵌套的文件夹";
Blockly.DLMLY_MICROBIT_PY_STORAGE_PATH = "根据目录";
Blockly.DLMLY_MICROBIT_PY_STORAGE_DELETE_DIRS = "递归删除目录";
Blockly.DLMLY_MICROBIT_PY_STORAGE_RENAME = "重命名文件";
Blockly.DLMLY_MICROBIT_PY_STORAGE_TO = "为";
Blockly.DLMLY_MICROBIT_PY_STORAGE_IS_OR_NOT = "是否是";
Blockly.DLMLY_MICROBIT_PY_STORAGE_IS_FILE = "文件";
Blockly.DLMLY_MICROBIT_PY_STORAGE_IS_DIR = "目录";
Blockly.DLMLY_MICROBIT_PY_STORAGE_THE_PATH = "路径";

Blockly.DLMLY_MICROBIT_PY_CONTORL_GET_TYPE = "数据类型";
Blockly.DLMLY_MICROBIT_PY_CONTORL_UNAME = "当前系统信息";

Blockly.DLMLY_MICROBIT_SHOW_STRING = " %1 延时 %2 毫秒 %3 等待 %4 %5 循环 %6 %7 清除 %8";
// Blockly.DLMLY_MICROBIT_Scroll_string = "滚动显示字符串 %1 延时 %2 毫秒 %3 等待 %4 %5 循环 %6 %7 清除 %8";

Blockly.DLMLY_COMMUNICATION_RFID_INITIAL = "初始化rfid为";
Blockly.DLMLY_COMMUNICATION_RFID_ON_DETECTED = "侦测到信号";
Blockly.DLMLY_COMMUNICATION_RFID_READ_CARDNUM = "rfid所读卡的卡号";
Blockly.DLMLY_COMMUNICATION_RFID_READ_CARDNUM_IS = "RFID侦测到的卡号为";
Blockly.DLMLY_COMMUNICATION_RFID_WRITE = "RFID写卡";
Blockly.DLMLY_COMMUNICATION_DATA_BLOCK = "数据块";
Blockly.DLMLY_COMMUNICATION_WRITE_NUM = "写入数据为";
Blockly.DLMLY_MICROBIT_PY_COMMUNICATE_WIFI = "无线";
Blockly.DLMLY_MICROBIT_PY_COMMUNICATE_ON = "打开";
Blockly.DLMLY_MICROBIT_PY_COMMUNICATE_OFF = "关闭";
Blockly.DLMLY_COMMUNICATION_RFID_TOOLTIP = "这是RFID的读卡";
Blockly.DLMLY_COMMUNICATION_RFID_READ = "RFID读取";
Blockly.DLMLY_COMMUNICATION_DATA_FROM = "的数据";
Blockly.DLMLY_COMMUNICATION_RFID_OFF = "rfid停止侦测";
Blockly.DLMLY_MICROBIT_PY_COMMUNICATE_RESET = "复位";
//dlm
Blockly.blockpy_inout_input='接收输入';
Blockly.blockpy_inout_raw_input='接收字符串输入';
Blockly.blockpy_inout_print='打印（自动换行）';
Blockly.Msg.INOUT_input_TOOLTIP='接收键盘输入，以回车结尾，prompt是提供给用户的输入提示';
Blockly.Msg.INOUT_raw_input_TOOLTIP='以字符串格式接收键盘输入，以回车结尾，prompt是提供给用户的输入提示';
Blockly.blockpy_turtle_create='创建乌龟';
Blockly.blockpy_turtle_create_TOOLTIP='创建一个新的乌龟';
Blockly.blockpy_forward='向前';
Blockly.blockpy_backward='向后';
Blockly.blockpy_turtle_move_num='步数';
Blockly.blockpy_turtle_move='移动';
Blockly.DLMLY_TOOLTIP_TURTEL_FORWARD='命令乌龟向前移动';
Blockly.DLMLY_TOOLTIP_TURTEL_BACKWARD='命令乌龟向后移动';
Blockly.blockpy_left='向左';
Blockly.blockpy_right='向右';
Blockly.blockpy_turtle_rotate_num='角度';
Blockly.blockpy_turtle_rotate='旋转';
Blockly.DLMLY_TOOLTIP_TURTEL_LEFT='命令乌龟向左旋转';
Blockly.DLMLY_TOOLTIP_TURTEL_RIGHT='命令乌龟向右旋转';
Blockly.blockpy_setheading='面向';
Blockly.blockpy_setheading_degree='度';
Blockly.blockpy_time_time='当前时间的时间戳';
Blockly.Msg.blockpy_SET_CREATE_WITH_TOOLTIP = "建立一个具有任意数量元素的集合。";
Blockly.Msg.blockpy_SET_CREATE_EMPTY_TITLE = "初始化为空集合";
Blockly.Msg.blockpy_SET_CREATE_WITH_INPUT_WITH ='初始化集合为';
Blockly.Msg.blockpy_SET_CREATE_WITH_CONTAINER_TITLE_ADD = "集合";
Blockly.Msg.blockpy_SET_CREATE_WITH_CONTAINER_TOOLTIP = "增加、删除或重新排列各部分以此重新配置这个集合块。";
Blockly.Msg.blockpy_SET_VARIABLES_NAME = "元素";
Blockly.Msg.blockpy_SET_CREATE_WITH_ITEM_TOOLTIP = "将一个元素添加到集合中。";
Blockly.Msg.SET_LENGTH_TOOLTIP = "返回集合的元素个数。";
Blockly.Msg.SET_CLEAR = "清空集合中所有元素";
Blockly.Msg.LISTS_TO_SET = "转化为集合";
Blockly.blockpy_USE_LIST='将列表';
Blockly.Msg.LISTS_TO_SET_TOOLTIP = "通过列表创建集合";
Blockly.blockpy_set_union='并集';
Blockly.blockpy_set_intersection='交集';
Blockly.blockpy_set_difference='差集';
Blockly.blockpy_set='集合';
Blockly.blockpy_and_set='与集合';
Blockly.blockpy_set_get_operate='取';
Blockly.DLMLY_TOOLTIP_SET_UNION='返回两个集合的并集';
Blockly.DLMLY_TOOLTIP_SET_INTERSECTION='返回两个集合的交集';
Blockly.DLMLY_TOOLTIP_SET_DIFFERENCE='返回两个集合的差集';
Blockly.DLMLY_blockpy_set_add='增加';
Blockly.Msg.SET_ADD_TOOLTIP = "向集合中添加一个元素，若此元素已在集合中则没有效果。";
Blockly.DLMLY_blockpy_set_discard='移除';
Blockly.Msg.SET_DISCARD_TOOLTIP = "从集合中移除一个元素，若此元素不在集合中则没有效果。";
Blockly.blockpy_set_update='并更新';
Blockly.DLMLY_TOOLTIP_SET_UPDATE='取两个集合的并集，并赋值给前一个集合';
Blockly.DLMLY_TOOLTIP_SET_INTERSECTION_UPDATE='取两个集合的交集，并赋值给前一个集合';
Blockly.DLMLY_TOOLTIP_SET_DIFFERENCE_UPDATE='取两个集合的差集，并赋值给前一个集合';
Blockly.blockpy_set_of='的';
Blockly.blockpy_is_set='是否是集合';
Blockly.blockpy_set_sub='子集';
Blockly.blockpy_set_super='超集';
Blockly.DLMLY_TOOLTIP_SET_SUB='判断前一个集合是否是后一个集合的子集，返回布尔值';
Blockly.DLMLY_TOOLTIP_SET_SUPER='判断前一个集合是否是后一个集合的超集，返回布尔值';
Blockly.blockpy_turtle_clear='清屏';
Blockly.blockpy_turtle_reset='重置';
Blockly.blockpy_turtle_home='返回原点';
Blockly.blockpy_turtle_drawing='痕迹';
Blockly.DLMLY_TOOLTIP_TURTEL_CLEAR='清除乌龟的所有痕迹，乌龟位置和状态不变';
Blockly.DLMLY_TOOLTIP_TURTEL_RESET='清除乌龟的所有痕迹，乌龟状态重置为初始状态';
Blockly.DLMLY_TOOLTIP_TURTEL_HOME='乌龟返回原点并恢复初始状态，痕迹不变';
Blockly.blockpy_turtle_penup='抬笔';
Blockly.blockpy_turtle_pendown='落笔';
Blockly.blockpy_turtle_blank=' ';
Blockly.DLMLY_TOOLTIP_TURTEL_PENUP='抬笔，乌龟移动时不会留下痕迹';
Blockly.DLMLY_TOOLTIP_TURTEL_PENDOWN='落笔，乌龟移动时会留下痕迹';
Blockly.blockpy_turtle_size='粗细';
Blockly.blockpy_turtle_speed='速度';
Blockly.blockpy_turtle_set='设置画笔';
Blockly.blockpy_turtle_set_num='为';
Blockly.DLMLY_TOOLTIP_TURTEL_SIZE='设置乌龟绘画痕迹的粗细';
Blockly.DLMLY_TOOLTIP_TURTEL_SPEED='设置乌龟绘画时的移动速度';
Blockly.blockpy_turtle_circle='圆';
Blockly.blockpy_turtle_dot='点';
Blockly.blockpy_turtle_draw='绘制图形';
Blockly.blockpy_turtle_radius='半径为';
Blockly.DLMLY_TOOLTIP_TURTEL_CIRCLE='绘制一个空心圆形';
Blockly.DLMLY_TOOLTIP_TURTEL_DOT='绘制一个实心圆点';
Blockly.blockpy_turtle_show='显示乌龟';
Blockly.blockpy_turtle_hide='隐藏乌龟';
Blockly.DLMLY_TOOLTIP_TURTEL_SHOW='将乌龟显示为箭头';
Blockly.DLMLY_TOOLTIP_TURTEL_HIDE='隐藏表示乌龟的箭头';
Blockly.blockpy_turtle_goto='移动到坐标 x';
Blockly.blockpy_turtle_goto_y='y';
Blockly.blockpy_turtle_goto_position='位置处';
Blockly.blockpy_turtle_setx='x';
Blockly.blockpy_turtle_sety='y';
Blockly.DLMLY_TOOLTIP_TURTEL_SETX='乌龟横向移动到给定的坐标位置';
Blockly.DLMLY_TOOLTIP_TURTEL_SETY='乌龟纵向移动到给定的坐标位置';
Blockly.blockpy_turtle_setxy='设置';
Blockly.blockpy_turtle_setxy_num='坐标为';
Blockly.blockpy_turtle_bgcolor='设置背景颜色';
Blockly.blockpy_turtle_pencolor='设置画笔颜色';
Blockly.blockpy_turtle_fillcolor='设置画笔填充颜色';
Blockly.Msg.TUPLE_CREATE_WITH_TOOLTIP = "建立一个具有任意数量项目的元组。";
Blockly.Msg.TUPLE_CREATE_EMPTY_TITLE = "初始化为空元组";
Blockly.Msg.TUPLE_CREATE_WITH_INPUT_WITH = "初始化元组为";
Blockly.Msg.TUPLE_CREATE_WITH_CONTAINER_TITLE_ADD = "元组";
Blockly.Msg.TUPLE_CREATE_WITH_CONTAINER_TOOLTIP = "增加、删除或重新排列各部分以此重新配置这个元组块。";
Blockly.Msg.TUPLE_CREATE_WITH_ITEM_TOOLTIP = "将一个元素添加到元素中。";
Blockly.TUPLE_GET_INDEX_TOOLTIP = '返回元组中指定位置的值。';
Blockly.Msg.TUPLE_LENGTH_TOOLTIP = "返回元组的长度。";
Blockly.Msg.TUPLE_DEL = "删除元组";
Blockly.Msg.TUPLE_JOIN = "连接";
Blockly.Msg.TUPLE_JOIN_TOOLTIP = "将两个元组进行连接形成一个新的元组。";
Blockly.Msg.LISTS_TO_TUPLE = "转化为元组";
Blockly.Msg.LISTS_TO_TUPLE_TOOLTIP = "通过列表创建元组";
Blockly.blockpy_TUPLE_MAX = '最大值';
Blockly.blockpy_TUPLE_MIN = '最小值';
Blockly.DLMLY_TOOLTIP_TUPLE_MAX = '返回元组中元素的最大值';
Blockly.DLMLY_TOOLTIP_TUPLE_MIN = '返回元组中元素的最小值';
Blockly.blockpy_TUPLE_GET = '获取';
Blockly.blockpy_turtle_set_size = '设置画笔粗细为';
Blockly.blockpy_turtle_set_speed = '设置画笔速度为';
Blockly.blockpy_inout_print_inline='打印';
Blockly.Msg.TEXT_PRINT_INLINE_TOOLTIP = "打印指定的文字、数字或其他值。";
Blockly.MICROPYTHON_TOOLTIP_LISTS_CREATE_WITH_TEXT = "通过一个字符串来创建一个列表。";
Blockly.DLMPY_TOOLTIP_TUPLE_CREATE_WITH_TEXT = "通过一个字符串来创建一个元组。";
Blockly.blockpy_DLMLY_TUPLE_CREATE='创建元组';
Blockly.Msg.TURTLE_CLONE = "复制乌龟";
Blockly.Msg.TURTLE_CLONE_TOOLTIP = "创建一个当前乌龟的复制。";
Blockly.blockpy_turtle_angle = '角度为';
Blockly.blockpy_turtle_beginfill='开始填充';
Blockly.blockpy_turtle_endfill='结束填充';
Blockly.DLMLY_TOOLTIP_TURTEL_BEGINFILL = '让乌龟开始进行填充';
Blockly.DLMLY_TOOLTIP_TURTEL_ENDFILL = '让乌龟结束填充';
Blockly.blockpy_USE_TUPLE='将元组';
Blockly.Msg.TUPLE_TO_LISTS = "转化为列表";
Blockly.Msg.LISTS_TO_TUPLE_TOOLTIP = "将一个元组转换成列表";
Blockly.Msg.BLOCKPY_PRINT_TOOLTIP= "打印指定的文字、数字或其他值，结尾自动换行。";
Blockly.DLMLY_TOOLTIP_TUPLE_MAX = '获取元组中的最大值';
Blockly.DLMLY_TOOLTIP_TUPLE_MIN = '获取元组中的最小值';
Blockly.DLMLY_DE= '的';
Blockly.DLMLY_UPDATE='改为';
Blockly.Msg.DLMLY_LIST_LEN='长度';
Blockly.Msg.DLMLY_LIST_COUNT='个数';
Blockly.Msg.DLMLY_LIST_INDEX='位置';
Blockly.Msg.A_TO_B='转化为';

Blockly.DLMLY_MICROBIT_TYPE_NONE = "空";
Blockly.DLMLY_MICROBIT_WAIT = '等待';
Blockly.DLMLY_MICROBIT_RANDOM = '随机';

Blockly.Msg.TUPLE_TO_SET = "将元组转化为集合";
Blockly.Msg.TUPLE_TO_LISTS = "将元组转化为列表";
Blockly.Msg.SET_TO_TUPLE = "将集合转化为元组";
Blockly.Msg.SET_TO_LISTS = "将集合转化为列表";
Blockly.Msg.MATH_BA ="把";
Blockly.Msg.MATH_JinZhi= "进制";
Blockly.Msg.MATH_ZHW = "转换为";
Blockly.Msg.MATH_Before_two="二进制数转换为";
Blockly.Msg.MATH_Before_eight="八进制数转换为";
Blockly.Msg.MATH_Before_ten="十进制数转换为";
Blockly.Msg.MATH_Before_sixteen="十六进制数转换为";
Blockly.Msg.MATH_Behind_two="二进制数";
Blockly.Msg.MATH_Behind_eight="八进制数";
Blockly.Msg.MATH_Behind_ten="十进制数";
Blockly.Msg.MATH_Behind_sixteen="十六进制数";
Blockly.DLMLY_TOOLTIP_sensor_pin_pressed="返回管脚被触摸状态";
Blockly.DLMLY_TOOLTIP_INOUT_ANALOG_WRITE_SET="设置管脚周期";
Blockly.MICROBIT_controls_TypeLists="返回数据类型";
Blockly.Msg_IN="如果元素（x）在序列中则返回真";
Blockly.Msg.MATH_TWO='二';
Blockly.Msg.MATH_TEN='十';
Blockly.Msg.MATH_EIGHT='八';
Blockly.Msg.MATH_SIXTEEN='十六';
Blockly.Msg.TEXT_GET_INDEX_RANDOM="随机";
Blockly.Msg._GET_TEXT_SUBLIST_TOOLTIP = "返回字符串中指定的部分。";
Blockly.DLMLY_TOOLTIP_TEXT_LENGTH="获取字符串长度";
Blockly.DLMLY_SENOR_IS_PRESSED="按钮被按着返回真";
Blockly.DLMLY_SENOR_WAS_PRESSED="按钮被按下返回真";
Blockly.DLMLY_MICROBIT_JS_CURRENT="当";
Blockly.DLMLY_MICROBIT_JS_STATE="状态为";
Blockly.DLMLY_MICROBIT_PERFORMANCE="执行一些语句";
Blockly.DLMLY_MICROBIT_JS_IS_COMPASS_CALIBRATED1="如果指南针已经校正则返回真";
Blockly.DLMLY_MICROBIT_JS_SET_TEMPO1="设置节奏的分辨率和速度";
Blockly.DLMLY_MICROBIT_PY_ACTUATOR_SPEECH="按指定的音乐属性";
Blockly.DLMLY_MICROBIT_Play_notes1="播放音符列表";
Blockly.DLMLY_MICROBIT_Play_built_in_melody1="播放内置音乐";
Blockly.DLMLY_MICROBIT_Copy_image1="复制图像";
Blockly.Msg.DISPLAY_IMAGE_LET3="平移指定个单位";
Blockly.DLMLY_MICROBIT_image_add="合并两个图像";
Blockly.DLMLY_MICROBIT_image_reduce="从图像1减除掉图像2";
Blockly.DLMLY_MICROBIT_Create_image1="创建图像";
Blockly.DLMLY_MICROBIT_Invert_image1="反显图像";
Blockly.DLMLY_MICROBIT_Display_is_on1="如果显示器已打开则返回真";
Blockly.DLMLY_MICROBIT_JS_MONITOR_SHOW_delay="以指定的时间间隔";
Blockly.DLMLY_MICROBIT_Animate_images1="动画显示图像";
Blockly.DLMLY_MICROBIT_JS_MONITOR_BRIGHTNESS1="获取点(x,y)的亮度";
Blockly.DLMLY_MICROBIT_JS_MONITOR_BRIGHTNESS2="设置点(x,y)的亮度";
Blockly.DLMLY_MICROBIT_Built_in_image1="内置图像";
Blockly.DLMLY_RGB_PIN_COUNT="初始化RGB彩灯模块，包含指定数量的灯";
Blockly.DLMLY_RGB_NUM_R_G_B="设置RGB彩灯模块指定灯的R值,G值,B值";
Blockly.DLMLY_MICROBIT_JS_SERIAL_READ_LINE1="返回串口中的一行字符串";
Blockly.DLMLY_SERIAL_AVAILABLE1="如果串口中的数据可读则返回真";
Blockly.DLMLY_SERIAL_softserial="初始化串口 输入,输出,波特率";
Blockly.DLMLY_MICROBIT_Configure_radio1='配置无线的消息长度,最大队列数量,信道,广播功率,数据速率';
Blockly.DLMLY_MICROBIT_Send_message1="无线发送字符串";
Blockly.DLMLY_MICROBIT_JS_I2C_READ="设置i2c读取数字的设备地址,字节数";
Blockly.DLMLY_MICROBIT_JS_I2C_WRITE="设置i2c写入数字的设备地址,值";
Blockly.Msg.TEXT_PRINT_Huanhang_TOOLTIP="自动换行";
Blockly.DLMLY_MICROBIT_Shiliang_Direction="x,y,z矢量和方向";
Blockly.DLMLY_MICROBIT_Direction="方向";
Blockly.DLMLY_MICROBIT_JS_ACCELERATION1="加速度(mg)";
Blockly.DLMLY_DLM1="年/月/日";
Blockly.DLMLY_DLM2="时/分/秒";
Blockly.DLMLY_LCD_PRINT3="在液晶显示屏第x行,第y列打印字符串";
Blockly.DLMLY_LCD_PRINT4="在液晶显示屏第一行和第二行打印字符串";
Blockly.DLMLY_USE="以";
Blockly.DLMLY_BELONG="的";
Blockly.DLMLY_MICROBIT_PY_STORAGE_CAN_WRITE_ORNOT1="如果文件可写则返回真，反之返回假";
Blockly.DLMLY_MICROBIT_PY_STORAGE_GET_FILENAME="获取文件名称";
Blockly.DLMLY_MICROBIT_IMAGE="图像";
Blockly.DLMLY_MICROBIT_Reset_COMPASS="恢复指南针初始设置";
Blockly.blockpy_turtle_pencolor_hex='设置画笔颜色为十六进制';
Blockly.blockpy_turtle_fillcolor_hex='设置画笔填充颜色为十六进制';
Blockly.blockpy_SET_GET_AND_REMOVE_LAST='获取并删除集合中随机一项';
Blockly.DLMLY_blockpy_set_update='拆分增加';
Blockly.Msg.SET_TO_LISTS_TOOLTIP = "将集合转化为列表";
Blockly.blockpy_set_add_update='拆分增加 列表/字符串';
Blockly.blockpy_USE_SET = '将集合';
Blockly.Msg.SET_TO_LIST = "转化为列表";
Blockly.Msg.DICTS_ADD_OR_CHANGE = "添加或修改为";
Blockly.DLMLY_TOOLTIP_LISTS_CREATE_WITH_TEXT2='创建或修改一个列表。';
Blockly.Msg.PYTHON_LISTS_GET_SUBLIST_TOOLTIP = "复制列表中指定的部分。";
Blockly.Msg.SET_UPDATE_TOOLTIP = "将列表或字符串的内容拆分并添加到集合中。";
Blockly.Msg.SET_POP_TOOLTIP = "获取并删除集合中的一项。";
Blockly.Msg.DICT_LENGTH_TOOLTIP = "返回字典中键的个数。";
Blockly.Msg.DICTS_CLEAR_TOOLTIP = "将字典转化为一个空字典，保留变量。";
Blockly.Msg.DICTS_DEL_TOOLTIP = "清空字典，并删除字典对应的变量。";
Blockly.Msg.LISTS_INDEX_FROM_START_TOOLTIP = "%1是第一项";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM = "返回在列表中的指定位置的项。";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "返回列表中随机一项。";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM = "获取并移除列表中的指定位置的项。";
Blockly.DLMLY_PIN="管脚";
Blockly.DLMLY_Digital_PINMODEIN="数字输入";
Blockly.DLMLY_Digital_PINMODEOUT="数字输出";
Blockly.DLMLY_Analog_PINMODEIN="模拟输入";
Blockly.DLMLY_Analog_PINMODEOUT="模拟输出";
Blockly.DLMLY_Second="秒";
Blockly.DLMLY_mSecond="毫秒";
Blockly.DLMLY_uSecond="微秒";
Blockly.DLMLY_TOOLTIP_INOUT_ANALOG_WRITE_SET_FREQ="设置管脚模拟输出频率";
Blockly.DLMLY_TOOLTIP_CHAOSHENGBO='超声波测距(cm):trigger接管脚15，echo接管脚14，sclk接管脚13';
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "获取并移除列表中随机一项。";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_INSERT = "在列表中的指定位置插入项。";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_CHANGE = "修改列表中指定位置的项。";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_DELETE = "移除列表中指定位置的项。";
Blockly.blockpy_turtle_shape = '形状设置为';
Blockly.blockpy_turtle_shape_arrow = '箭头';
Blockly.blockpy_turtle_shape_turtle = '乌龟';
Blockly.blockpy_turtle_shape_square = '方块';
Blockly.blockpy_turtle_shape_triangle = '三角';
Blockly.blockpy_turtle_shape_circle = '圆形';
Blockly.blockpy_turtle_shape_classic = '默认';
Blockly.blockpy_turtle_write='书写';
Blockly.Msg.TURTLE_SHAPE_TOOLTIP = "设置乌龟的形状，可选形状包括圆形、三角、方形、乌龟、箭头和默认。";
Blockly.Msg.TURTLE_WRITE_TOOLTIP = "使乌龟在画布上当前位置书写指定的文字。";
Blockly.Msg.LISTS_EXTEND_TOOLTIP = "将后一个列表增加到前一个列表结尾。";
Blockly.DLMLY_MICROBIT_LIST_A_VALUE='一个数值';
Blockly.DLMLY_MICROBIT_LIST_A_ITEM='一项';
Blockly.DLMLY_MICROBIT_LIST_ASSIGN_AT='赋值 第';
Blockly.DLMLY_MICROBIT_LIST_EXTEND='扩展增加';
Blockly.DLMLY_MICROBIT_LIST_POP='删除并获取 第';
Blockly.Msg.TURTLE_POS_SHAPE = "获取乌龟当前";
Blockly.Msg.TURTLE_POS = "位置";
Blockly.Msg.TURTLE_SHAPE = "形状";
Blockly.Msg.TURTLE_HEADING = "朝向";
Blockly.DLMLY_TOOLTIP_TURTEL_POS='获取乌龟当前位置，返回一个包含当前位置x坐标和y坐标的元组';
Blockly.DLMLY_TOOLTIP_TURTEL_SHAPE='获取乌龟当前形状，返回一个字符串';
Blockly.Msg.LISTS_CREATE_PYTHON_EMPTY_TITLE = "初始化为空列表";
Blockly.Msg.LISTS_CREATE_PYTHON_EMPTY_TOOLTIP = "返回一个列表，长度为 0，不包含任何数据记录";
Blockly.Msg.LISTS_CREATE_WITH_PYTHON_TOOLTIP = "建立一个具有任意数量项目的列表。";
Blockly.DLMLY_TOOLTIP_CONVERT_LIST_TO_TUPLE='将列表转化成元组。';
Blockly.DLMLY_TOOLTIP_CONVERT_LIST_TO_SET='将列表转化成集合。';
Blockly.LANG_LISTS_REVERSE_TOOLTIP = '逆转列表中所有项的顺序。';
Blockly.Msg.LISTS_SORT_TOOLTIP = '将列表中的所有项按照指定顺序指定方式进行排序。';
Blockly.DLMLY_TOOLTIP_LIST_FIND_INDEX='返回指定值在列表中的位置，如果值有多个则返回第一个值的位置。';
Blockly.DLMLY_TOOLTIP_LIST_FIND_COUNT='返回指定值在列表中的个数。';
Blockly.DLMLY_TOOLTIP_LIST_APPEND='将指定值增加到列表末尾。';
Blockly.DLMLY_TOOLTIP_LIST_REMOVE='将指定值从列表中移除，如果列表中有多个值则删除第一个，如果该值不在列表中则报错。';
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT = "在列表中的指定位置增加指定的值。";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_CHANGE = "修改列表中的指定位置的值。";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_DELETE = "移除列表中的指定位置的值。";
Blockly.Msg.DICT_UPDATE = "中的项目对应增加到字典";
Blockly.Msg.MAKE_DICT = "将字典";
Blockly.Msg.DICTS_UPDATE_TOOLTIP = "将前一个字典中的所有条目对应添加到后一个字典中，前者保持不变。";
Blockly.Msg.DICTS_ADD_TOOLTIP = "在字典中添加或修改条目。";
Blockly.Msg.DICTS_DELETE_TOOLTIP = "在字典中移除条目。";
Blockly.DLMLY_TOOLTIP_TUPLE_FIND_INDEX='返回指定值在元组中的位置，如果值有多个则返回第一个值的位置。';
Blockly.DLMLY_TOOLTIP_TUPLE_FIND_COUNT='返回指定值在元组中的个数。';
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_AVERAGE = "返回元组中的数值的平均值。";
Blockly.DLMLY_UART_SETUP="初始化 UART为";
Blockly.DLMLY_TOOLTIP_BLOCKGROUP_GET_TEM_HUM="返回温湿度传感器测得的温度和湿度，温度范围：0~50，湿度范围：20~90%";
Blockly.DLMLY_DHT11_T_H="获取温度和湿度";
Blockly.DLMLY_RECT="绘制矩形";
Blockly.DLMLY_RECT_START="起点";
Blockly.DLMLY_RECT_Fill="填充";
Blockly.DLMLY_MICROBIT_SHOW_RECT = " 起点(x %1 ,y %2 ) 宽度 %3 高度 %4 %5 填充 %6";
Blockly.DLMLY_MICROBIT_SHOW_LINE = "线条 起点(x %1 ,y %2 ) 长度 %3 ";
Blockly.DLMLY_DISPLAY_DRAW="绘制";
Blockly.DLMLY_DISPLAY_RLINE="水平";
Blockly.DLMLY_DISPLAY_VLINE="垂直";
Blockly.DLMLY_MICROBIT_SHOW_LINE_ARBITRARILY="绘制线条 起点(x1 %1 ,y1 %2 ) 终点(x2 %3 ,y2 %4 ) ";
Blockly.DLMLY_ESP32_Create_image='创建图像 %1 %2 %3 %4 %5 %6 %7 %8 %9 %10 %11 %12 %13 %14 %15 %16 %17 %18 %19 %20 %21 %22 %23 %24 %25 %26 %27 %28 %29 %30 %31 %32 %33 %34 %35 %36 %37 %38 %39 %40 %41 %42 %43 %44 %45 %46 %47 %48 %49 %50 %51 %52 %53 %54 %55 %56 %57 %58 %59 %60 %61 %62 %63 %64 %65 %66 %67 %68 %69 %70 %71 %72 %73 %74 %75 %76 %77 %78 %79 %80 %81 %82 %83 %84 %85 %86 %87 %88 %89 %90 %91 %92 %93 %94 %95 %96 %97 %98 %99 %100 %101 %102 %103 %104 %105 %106 %107 %108 %109 %110 %111 %112 %113 %114 %115 %116 %117 %118 %119 %120 %121 %122 %123 %124 %125 %126 %127 %128 %129 %130 %131 %132 %133 %134 %135 %136';
Blockly.DLMLY_ESP32_JS_MONITOR_BRIGHTNESS="如果点(x,y)处灯亮着返回真";
Blockly.DLMLY_ESP32_JS_MONITOR_GET_POINT="处的灯亮着？";
Blockly.DLMLY_ESP32_JS_MONITOR_SET_BRIGHTNESS="设置亮灭";
Blockly.DLMLY_ESP32_ON="亮";
Blockly.DLMLY_ESP32_OFF="灭";
Blockly.DLMLY_ESP32_JS_MONITOR_SET_SCREEN_BRIGHTNESS="设置屏幕亮度";
Blockly.DLMLY_ESP32_JS_MONITOR_GET_SCREEN_BRIGHTNESS="获取屏幕亮度";
Blockly.DLMLY_ESP32_JS_MONITOR_SET_BLINK_RATE="设置闪烁频率";
Blockly.DLMLY_NETWORK_INIT="设置 wifi";
Blockly.DLMLY_NETWORK_MODE="模式为";
Blockly.DLMLY_NETWORK_WIFI_OPEN="激活";
Blockly.DLMLY_NETWORK_WIFI_CLOSE="停用";
Blockly.DLMLY_NETWORK_WIFI_FLAG="网络接口";
Blockly.DLMLY_NETWORK_WIFI_SCAN="扫描可用wifi";
Blockly.DLMLY_ESP32_NETWORK_CONNECT="连接 wifi";
Blockly.DLMLY_ESP32_NETWORK_ID="名称";
Blockly.DLMLY_ESP32_NETWORK_PASSWORD="密码";
Blockly.DLMLY_NETWORK_WIFI_CONNECT="连接到 wifi";
Blockly.DLMLY_SYMBOL_QUESTION="?";
Blockly.DLMLY_ESP32_NETWORK_GET_CONNECT="获取 wifi";
Blockly.DLMLY_ESP32_NETWORK_IP="IP地址";
Blockly.DLMLY_ESP32_NETWORK_MASK="子网掩码";
Blockly.DLMLY_ESP32_NETWORK_GATEWAY="网关";
Blockly.DLMLY_ESP32_NETWORK_STOP_CONNECT="断开 wifi";
Blockly.DLMLY_ESP32_NETWORK_GET_WIFI="获取 wifi";
Blockly.DLMLY_NETWORK_WIFI_ESSID="接入点名称";
Blockly.DLMLY_NETWORK_WIFI_CHANNEL="wifi通道";
Blockly.DLMLY_NETWORK_WIFI_SCAN_ATTRIBUTE="全部特征";
Blockly.DLMLY_ESP32_READ_LINE="读取一行";
Blockly.DLMLY_PINMODEPULLDOWN="下拉输入";
Blockly.DLMLY_ESP32_BLUETOOTH_SETUP="初始化 设置蓝牙";
Blockly.DLMLY_ESP32_BLUETOOTH_ADV_MAN="厂商名字";
Blockly.DLMLY_ESP32_BLUETOOTH_ADV_DEV="设备名字";
Blockly.DLMLY_ESP32_BLUETOOTH_FLAG="广播";
Blockly.DLMLY_ESP32_BLUETOOTH_START="启用";
Blockly.DLMLY_ESP32_BLUETOOTH="蓝牙";
Blockly.DLMLY_ESP32_BDA="连接到远程GATTS服务器";
Blockly.DLMLY_ESP32_BLUETOOTH_SERVICES="获取现有GATTS服务";
Blockly.DLMLY_ESP32_BLUETOOTH_CONNS="获取当前所有客户端连接";
Blockly.DLMLY_ESP32_BLUETOOTH_SCANNING="扫描处于活动状态？";
Blockly.DLMLY_ESP32_BLUETOOTH_SCAN="扫描";
Blockly.DLMLY_ESP32_SERVICE_SETUP="创建GATTSService";
Blockly.DLMLY_MICROBIT_JS_OLED='OLED';
Blockly.DLMLY_ESP32_CONNECT_ONENET="连接";
Blockly.DLMLY_ESP32_ONENET_CLIENT="设备ID";
Blockly.DLMLY_ESP32_ONENET_SERVER="服务器域名";
Blockly.DLMLY_ESP32_ONENET_USERNAME="产品ID";
Blockly.DLMLY_ESP32_ONENET_PASSWORD="产品APIKey";
Blockly.DLMLY_ESP32_ONENET_TOPIC="主题";
Blockly.DLMLY_ESP32_ONENET_SUB="回调函数";
Blockly.DLMLY_ESP32_IOT_CONNECT_WIFI="物联网 确保连接到WIFI";
Blockly.DLMLY_ESP32_ONENET_USERNAME="产品ID";
Blockly.DLMLY_ESP32_ONENET_PASSWORD="产品APIKey";
Blockly.DLMLY_ESP32_DISCONNECT_ONENET="断开连接";
Blockly.DLMLY_ESP32_CHECK_ONENET="接收并执行指令";
Blockly.DLMLY_ESP32_PUBLISH_ONENET="发送信息";
Blockly.DLMLY_ESP32_PUBLISH_ONENET_EMPTY="发送空信息";
Blockly.DLMLY_TO_BITES='转字节';
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_MAX = "返回元组中最大数。";
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_MEDIAN = "返回元组中的中位数。";
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_MIN = "返回元组中最小数。";
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_MODE = "返回元组中的最常见的项的列表。";
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_RANDOM = "从元组中返回一个随机的元素。";
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_STD_DEV = "返回元组的标准偏差。";
Blockly.Msg.MATH_ONLIST_TOOLTIP_TUPLE_SUM = "返回元组中的所有数字的和。";
Blockly.Msg.TUPLE_DEL_TOOLTIP = "删除元组变量，释放元组变量的储存空间。";
Blockly.Msg.PYTHON_TUPLE_GET_SUBLIST_TOOLTIP = "复制元组中指定的部分。";
Blockly.DLMLY_ESP32_NETWORK_SERVER1="设置ESP32为服务端";
Blockly.DLMLY_ESP32_NETWORK_SERVER2="接收消息";
Blockly.DLMLY_MICROBIT_RADIO_SEND="无线发送";
Blockly.DLMLY_MICROBIT_MSG="消息"
Blockly.DLMLY_MICROBIT_MSG_BYTE="消息(含字节)"
Blockly.DLMLY_MICROBIT_MSG_FULL="(消息,信号强度,时间戳)"
Blockly.blockpy_DICT_POP='获取并删除字典中键';
Blockly.Msg.DICT_POP_TOOLTIP = "获取并删除字典中的对应项，返回被删除的值。";
Blockly.Msg.DICTS_DEFAULT_VALUE = "默认值为";
Blockly.Msg.DICTS_SET_DEFAULT = "设置 键";
Blockly.Msg.DICTS_SETDEFAULT_TOOLTIP = "在字典中添加一个键及对应值，如果字典中已有同名键则无效。";
Blockly.Msg.TEXT_TITLE="大写（单词首字母）";
Blockly.Msg.TEXT_CAPITALIZE="大写（句子首字母）";
Blockly.Msg.TEXT_SWAPCASE="大小写对调";
Blockly.Msg.TEXT_LOWER="小写";
Blockly.Msg.TEXT_LJUST="左对齐";
Blockly.Msg.TEXT_CENTER="居中";
Blockly.Msg.TEXT_RJUST="右对齐";
Blockly.DLMLY_DLMPY_REPLACE="替换";
Blockly.Msg.LIST_SPLIT_AS = "按照";
Blockly.Msg.LIST_SPLIT = "划分";
Blockly.DLMLY_TOOLTIP_TEXT_SPLIT="将字符串划分，返回一个列表。";

Blockly.Msg.TEXT_STRIM = "消除";
Blockly.Msg.TEXT_TRIM_BOTH = "两侧";
Blockly.Msg.TEXT_TRIM_LEFT = "左侧";
Blockly.Msg.TEXT_TRIM_RIGHT = "右侧";
Blockly.Msg.TEXT_BLANK = "空格";
Blockly.Msg.TEXT_TRIM_BOTH_TOOLTIP = "复制这段文字的同时删除两端多余的空格。";
Blockly.Msg.TEXT_TRIM_LEFT_TOOLTIP = "复制这段文字的同时删除左侧多余的空格。";
Blockly.Msg.TEXT_TRIM_RIGHT_TOOLTIP = "复制这段文字的同时删除右侧多余的空格。";
Blockly.Msg.LIST_EQUAL_DISTANCE = "等距";
Blockly.Msg.DLMLY_LIST_LENGTH="按长度";
Blockly.blockpy_TURTLE_DONE='乌龟显示图形';
Blockly.blockpy_turtle_bgcolor_hex='设置背景颜色为十六进制 #';
Blockly.DLMLY_TOOLTIP_SERIES_CREATE_FROM_TEXT='用数组或字典创建或修改一个series。';
Blockly.Msg.SERIES_INDEX_VALUE = "获取Series所有";
Blockly.Msg.SERIES_INDEX = "索引";
Blockly.Msg.SERIES_VALUE = "值";
Blockly.Msg.SERIES_INDEX_TOOLTIP = "返回一个列表，包括一个Series所有的索引";
Blockly.Msg.SERIES_VALUE_TOOLTIP = "返回一个列表，包括一个Series所有的值";
Blockly.blockpy_series_create='创建series';
Blockly.blockpy_series_via = '通过列表或字典';
Blockly.blockpy_PYLAB_SHOW='显示绘制图表';
Blockly.blockpy_PYLAB_LEGEND='显示图例';
Blockly.blockpy_PYLAB_TITLE='设置图表标题为';
Blockly.blockpy_PYLAB_SET_LABEL='设置图表';
Blockly.blockpy_PYLAB_LABEL='坐标说明文字为';
Blockly.Msg.PYLAB_LABEL_X = "横";
Blockly.Msg.PYLAB_LABEL_Y = "纵";
Blockly.blockpy_series_set_index = '索引为';

Blockly.blockpy_PYLAB_PLOT='绘制成折线图';
Blockly.blockpy_dataframe_create='创建二维数据表';
Blockly.blockpy_dataframe_via = '通过字典';
Blockly.blockpy_dataframe_set_index_column = '列索引为';
Blockly.blockpy_dataframe_set_index_raw = '行索引为';
Blockly.blockpy_series_create_TOOLTIP='通过字典或列表创建一个series，索引为默认的自然数';
Blockly.blockpy_series_create_index_TOOLTIP='通过字典或列表创建一个series，并指定一个列表作为索引';
Blockly.blockpy_dataframe_create_TOOLTIP='通过字典创建一个二维表，索引为默认的自然数';
Blockly.blockpy_dataframe_create_index_TOOLTIP='通过字典创建一个二维表，并指定列表作为行列索引';
Blockly.blockpy_PYLAB_PLOT_LINE='线型';
Blockly.blockpy_PYLAB_PLOT_LINE_SOLID='实线';
Blockly.blockpy_PYLAB_PLOT_LINE_DOTTED='虚线';
Blockly.blockpy_PYLAB_PLOT_LINE_CHAIN='点划线';
Blockly.blockpy_PYLAB_PLOT_LINE_POINT_DOTTED='点虚线';
Blockly.Msg.COLOUR_CYAN = "青色";
Blockly.Msg.COLOUR_MAGENTA = "品红";
Blockly.Msg.COLOUR_YELLOW = "黄色";
Blockly.Msg.COLOUR_BLACK = "黑色";
Blockly.Msg.COLOUR_WHITE = "白色";
Blockly.blockpy_PYLAB_PLOT_DOT='点型';
Blockly.blockpy_PYLAB_PLOT_DOT_CIRCULAR='圆点';
Blockly.blockpy_PYLAB_PLOT_DOT_LARGE_DOT='大圆点';
Blockly.blockpy_PYLAB_PLOT_DOT_PIXEL='像素点';
Blockly.blockpy_PYLAB_PLOT_DOT_TRIANGLE_UP='正三角';
Blockly.blockpy_PYLAB_PLOT_DOT_TRIANGLE_DOWN='倒三角';
Blockly.blockpy_PYLAB_PLOT_DOT_TRIANGLE_LEFT='左三角';
Blockly.blockpy_PYLAB_PLOT_DOT_TRIANGLE_RIGHT='右三角';
Blockly.blockpy_PYLAB_PLOT_DOT_TRIMARKER_UP='Y形（正向）';
Blockly.blockpy_PYLAB_PLOT_DOT_TRIMARKER_DOWN='Y形（倒向）';
Blockly.blockpy_PYLAB_PLOT_DOT_TRIMARKER_LEFT='Y形（左向）';
Blockly.blockpy_PYLAB_PLOT_DOT_TRIMARKER_RIGHT='Y形（右向）';
Blockly.blockpy_PYLAB_PLOT_DOT_SQUARE='正方形';
Blockly.blockpy_PYLAB_PLOT_DOT_PENTAGON='五边形';
Blockly.blockpy_PYLAB_PLOT_DOT_STAR='星形';
Blockly.blockpy_PYLAB_PLOT_DOT_HEXAGON_VERTICAL='竖六边形';
Blockly.blockpy_PYLAB_PLOT_DOT_HEXAGON_HORIZONTAL='横六边形';
Blockly.blockpy_PYLAB_PLOT_DOT_PLUS='加号';
Blockly.blockpy_PYLAB_PLOT_DOT_CROSS='叉号';
Blockly.blockpy_PYLAB_PLOT_DOT_DIAMOND='菱形（大）';
Blockly.blockpy_PYLAB_PLOT_DOT_DIAMOND_SMALL='菱形（小）';
Blockly.blockpy_PYLAB_PLOT_DOT_VERTICAL='短竖线';
Blockly.blockpy_PYLAB_PLOT_DOT_HORIZONTAL='短横线';

Blockly.DLMLY_MICROBIT_JS_I2C="i2c";
Blockly.DLMLY_ESP32_TOUCH="触摸";
Blockly.DLMLY_ESP32_TOUCH_SENSOR="触摸传感器";
Blockly.DLMLY_ESP32_NEAR="红外反射接近传感器数值";
Blockly.DLMLY_ESP32_INTERRUPT="中断";
Blockly.DLMLY_ESP32_PITCH="音高";
Blockly.DLMLY_ESP32_DUTY="音调";
Blockly.DLMLY_ESP32_LIGHT="获取光线传感器的值";
Blockly.DLMLY_ESP32_SOUND="获取声音传感器的值";
Blockly.DLMLY_ESP32_MONITOR_SCROLL='滚动';
Blockly.DLMLY_PYTHON_GLOBAL='使用全局变量';
Blockly.DLMLY_ESP32_TOGGLE="反转";
Blockly.DLMLY_PYTHON_ONE_SHOT="单次触发";
Blockly.DLMLY_PYTHON_PERIODIC="多次触发";
Blockly.DLMLY_RTC_TIME="设置RTC时钟";
Blockly.blockpy_REQUESTS_GET='发起get请求 接收为变量';
Blockly.blockpy_REQUESTS_GET_TOOLTIP='利用HTTP协议向指定域名发起get请求，将响应结果赋予变量';
Blockly.blockpy_REQUESTS_GET_ATTR_STATUS_CODE='状态码';
Blockly.blockpy_REQUESTS_GET_ATTR_TEXT='响应内容';
Blockly.blockpy_REQUESTS_GET_ATTR_CONTENT='二进制内容';
Blockly.blockpy_REQUESTS_GET_ATTR_COOKIES='cookies';
Blockly.blockpy_REQUESTS='请求';
Blockly.blockpy_CONDUCT='发起';
Blockly.DLMLY_ESP32_TIME_TICKS_DIFF='获取两个时间的差值'
Blockly.DLMLY_ESP32_TIME_MINUS='减'
Blockly.DLMLY_ESP32_MACHINE_VALUE='的值'
Blockly.DLMLY_ESP32_RGB_WRITE='生效'
Blockly.DLMLY_GETPRESSURE = '获取大气压强';
Blockly.DLMLY_MICROPYTHON_AS = "为";
Blockly.DLMLY_ESP32_ONEWIRE_SCAN = "扫描";
Blockly.DLMLY_ESP32_ONEWIRE_RESET="重置 OneWire";
Blockly.DLMLY_ESP32_ONEWIRE_READ = "读取字节";
Blockly.DLMLY_ESP32_ONEWIRE_INIT = "初始化 bus";
Blockly.DLMLY_ESP32_ONEWIRE_SELECT = "设置 OneWire";
Blockly.DLMLY_ESP32_I2C_SCAN1 = "搜索I2C";
Blockly.DLMLY_ESP32_I2C_SCAN2 = "总线上设备";
Blockly.DLMLY_ESP32_SPI_SET = "设置 SPI 波特率";
Blockly.DLMLY_ESP32_SPI_BUFFER = "缓冲器";
Blockly.DLMLY_ESP32_SPI_OUTPUT = "同时输出";
Blockly.DLMLY_ESP32_SET = "创建";
Blockly.DLMLY_ESP32_WRITE = "写入";
Blockly.DLMLY_ESP32_BUFFER_READ = "同时读取到缓冲器";
Blockly.DLMLY_ESP32_WNUMBER = "写入数字 地址";
Blockly.DLMLY_ESP32_RNUMBER = "读取数字 地址";
Blockly.DLMLY_ESP32_READ = "读取";
Blockly.DLMLY_ESP32_SUCCESS = "成功吗？";
Blockly.DLMLY_ESP32_SPI_INIT = "SPI 初始化";
Blockly.DLMLY_ESP32_REF_VOLTAGE = "参考电压";
Blockly.DLMLY_TOOLTIP_DISPLAY_ONOFF='返回灯的亮灭状态';
Blockly.DLMLY_MICROPYTHON_SOCKET_INIT='创建套接字';
Blockly.DLMLY_MICROPYTHON_SOCKET_TYPE='类型为';
Blockly.DLMLY_MICROPYTHON_SOCKET_LISTEN='开始监听传入连接';
Blockly.DLMLY_MICROPYTHON_SOCKET_QUEUE='最大队列数';
Blockly.DLMLY_MICROPYTHON_SOCKET_LET_SOCKET='将套接字';
Blockly.DLMLY_MICROPYTHON_SOCKET_BIND_TO_ADDRESS='绑定到地址';
Blockly.DLMLY_MICROPYTHON_SOCKET_ACCEPT='接受连接并返回套接字对象';
Blockly.DLMLY_MICROPYTHON_SOCKET_RECEIVE='接收套接字的数据 字节数';
Blockly.DLMLY_MICROPYTHON_SOCKET_SEND='发送';
Blockly.DLMLY_MICROPYTHON_SOCKET_MAKE = "将";
Blockly.DLMLY_MICROPYTHON_SOCKET_TO = "至";
Blockly.DLMLY_MICROPYTHON_SOCKET_CLOSE = "关闭连接";
Blockly.DLMLY_ESP32_MONITOR_GET_SCREEN_IMAGE="获取屏幕图案";
Blockly.DLMLY_ESP32_MONITOR_GET_SCREEN_IMAGE_TOOLTIP="返回屏幕当前显示的图案";
Blockly.DLMLY_ESP32_MONITOR_SHOW_STATIC='静态显示字符串';
Blockly.DLMLY_ESP32_SENOR_GYRO='角速度(rad/s)';
Blockly.Msg.DATAFRAME_RAW = "行";
Blockly.Msg.DATAFRAME_COLUMN = "列";
Blockly.DLMLY_ESP32_MUSIC_PLAY_LISTS='播放音符列表'
Blockly.DLMLY_ESP32_MUSIC_WAIT='等待'
Blockly.DLMLY_ESP32_MUSIC_LOOP='循环'
Blockly.DLMLY_ESP32_DLMGO_MUSIC_PLAY_TONE='显示音符'
Blockly.DLMLY_ESP32_DLMGO_MUSIC_SHOW_IN='在'
Blockly.DLMLY_MICROPYTHON_CLEAR = '清空'
Blockly.DLMLY_MICROPYTHON_FORMAT = '格式化字符串'
Blockly.DLMLY_SYSTEM_TIME_LOCALTIME='获取格式化时间';
Blockly.DLMLY_SYSTEM_TIME_LOCALTIME_ALL="当前时间";
Blockly.DLMLY_SYSTEM_TIME_LOCALTIME_YEAR="当前年份";
Blockly.DLMLY_SYSTEM_TIME_LOCALTIME_MONTH="当前月份";
Blockly.DLMLY_SYSTEM_TIME_LOCALTIME_DATE="当前日期";
Blockly.DLMLY_SYSTEM_TIME_LOCALTIME_HOUR="当前小时";
Blockly.DLMLY_SYSTEM_TIME_LOCALTIME_MINUTE="当前分钟";
Blockly.DLMLY_SYSTEM_TIME_LOCALTIME_SECOND="当前秒钟";
Blockly.DLMLY_SYSTEM_TIME_LOCALTIME_INWEEK="当前是一周的第几天";
Blockly.DLMLY_SYSTEM_TIME_LOCALTIME_INYEAR="当前是一年的第几天";
Blockly.DLMLY_SYSTEM_TIME_LOCALTIME_DST="当前夏令时标记";
Blockly.DLMLY_TURTLE_SCREEN_DELAY='设置动画播放时间间隔为';
Blockly.DLMLY_TOOLTIP_TURTEL_SCREEN_DELAY='设置乌龟绘画动画播放时刷新的时间间隔，默认为10，数值越小动画播放越快';
Blockly.DLMLY_TURTLE_WRITE_MOVE = '画笔随文字移动';
Blockly.DLMLY_TURTLE_WRITE_MOVE_TRUE = '是';
Blockly.DLMLY_TURTLE_WRITE_MOVE_FALSE = '否';
Blockly.DLMLY_TURTLE_WRITE_ALIGN = '文字对齐';
Blockly.DLMLY_TURTLE_WRITE_ALIGN_LEFT = '居左';
Blockly.DLMLY_TURTLE_WRITE_ALIGN_CENTER = '居中';
Blockly.DLMLY_TURTLE_WRITE_ALIGN_RIGHT = '居右';
Blockly.DLMLY_TURTLE_WRITE_FONT_NAME = '字体';
Blockly.DLMLY_TURTLE_WRITE_FONT_NUM = '字号';
Blockly.DLMLY_TURTLE_WRITE_FONT_TYPE = '字形';
Blockly.DLMLY_TURTLE_WRITE_FONT_TYPE_NORMAL = '标准';
Blockly.DLMLY_TURTLE_WRITE_FONT_TYPE_BOLD = '加粗';
Blockly.DLMLY_TURTLE_WRITE_FONT_TYPE_ITALIC = '倾斜';
Blockly.DLMLY_TURTLE_WRITE_FONT_TYPE_BOLD_ITALIC = '倾斜加粗';
Blockly.DLMLY_ESP32_I2C_INIT = "初始化I2C，sda为数据信号，scl为时钟信号，频率为数据传输速率一般为10k或40k";
Blockly.DLMLY_ESP32_I2C_SCAN = "搜索I2C总线上设备，返回设备地址";
Blockly.DLMLY_ESP32_I2C_AVAILABLE = "判断I2C读取数据是否成功，返回真/假";
Blockly.DLMLY_ESP32_SPI_INIT_TOOLTIP = "创建SPI对象并设置波特率(baudrate)，(时钟)极性(polarity):0/1，(时钟)相位(phase):0/1，以及时钟(SCK)，主设备输出，从设备输入(MOSI)，主设备输入，从设备输出(MISO)管脚";
Blockly.DLMLY_ESP32_SPI_SET = "设置SPI波特率";
Blockly.DLMLY_ESP32_SPI_BUFFER_SET = "创建一个缓冲字节流，并设置其大小";
Blockly.DLMLY_ESP32_SPI_READ = "返回SPI读取的字节(需填入读取的字节数)";
Blockly.DLMLY_ESP32_SPI_READ_OUTPUT = "在MOSI上输出0xFF时读取一定数量的字节并返回";
Blockly.DLMLY_ESP32_SPI_READINTO = "返回读取到的缓冲字节流(长度在创建缓冲字节流时已设置)";
Blockly.DLMLY_ESP32_SPI_READINTO_OUTPUT = "读取给定的缓冲字节流并在MOSI上输出0xff";
Blockly.DLMLY_ESP32_SPI_WRITE = "SPI发送字节";
Blockly.DLMLY_ESP32_SPI_WRITE_READINTO = "SPI发送字节并将其读取到缓冲字节流";
Blockly.DLMLY_ESP32_OW_INIT = "在某管脚上创建单总线协议";
Blockly.DLMLY_ESP32_OW_SCAN = "返回总线上的设备列表";
Blockly.DLMLY_ESP32_OW_READ = "读取总线上一个字节";
Blockly.DLMLY_ESP32_OW_WRITE = "在总线上写入字符串/字节";
Blockly.DLMLY_ESP32_OW_SELECT = "通过ROM代码选择特定的设备";
Blockly.DLMLY_ESP32_OW_RESET = "重置总线";
Blockly.DLMLY_ESP32_SERVO_MOVE = '设置舵机的旋转角度（0~180°)';
Blockly.DLMLY_ESP32_LED_SETONOFF = "设置内嵌LED灯的状态";
Blockly.DLMLY_ESP32_LED_GETONOFF = "获取内嵌LED灯当前的状态";
Blockly.DLMLY_ESP32_LED_SETBRIGHT = "设置内嵌LED灯的当前亮度（0~1023）";
Blockly.DLMLY_ESP32_MUSIC_PLAYSHOW = "播放音符列表，并显示对应音符";
Blockly.DLMLY_ESP32_MUSIC_SET_TEMPO = "设置播放音乐的分辨率和速度";
Blockly.DLMLY_ESP32_MUSIC_GET_TEMPO = "获取音乐当前的节奏";
Blockly.DLMLY_ESP32_MUSIC_RESET = "恢复音乐的分辨率、速度等初始设置";
Blockly.DLMLY_ESP32_MUSIC_WRI = "使与RGB彩灯有关的设置全部生效";
Blockly.DLMLY_ESP32_MUSIC_SHOW_STATIC = "在屏幕上静态显示字符串";
Blockly.DLMLY_ESP32_DISPLAY_SETPIXEL = "设置LED点阵灯在(x,y)位置的亮灭状态";
Blockly.DLMLY_ESP32_SHOW_IMAGE_OR_STRING_DELAY="在一段时间内显示图像/字符串";
Blockly.DLMLY_ESP32_SCROLL_IMAGE_OR_STRING_DELAY="在一段时间内滚动显示图像/字符串";
Blockly.DLMLY_OLED_RECT="以设定的顶点与长度绘制矩形";
Blockly.DLMLY_OLED_LINE="以设定的顶点与长度绘制线条";
Blockly.DLMLY_OLED_LINE_ARBIT="以设定的起点与终点绘制线条";
Blockly.DLMLY_ESP32_SENSOR_LIGHT_LEVEL_TOOLTIP="设置传感器亮度等级";
Blockly.DLMLY_ESP32_SENSOR_RTC_INT_TOOLTIP="初始化实时时钟";
Blockly.DLMLY_ESP32_RTC_SET_DATATIME_TOOLTIP="设置实时时钟模块时间";
Blockly.DLMLY_ESP32_RTC_GET_TIME_TOOLTIP = "返回实时时钟的时间"
Blockly.DLMLY_ESP32_NETWORK_INIT_TOOLTIP="设置wifi的工作模式并初始化wifi";
Blockly.DLMLY_ESP32_NETWORK_OPEN_TOOLTIP="网络连接";
Blockly.DLMLY_ESP32_NETWORK_SCAN_TOOLTIP="返回可连接的wifi的";
Blockly.DLMLY_ESP32_NETWORK_CONNECT_TOOLTIP="设置wifi的名称和密码";
Blockly.DLMLY_ESP32_NETWORK_WIFI_CONNECT_TOOLTIP="当连接上wifi时返回为真";
Blockly.DLMLY_ESP32_NETWORK_GET_CONNECT_TOOLTIP="返回已连接上的wifi的地址";
Blockly.DLMLY_ESP32_NETWORK_STOP_TOOLTIP="断开wifi";
Blockly.DLMLY_ESP32_NETWORK_GET_WIFI_TOOLTIP="返回wifi的连接名称";
Blockly.DLMLY_ESP32_NETWORK_AP_CONNECT_TOOLTIP="设置接入点的名称";
Blockly.DLMLY_ESP32_NETWORK_SERVER_TOOLTIP="关闭网络连接";
Blockly.DLMLY_ESP32_NETWORK_SOCKET_INIT_TOOLTIP="设置网络连接协议为";
Blockly.DLMLY_ESP32_NETWORK_SOCKET_BIND_TOOLTIP="将套接字绑定到网络地址";
Blockly.DLMLY_ESP32_NETWORK_SOCKET_LISTEN_TOOLTIP="监听传入的连接";
Blockly.DLMLY_ESP32_NETWORK_SOCKET_ACCEPT_TOOLTIP="接受连接并返回连接的对象";
Blockly.DLMLY_ESP32_NETWORK_SOCKET_RECEIVE_TOOLTIP="利用TCp协议返回接收的数据";
Blockly.DLMLY_ESP32_NETWORK_SOCKET_SEND_TOOLTIP="利用TCP协议发送信息";
Blockly.DLMLY_ESP32_NETWORK_SOCKET_RECEIVE_FROM_TOOLTIP="利用UDP协议返回接收的数据";
Blockly.DLMLY_ESP32_NETWORK_SOCKET_SEND_TO_TOOLTIP="发送信息到指定的网络地址";
Blockly.DLMLY_ESP32_NETWORK_SOCKET_CLOSE_TOOLTIP="关闭网络连接";
Blockly.DLMLY_ESP32_SENSOR_DLMGO_PIN_NEAR_TOOLTIP='返回'
Blockly.ESP32_SENSOR_NIXGO_LIGHT_TOOLTIP = '返回光线传感器的值（0~4095）'
Blockly.ESP32_SENSOR_NIXGO_SOUND_TOOLTIP = '返回声音传感器的值（0~4095）'
Blockly.DLMLY_MICROBIT_SENSOR_BMP_temperature_TOOLTIP = "获取温度（-45~+85℃)"
Blockly.DLMLY_MICROBIT_SENSOR_BMP_press_TOOLTIP = "获取大气压强（0~20000hPa)"
Blockly.DLMLY_MICROBIT_SENSOR_SHT_temperature_TOOLTIP = "获取温度（-40~+125℃）"
Blockly.DLMLY_MICROBIT_SENSOR_SHT_HUM_TOOLTIP = "获取湿度（0~100%）"
Blockly.DLMLY_ESP32_SENSOR_USE_I2C_TOOLTIP='初始化传感器类型为：'
Blockly.DLMLY_MICROBIT_SENSOR_DS18X20_TOOLTIP ='返回温度，范围为（-55~+125℃）'
//@author:zyc 2018-12-6
Blockly.DLMLY_TOOLTIP_RTC_SETTIME = Blockly.DLMLY_RTCSETTIME;
Blockly.DLMLY_TOOLTIP_RTC_SETDATE = Blockly.DLMLY_RTCSETDATE;
Blockly.DLMLY_TOOLTIP_RGB_INIT = Blockly.DLMLY_RGB_PIN_COUNT;
Blockly.DLMLY_TOOLTIP_RGB_DISPLAY = Blockly.DLMLY_RGB_NUM_R_G_B
Blockly.DLMLY_ESP32_INOUT_HIGHLOW_TOOLTIP = "返回高电平（1）或者低电平（0）";
Blockly.DLMLY_ESP32_INOUT_DIGITAL_INIT_TOOLTIP = "初始化某管脚为数字输出的管脚";
Blockly.DLMLY_ESP32_INOUT_DIGITAL_WRITE_TOOLTIP = "设置某管脚的数字输出值";
Blockly.DLMLY_ESP32_INOUT_DIGITAL_READ_TOOLTIP = "获取某管脚的数字输入值";
Blockly.DLMLY_ESP32_INOUT_ANALOG_READ_INIT_TOOLTIP = "初始化某个管脚为模拟输入的管脚";
Blockly.DLMLY_ESP32_INOUT_ANALOG_ATTEN_TOOLTIP = "设置模拟输入的参考电压为3.3V、2.2V、1.5V或1.2V";
Blockly.DLMLY_ESP32_INOUT_ANALOG_READ_TOOLTIP = "获取模拟输入的值（0~4095）";
Blockly.DLMLY_ESP32_INOUT_PWM_ANALOG_WRITE_INIT_TOOLTIP = "初始化某管脚为模拟输出管脚";
Blockly.DLMLY_ESP32_INOUT_PWM_ANALOG_WRITE_TOOLTIP = "设置某管脚模拟输出的值（0~1023）";
Blockly.DLMLY_ESP32_INOUT_PWM_ANALOG_WRITE_SET_FREQ_TOOLTIP = "设置某管脚模拟输出的频率（1～78125）";
Blockly.DLMLY_ESP32_INOUT_PIN_PRESSED_INIT_TOOLTIP = "初始化某管脚为触摸传感器的管脚";
Blockly.DLMLY_ESP32_INOUT_PIN_PRESSED_TOOLTIP = "获取某管脚触摸传感器的值";
Blockly.DLMLY_ESP32_INOUT_PIN_ATTACHINTERRUPT_TOOLTIP = "设置某个管脚中断的模式为上升、下降或者改变，并且设置回调函数";
Blockly.DLMLY_ESP32_INOUT_ANALOG_WRITE_INIT_TOOLTIP = "初始化某管脚为模拟输出的管脚";
Blockly.DLMLY_ESP32_INOUT_ANALOG_WRITE_TOOLTIP = "设置某管脚的模拟输出的值";
Blockly.DLMLY_ESP32_THRESHOLD="阈值";
Blockly.DLMLY_TOUCHATTACHINTERRUPT_PIN='触摸中断 管脚';
Blockly.DLMLY_ESP32_HW_TIMER='硬件定时器 编号#';
Blockly.DLMLY_PYTHON_CONTROLS_PASS_TOOLTIP = "跳过";
Blockly.DLMLY_PYTHON_CONTROLS_RANGE_TOOLTIP = "返回从开始数到结尾数，步长为第三个参数的列表";//thinking
Blockly.DLMLY_PYTHON_CONTROLS_FOR_RANGE_TOOLTIP = "从起始数到结尾数中取出变量“%1”的值，按指定的间隔，执行指定的块";//thinking
Blockly.DLMLY_ESP32_SYSTEM_TIMER_TOOLTIP = "设置某个计时器的间隔为某数值，模式为单次触发或多次触发，回调函数为某函数";
Blockly.DLMLY_ESP32_SYSTEM_TIMER_INIT_TOOLTIP = "初始化一个计时器";
Blockly.DLMLY_PYTHON_CONTROLS_FLOW_STATEMENTS_TOOLTIP = "跳出所在的循环";
Blockly.DLMLY_ESP32_CONTROLS_MILLIS_TOOLTIP = "获取系统运行时间";
Blockly.DLMLY_ESP32_SYSTEM_TICKS_DIFF_TOOLTIP = "获取两个时间的差值";
Blockly.DLMLY_DLMPY_INOUT_STR_INPUT_TOOLTIP='接收键盘输入，以回车结尾，内容自动转换为字符串，prompt是提供给用户的输入提示';
Blockly.DLMLY_DLMPY_INOUT_INT_INPUT_TOOLTIP='接收键盘输入，以回车结尾，内容自动转换为整数，prompt是提供给用户的输入提示';
Blockly.DLMLY_DLMPY_INOUT_FLOAT_INPUT_TOOLTIP='接收键盘输入，以回车结尾，内容自动转换为小数，prompt是提供给用户的输入提示';
Blockly.DLMLY_DLMPY_CONTROL_END_TOOLTIP='终止程序';
Blockly.DLMLY_DLMPY_CONTROL_TRY_TOOLTIP = "尝试执行一段语句，根据语句正误情况执行一些命令";
Blockly.DLMLY_DLMPY_CONTROL_EXCEPT_TOOLTIP = "如果尝试执行的语句有错误则执行的语句";
Blockly.DLMLY_DLMPY_CONTROL_FINALLY_TOOLTIP = "无论尝试执行的语句是否有错误都执行的语句";
Blockly.DLMLY_DLMPY_TEXT_TITLE_TOOLTIP = "将一个字符串中每个单词的首字母全部转换成大写字母";
Blockly.DLMLY_DLMPY_TEXT_CAPITALIZE_TOOLTIP = "将一个字符串中每个句子的首字母全部转换成大写字母";
Blockly.DLMLY_DLMPY_TEXT_SWAPCASE_TOOLTIP = "将一个字符串中的小写字母全部转换成大写字母，大写字母全部转换成小写字母";
Blockly.DLMLY_DLMPY_TEXT_LOWER_TOOLTIP = "将一个字符串中的所有字符全部转换成小写字母";
Blockly.DLMLY_DLMPY_TEXT_CENTER_TOOLTIP = "设置一个字符串的对齐方式，并用符号填充全部空白";
Blockly.DLMLY_DLMPY_TEXT_FIND_TOOLTIP = "返回一个数字，代表字符串中某个字符首次出现的位置";
Blockly.DLMLY_DLMPY_TEXT_REPLACE_TOOLTIP = "将一段字符串中的指定内容替换成相应的内容";
Blockly.DLMLY_DLMPY_TEXT_SPLIT_TOOLTIP = "将一个字符串按照指定字符拆分成多个字符串，返回一个包含这些子字符串的列表";
Blockly.DLMLY_DLMPY_TURTLE_TEXTINPUT = '乌龟 获取用户输入的字符串';
Blockly.DLMLY_DLMPY_TURTLE_TEXTINPUT_TITLE = '输入框标题为';
Blockly.DLMLY_DLMPY_TURTLE_TEXTINPUT_PROMPT = '用户提示为';
Blockly.Msg.TURTLE_TEXTINPUT_TOOLTIP = "弹出一个对话框获取用户输入的字符串，两个参数分别为对话框标题和用户的输入提示";
Blockly.DLMLY_DLMPY_TURTLE_NUMINPUT = '乌龟 获取用户输入的浮点数';
Blockly.Msg.TURTLE_NUMINPUT_TOOLTIP = "弹出一个对话框获取用户输入的浮点数，参数分别为对话框标题、用户的输入提示、用户输入的默认值、最小值和最大值";
Blockly.DLMLY_DLMPY_TURTLE_DRAW_CIRCLE='绘制圆形';
Blockly.DLMLY_DLMPY_TURTLE_SETXY='坐标设置为';
Blockly.DLMLY_DLMPY_TURTLE_SETXY_TOOLTIP='命令乌龟移动到指定的横纵坐标位置';
Blockly.LANG_MATH_FLOAT_RANDOM = '小数(左开右闭)';
Blockly.DLMLY_DLMPY_TEXT_FORMAT_TOOLTIP = '将第一个字符串参数指定位置处的内容对应替换为相应的参数，返回得到的字符串';
Blockly.Msg.TEXT_RANDOM_CHAR="随机一个字符";
Blockly.Msg.TEXT_RANDOM_CHAR_TOOLTIP="返回字符串中随机的一个字符";
Blockly.LANG_LISTS_CLEAR_TOOLTIP = '删除列表中的所有项，使其变成一个空列表。';
Blockly.Msg.PYTHON_TUPLE_GET_SUBLIST_TOOLTIP = "复制元组中指定的部分。";
Blockly.DLMLY_TOOLTIP_TUPLE_SUM = '返回元组中所有数值的总和';
Blockly.DLMLY_ESP32_IOT_WIFI_CONNECT_TOOLTIP = "连接到名称为某某，密码为某某的wifi";
Blockly.DLMLY_ESP32_IOT_ONENET_CONNECT_TOOLTIP = "创建某个onenet连接";
Blockly.DLMLY_ESP32_IOT_ONENET_DISCONNECT_TOOLTIP = "断开某个onenet连接";
Blockly.DLMLY_ESP32_IOT_ONENET_CHECK_TOOLTIP = "使某个onenet连接接收并执行指令";
Blockly.DLMLY_ESP32_IOT_ONENET_PUBLISH_DICT_TOOLTIP = "让某个onenet连接发送某个字典";
Blockly.DLMLY_ESP32_IOT_ONENET_PUBLISH_TOOLTIP = "让某个onenet连接发送某消息";
Blockly.DLMLY_MICROPYTHON_TYPE_COMPLEX = "复数";
Blockly.Msg.TEXT_LINES_TOOLTIP = "多行文本";
Blockly.DLMLY_DLMPY_LISTS_REMOVE='删除指定项';
Blockly.DLMLY_DLMPY_INOUT_PRINT_EMPTY='光标自动换行';
Blockly.DLMLY_DLMPY_INOUT_PRINT_MANY_ITEM_TOOLTIP='将item拖入或拖出右侧的组块以改变打印的参数个数';
Blockly.DLMLY_DLMPY_INOUT_PRINT_MANY_CONTAINER_TOOLTIP = "增加、删除或重新排列各部分以此重新配置这个组块";
Blockly.DLMLY_DLMPY_INOUT_PRINT_MANY_TOOLTIP='打印多个参数，如果参数个数为0，则让光标下移一行';
Blockly.DLMLY_HANDBIT_DISLPAY_OLED_FILL = '充满';
Blockly.DLMLY_HANDBIT_DISLPAY_OLED_CLEAR = '清屏';
Blockly.DLMLY_PYTHON_CONTROLS_THREAD_START = '启动线程';
Blockly.DLMLY_PYTHON_CONTROLS_THREAD_USE = '调用函数';
Blockly.DLMLY_PYTHON_CONTROLS_THREAD_TOOLTIP = '启动一个新的线程，使用给定的参数(置于元组中)来调用函数';
Blockly.DLMLY_ESP32_SHOW_IMAGE_OR_STRING_OR_ANIMATION='显示(图像/字符串/动画)';
Blockly.DLMLY_DLMPY_TURTLE_WIDTH = '画笔宽度';
Blockly.DLMLY_TOOLTIP_TURTEL_HEADING='获取乌龟当前朝向，返回一个浮点数';
Blockly.DLMLY_TOOLTIP_TURTEL_WIDTH='获取乌龟当前画笔宽度，返回一个整数';

Blockly.DLMLY_PYTHON_SYSTEM_EVAL = '执行文本代码并获取其返回值 代码';
Blockly.DLMLY_PYTHON_SYSTEM_EVAL_TOOLTIP = '返回参数代码执行的返回值，如参数代码无返回值则返回None';
Blockly.DLMLY_PYTHON_TEXT_JOIN_SEQ_USE_STR = '通过字符串';
Blockly.DLMLY_PYTHON_TEXT_JOIN_SEQ_SEQ = '将序列';
Blockly.DLMLY_PYTHON_TEXT_JOIN_SEQ_GET_STR = '连接成一个字符串';
Blockly.DLMLY_PYTHON_TEXT_JOIN_SEQ_TOOLTIP = '第二个参数必须是可迭代的且迭代的每一项类型都是字符串；结果返回一个字符串';
Blockly.DLMLY_PYTHON_TURTLE_EXITONCLICK = '设置点击屏幕结束乌龟画图';

Blockly.DLMLY_MICROPYTHON_SOCKET_CONNECT_TO_ADDRESS='连接到地址';
Blockly.DLMLY_ESP32_NETWORK_SOCKET_CONNECT_TOOLTIP="将套接字连接到网络地址";
Blockly.DLMLY_NETWORK_WIFI_IS_ACTIVE="获取激活状态";
Blockly.DLMLY_NETWORK_WIFI_IS_ACTIVE_TOOLTIP="获取指定网络的激活状态";

Blockly.DLMLY_ESP32_IOT_ONENET_PRINT_DATA="打印数据";
Blockly.DLMLY_PYTHON_LOGIC_COMPARE_CONTINOUS_TOOLTIP = "如果中间项同时满足左右两个不等式则返回真，否则返回假";
Blockly.DLMLY_PYTHON_LOGIC_IS = "是";
Blockly.DLMLY_PYTHON_LOGIC_IS_TOOLTIP = "判断两者是否为同一对象，是同一对象则返回真，否则返回假";
Blockly.DLMLY_PYTHON_INOUT_PRINT_END_TOOLTIP = "打印指定的文字、数字或其他值，以指定的内容为结尾。";
Blockly.DLMLY_PYTHON_MATH_CONSTANT = "常数";
Blockly.DLMLY_PYTHON_MATH_CONSTANT_PI_TOOLTIP = "圆周率常数的近似值（保留小数点后15位）";
Blockly.DLMLY_PYTHON_MATH_CONSTANT_E_TOOLTIP = "自然常数的近似值（保留小数点后15位）";
Blockly.DLMLY_ESP32_DISPLAY_ANIMATE = "内置动画";
Blockly.DLMLY_PYTHON_LISTS_ZIP_ITEM = "迭代器";
Blockly.DLMLY_PYTHON_LISTS_ZIP_ITEM_TOOLTIP='将迭代器拖入或拖出右侧的组块以改变打印的参数个数';
Blockly.DLMLY_PYTHON_LISTS_ZIP = "打包迭代器";
Blockly.DLMLY_PYTHON_LISTS_ZIP_TOOLTIP = "将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的列表。如果各个迭代器的元素个数不一致，则返回列表的长度与最短的对象相同";
////////blynk////////////////////////////
Blockly.blynk_IOT_AUTH='Blynk授权码';
Blockly.blynk_WIFI_SSID='Wi-Fi名称';
Blockly.blynk_WIFI_PASS='Wi-Fi密码';
Blockly.blynk_IOT_GET_DATA='从App获取数据 虚拟管脚';
Blockly.blynk_IOT_PUSH_DATA='发送数据到App';
Blockly.blynk_IOT_DATA='数据';
Blockly.BLYNK_VIRTUALPIN='虚拟管脚';
Blockly.blynk_SERVER_INFO='服务器信息';
Blockly.blynk_SERVER_ADD='服务器地址';
Blockly.blynk_IOT_DATA_TYPE='数据类型';
Blockly.blynk_IOT_INT='整型';
Blockly.blynk_IOT_STRING='字符串';
Blockly.blynk_IOT_DOUBLE='浮点型';
Blockly.blynk_IOT_VAR_NAME='变量名';

Blockly.blynk_TIMER='Blynk定时器';
Blockly.blynk_IOT_WidgetLED='LED组件 虚拟管脚';
Blockly.blynk_IOT_WidgetLED_ON='开';
Blockly.blynk_IOT_WidgetLED_OFF='关';
Blockly.blynk_iot_WidgetLED_COLOR='颜色';
Blockly.blynk_IOT_WidgetLED_VALUE='亮度';
Blockly.blynk_IOT_IR_SEND='红外控制空调 品牌';
Blockly.blynk_IOT_ON='开';
Blockly.blynk_IOT_OFF='关';
Blockly.blynk_IOT_GREE='格力';
Blockly.blynk_IOT_MIDEA='美的';
Blockly.blynk_IOT_FAN='送风';
Blockly.blynk_IOT_HEAT= '制热';
Blockly.blynk_IOT_COOL='制冷';
Blockly.blynk_IOT_DRY='抽湿';
Blockly.blynk_IOT_AUTO='自动';
Blockly.blynk_IOT_FAN_3='高速';
Blockly.blynk_IOT_FAN_2='中速';
Blockly.blynk_IOT_FAN_1='低速';
Blockly.blynk_IOT_FAN_0='自动';
Blockly.blynk_IOT_IR_MODE='模式';
Blockly.blynk_IOT_IR_FAN='风速';
Blockly.blynk_IOT_IR_TEMP='温度';
Blockly.blynk_IOT_IR_POWER='电源';

Blockly.blynk_IOT_IR_RECEIVE_RAW='红外信号解码 管脚';
Blockly.blynk_IOT_IR_SEND='红外发送 管脚';
Blockly.blynk_IOT_IR_SEND_CODE='编码内容';


//OLED
Blockly.OLED = 'OLED';
Blockly.OLEDGET = '获取OLED';
Blockly.OLED_CLEAR='OLED清屏';
Blockly.DLMLY_HEIGHT = '高度';
Blockly.DLMLY_WIDTH = '宽度';
Blockly.OLED_DRAWPIXE = '画点';
Blockly.OLED_POSX = 'x坐标';
Blockly.OLED_POSY = 'y坐标';
Blockly.OLED_PAGE = '页面';
Blockly.OLED_DRAWLINE = '画线';
Blockly.OLED_START_X = '起点x';
Blockly.OLED_START_Y = '起点y';
Blockly.OLED_END_X = '终点x';
Blockly.OLED_END_Y = '终点y';
Blockly.OLED_HOR = '水平';
Blockly.OLED_VER = '垂直';
Blockly.OLED_LENGTH = '长度';
Blockly.OLED_DRAW_TRIANGLE = '画三角形';
Blockly.OLED_D0_X = 'A点x';
Blockly.OLED_D0_Y = 'A点y';
Blockly.OLED_D1_X = 'B点x';
Blockly.OLED_D1_Y = 'B点y';
Blockly.OLED_D2_X = 'C点x';
Blockly.OLED_D2_Y = 'C点y';
Blockly.OLED_D3_X = 'D点x';
Blockly.OLED_D3_Y = 'D点y';
Blockly.OLED_DRAW_RECTANGLE = '画矩形';
Blockly.OLED_L_U_X = '左上角x';
Blockly.OLED_L_U_Y = '左上角y';
Blockly.OLED_DRAWSTRLINE = '画直线';
Blockly.OLED_DRAW_RAD_RECTANGLE = '画圆角矩形';
Blockly.OLED_RADIUS = '圆角半径';
Blockly.OLED_CIRCLE_RADIUS = '半径';
Blockly.OLED_DRAW_CIRCLE = '画圆';
Blockly.OLED_CENTER_CIRCLE_X = '圆心x';
Blockly.OLED_CENTER_CIRCLE_Y = '圆心y';
Blockly.OLED_ELLIPSE_RADIUS_X = 'x方向半径';
Blockly.OLED_ELLIPSE_RADIUS_Y = 'y方向半径';
Blockly.OLED_DRAW_ELLIPSE = '画椭圆';
Blockly.OLED_DRAWSTR = '显示字符串';
Blockly.OLED_PRINT_VAR = '显示变量';
Blockly.OLED_STRING = '内容';
Blockly.OLED_SET_FONT = '设置字体';
Blockly.oled_draw4Str = '显示多行文本';
Blockly.oled_page_tooltip='新建OLED页面';
Blockly.oled_setFont_tooltip='设置字体,小字体11px,中字体20px,大字体25px';
Blockly.oled_print_tooltip='打印字符串变量值。';
Blockly.OLED_DRAW_ELLIPSE_TOOLTIP='绘制椭圆，x范围(0~127),y范围(0~63)';
Blockly.OLED_INIT='OLED初始化';
Blockly.OLED_INIT2='OLED初始化(I2C)';
Blockly.OLED_INIT2_TOOLTIP='接IIC接口,A4 (SDA), A5 (SCL)';
Blockly.OLED_SOLID='实心';
Blockly.OLED_HOLLOW='空心';
Blockly.OLED_WHOLE_CICILE='整圆';
Blockly.OLED_UP_R='右上';
Blockly.OLED_UP_L='左上';
Blockly.OLED_LOW_R='右下';
Blockly.OLED_LOW_L='左下';
Blockly.OLED_normal='常规';
Blockly.OLED_bold='加粗';
Blockly.BIG='大';
Blockly.MIDDLE='中';
Blockly.SMALL='小';
Blockly.OLED_DEGREE0='0度';
Blockly.OLED_DEGREE90='90度';
Blockly.OLED_DEGREE180='180度';
Blockly.OLED_DEGREE270='270度';
Blockly.OLED_BITMAP='显示图像(汉字)';
Blockly.OLED_BITMAP_NAME='字模名称';
Blockly.OLED_BITMAP_DATA='字模数据';
Blockly.OLED_GET_HEIGHT_TOOLTIP='获取OLED的宽度或高度';
Blockly.OLED_DEF_BMP_DATA_TOOLTIP='设置一个字模名称，将图像/汉字取模结果粘贴到字模数据中。';
Blockly.OLED_SHOW_BMP_TOOLTIP='设置需要显示图像/汉字的坐标和它的宽高，再设置字模名称。';
Blockly.OLED_DRAW_PIXE_TOOLTIP='设置坐标，在OLED上绘制点。';
Blockly.OLED_DRAW_LINE_TOOLTIP='设置直线的起点和终点坐标，画出一条直线。';
Blockly.OLED_FONT_wqy12_t_chinese1='宋体12号小字体集1(411字)';
Blockly.OLED_FONT_wqy12_t_chinese2='宋体12号小字体集2(574字)';
Blockly.OLED_FONT_wqy12_t_chinese3='宋体12号小字体集3(993字)';
Blockly.OLED_FONT_wqy14_t_chinese1='宋体14号小字体集1(411字)';
Blockly.OLED_FONT_wqy14_t_chinese2='宋体14号小字体集2(574字)';
Blockly.OLED_FONT_wqy14_t_chinese3='宋体14号小字体集3(993字)';
Blockly.OLED_FONT_wqy16_t_chinese1='宋体16号小字体集1(411字)';
Blockly.OLED_FONT_wqy16_t_chinese2='宋体16号小字体集2(574字)';
Blockly.OLED_FONT_wqy16_t_chinese3='宋体16号小字体集3(993字)';
Blockly.OLED_FONT_wqy12_t_gb2312a='宋体12号大字体集A(4041字)';
Blockly.OLED_FONT_wqy12_t_gb2312b='宋体12号大字体集B(4531字)';
Blockly.OLED_FONT_wqy12_t_gb2312='宋体12号全集(7539字)';
Blockly.OLED_FONT_wqy14_t_gb2312a='宋体14号大字体集A(4041字)';
Blockly.OLED_FONT_wqy14_t_gb2312b='宋体14号大字体集B(4531字)';
Blockly.OLED_FONT_wqy14_t_gb2312='宋体14号全集(7539字)';
Blockly.OLED_FONT_wqy16_t_gb2312a='宋体16号大字体集A(4041字)';
Blockly.OLED_FONT_wqy16_t_gb2312b='宋体16号大字体集B(4531字)';
Blockly.OLED_FONT_wqy16_t_gb2312='宋体16号全集(7539字)';


Blockly.blynk_EMAIL='发送邮件';
Blockly.blynk_EMAIL_ADD='邮件地址';
Blockly.blynk_EMAIL_SUBJECT='邮件主题';
Blockly.blynk_EMAIL_CONTENT='邮件内容';

Blockly.blynk_BRIDGE_AUTH='桥接授权码';
Blockly.blynk_bridge_digitalWrite='桥接数字输出';
Blockly.blynk_bridge_AnaloglWrite='桥接模拟输出';
Blockly.BLYNK_BRIDGE_VIRTUALPIN='桥接虚拟管脚';

Blockly.blynk_WidgetRTC_init='RTC组件初始化';
Blockly.blynk_WidgetRTC_setSyncInterval='同步间隔';
Blockly.blynk_WidgetRTC_mintues='分钟';
Blockly.blynk_WidgetRTC_get_time='RTC组件获取';

Blockly.blynk_iot_playmusic='播放音乐组件';


Blockly.GD5800_MP3='GD5800 MP3模块';
Blockly.DLMLY_MP3_PLAY='播放';
Blockly.DLMLY_MP3_PAUSE='暂停';
Blockly.DLMLY_MP3_NEXT='下一曲';
Blockly.DLMLY_MP3_PREV='上一曲';
Blockly.DLMLY_MP3_VOL_UP='音量加';
Blockly.DLMLY_MP3_VOL_DOWN='音量减';

Blockly.DLMLY_MP3_LOOP_MODE='循环模式';
Blockly.DLMLY_MP3_LOOP_ALL='全部循环';
Blockly.DLMLY_MP3_LOOP_FOLDER='文件夹内循环';
Blockly.DLMLY_MP3_LOOP_ONE='单曲循环';
Blockly.DLMLY_MP3_LOOP_RAM='随机播放';



Blockly.DLMLY_MP3_EQ_MODE='音效';
Blockly.DLMLY_MP3_EQ_NORMAL='普通';
Blockly.DLMLY_MP3_EQ_POP='流行';
Blockly.DLMLY_MP3_EQ_ROCK='摇滚';
Blockly.DLMLY_MP3_EQ_JAZZ='爵士';
Blockly.DLMLY_MP3_EQ_CLASSIC='古典';
Blockly.DLMLY_MP3_EQ_BASS='低音';
Blockly.DLMLY_MP3_VOL='音量';
Blockly.DLMLY_MP3_PLAY_NUM='播放第';
Blockly.blynk_NOTIFY_CONTENT='内容';
Blockly.blynk_NOTIFY='发送通知';
Blockly.blynk_USB_SERVER_INFO='USB连接模式';
Blockly.IICSCAN='IIC设备地址查找';
Blockly.blynk_smartconfig='一键配网';
Blockly.blynk_QR='扫码学习';
Blockly.blynk_terminal='终端组件显示';
Blockly.blynk_IOT_terminal_get='从终端获取字符串';
Blockly.blynk_VIDEOURL='视频流';
Blockly.blynk_LIGHT='光线传感器组件';
Blockly.blynk_GRAVITY='重力传感器组件';
Blockly.blynk_ACC='加速度传感器组件';
Blockly.blynk_ACC_tooltip='返回值范围-9~9。';
Blockly.blynk_time_input_1='时间输入组件(简单)';
Blockly.BLYNK_CONNECTED='硬件已连接';
Blockly.BLYNK_APP_CONNECTED='APP已连接';
Blockly.BLYNK_APP_DISCONNECTED='APP离线';
Blockly.BLYNK_syncAll='同步所有管脚状态';
Blockly.blynk_IOT_syncVirtual='同步虚拟管脚状态';

Blockly.DLMLY_MOTOR_SPEED = '速度(-255~255)';
Blockly.DLMLY_MOTOR= '电机';
Blockly.DLMLY_MOTOR_SPEED_PIN='速度管脚';
Blockly.DLMLY_MOTOR_DIR_PIN='方向管脚';

Blockly.DLMLY_HARDWARE='S4A硬件';
Blockly.DLMLY_HARDWARE_SERIAL='串口号';
Blockly.DLMLY_HARDWARE_START='启动交互';
Blockly.DlmGo_MPU9250='9轴加速度传感器';
Blockly.DlmGo_MPU9250_AX='x轴加速度';
Blockly.DlmGo_MPU9250_AY='y轴加速度';
Blockly.DlmGo_MPU9250_AZ='z轴加速度';
Blockly.DlmGo_MPU9250_GX='x轴角速度';
Blockly.DlmGo_MPU9250_GY='y轴角速度';
Blockly.DlmGo_MPU9250_GZ='z轴角速度';
Blockly.DlmGo_MPU9250_MX='x轴磁场';
Blockly.DlmGo_MPU9250_MY='y轴磁场';
Blockly.DlmGo_MPU9250_MZ='z轴磁场';

Blockly.DLMLY_HANBIT_SHOW_CIRCLE = " 圆心(x %1 ,y %2 ) 半径 %3 %4 填充 %5";
Blockly.DLMLY_HANBIT_SHOW_triangle = " 顶点(x0 %1 ,y0 %2 ) (x1 %3 ,y1 %4 ) (x2 %5 ,y2 %6 ) %7 填充 %8";
Blockly.DLMLY_HANBIT_DRAW_TRIANGLE = "三角形";
Blockly.MICROBIT_SENSOR_LIGHT_TOOLTIP = '返回光线传感器的值（0~255）';


/* 掌控板_物联网 */
Blockly.MPYTHON_BLYNK_TERMINAL_WIDGET_VPIN_HELPURL = '';
Blockly.MPYTHON_BLYNK_TERMINAL_WIDGET_VPIN_MESSAGE0 = '自定义终端部件 Terminal 虚拟管脚 V %1';
Blockly.MPYTHON_BLYNK_TERMINAL_WIDGET_VPIN_TOOLTIP = '';

Blockly.MPYTHON_BLYNK_SYNC_VIRTUAL_HELPURL = '';
Blockly.MPYTHON_BLYNK_SYNC_VIRTUAL_MESSAGE0 = '同步虚拟管脚的状态 V %1';
Blockly.MPYTHON_BLYNK_SYNC_VIRTUAL_TOOLTIP = '';

Blockly.MPYTHON_BLYNK_ON_DISCONNECTED_HELPURL = '';
Blockly.MPYTHON_BLYNK_ON_DISCONNECTED_MESSAGE0 = '当 Blynk 断开连接时';
Blockly.MPYTHON_BLYNK_ON_DISCONNECTED_TOOLTIP = '';

Blockly.MPYTHON_BLYNK_ON_CONNECTED_HELPURL = '';
Blockly.MPYTHON_BLYNK_ON_CONNECTED_MESSAGE0 = '当 Blynk 连接时';
Blockly.MPYTHON_BLYNK_ON_CONNECTED_TOOLTIP = '';

Blockly.MPYTHON_BLYNKTIMER_RUN_HELPURL = '';
Blockly.MPYTHON_BLYNKTIMER_RUN_MESSAGE0 = '运行 Blynk 定时器进程';
Blockly.MPYTHON_BLYNKTIMER_RUN_TOOLTIP = '建议放在 \'一直重复\' 中循环执行';

Blockly.MPYTHON_BLYNK_GET_TIMERS_HELPURL = '';
Blockly.MPYTHON_BLYNK_GET_TIMERS_MESSAGE0 = '可用的 Blynk 定时器';
Blockly.MPYTHON_BLYNK_GET_TIMERS_TOOLTIP = "";

Blockly.MPYTHON_BLYNK_STOP_TIMERS_HELPURL = '';
Blockly.MPYTHON_BLYNK_STOP_TIMERS_MESSAGE0 = '停止 Blynk 定时器 %1';
Blockly.MPYTHON_BLYNK_STOP_TIMERS_TOOLTIP =
    '注意:\n定时器序号为自动获取，自上而下，从0开始且连续，不可"定时器0，定时器2"，此处暴露序号参数为方便查看！\n参数:\nno_timers_err=False-如果所有计时器都停止，禁用异常触发';


Blockly.MPYTHON_BLYNK_SET_PROPERTY_HELPURL = '';
Blockly.MPYTHON_BLYNK_SET_PROPERTY_MESSAGE0 = '给虚拟管脚添加   属性 %1 值 %2';
Blockly.MPYTHON_BLYNK_SET_PROPERTY_TOOLTIP = "放于 read 或 write 事件中，虚拟管脚由事件决定，与该管脚绑定的组件会拥有添加的属性";


Blockly.MPYTHON_BLYNK_EMAIL_HELPURL = '';
Blockly.MPYTHON_BLYNK_EMAIL_MESSAGE0 = '向 %1 发邮件 主题 %2 正文 %3';
Blockly.MPYTHON_BLYNK_EMAIL_TOOLTIP = "";


Blockly.MPYTHON_BLYNK_RUN_HELPURL = '';
Blockly.MPYTHON_BLYNK_RUN_MESSAGE0 = '运行 Blynk 进程';
Blockly.MPYTHON_BLYNK_RUN_TOOLTIP = '建议放在 \'一直重复\' 中循环执行';

Blockly.MPYTHON_BLYNK_APP_NOTIFY_HELPURL = '';
Blockly.MPYTHON_BLYNK_APP_NOTIFY_MESSAGE0 = 'Blynk APP 显示通知 %1';
Blockly.MPYTHON_BLYNK_APP_NOTIFY_TOOLTIP = '';

Blockly.MPYTHON_BLYNKTIMER_HELPURL = '';
Blockly.MPYTHON_BLYNKTIMER_MESSAGE0 = 'Blynk 定时器 %1 %2 周期 %3 秒';
Blockly.MPYTHON_BLYNKTIMER_TOOLTIP = '注意:\n定时器序号为自动获取，自上而下，从0开始且连续，不可"定时器0，定时器2"，此处暴露序号参数为方便查看！\n参数:\nno_timers_err=False-如果所有计时器都停止，禁用异常触发';

Blockly.MPYTHON_BLYNK_SENSOR_DATA_TO_APP_HELPURL = '';
Blockly.MPYTHON_BLYNK_SENSOR_DATA_TO_APP_MESSAGE0 = '发送数据 %1 到 Blynk APP 的 虚拟管脚 V %2';
Blockly.MPYTHON_BLYNK_SENSOR_DATA_TO_APP_TOOLTIP = '虚拟管脚：V0 ~ V255';

Blockly.MPYTHON_BLYNK_SETUP_HELPURL = '';
Blockly.MPYTHON_BLYNK_SETUP_MESSAGE0 = 'Blynk 设置 %1 服务器 %2 端口 %3 授权码 %4';
Blockly.MPYTHON_BLYNK_SETUP_TOOLTIP = '服务器默认为 blynk-cloud.com，端口默认为 80';

Blockly.MPYTHON_BLYNK_APP_DATA_HELPURL = '';
 Blockly.MPYTHON_BLYNK_APP_DATA_MESSAGE0 = '当 从 Blynk APP 收到 虚拟管脚 V %1 的值 %2';
 Blockly.MPYTHON_BLYNK_APP_DATA_TOOLTIP = '虚拟管脚：V0 ~ V255';

Blockly.DLMLY_readTempC='获取摄氏度';
Blockly.DLMLY_readTempF='获取华氏度';
Blockly.DLMLY_MPU6050='MPU6050陀螺仪';
Blockly.DLMLY_MPU6050_update='MPU6050陀螺仪刷新数据';
Blockly.DLMLY_Accel_X ='X轴加速度';
Blockly.DLMLY_Accel_Y ='Y轴加速度';
Blockly.DLMLY_Accel_Z ='Z轴加速度';
Blockly.DLMLY_Gyro_X ='X轴角度';
Blockly.DLMLY_Gyro_Y ='Y轴角度';
Blockly.DLMLY_Gyro_Z ='Z轴角度';

return Blockly.Msg;
})); 
